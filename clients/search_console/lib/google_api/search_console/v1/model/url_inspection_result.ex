# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.SearchConsole.V1.Model.UrlInspectionResult do
  @moduledoc """
  URL inspection result, including all inspection results.

  ## Attributes

  *   `ampResult` (*type:* `GoogleApi.SearchConsole.V1.Model.AmpInspectionResult.t`, *default:* `nil`) - Result of the AMP analysis. Absent if the page is not an AMP page.
  *   `indexStatusResult` (*type:* `GoogleApi.SearchConsole.V1.Model.IndexStatusInspectionResult.t`, *default:* `nil`) - Result of the index status analysis.
  *   `inspectionResultLink` (*type:* `String.t`, *default:* `nil`) - Link to Search Console URL inspection.
  *   `mobileUsabilityResult` (*type:* `GoogleApi.SearchConsole.V1.Model.MobileUsabilityInspectionResult.t`, *default:* `nil`) - Result of the Mobile usability analysis.
  *   `richResultsResult` (*type:* `GoogleApi.SearchConsole.V1.Model.RichResultsInspectionResult.t`, *default:* `nil`) - Result of the Rich Results analysis. Absent if there are no rich results found.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :ampResult => GoogleApi.SearchConsole.V1.Model.AmpInspectionResult.t() | nil,
          :indexStatusResult =>
            GoogleApi.SearchConsole.V1.Model.IndexStatusInspectionResult.t() | nil,
          :inspectionResultLink => String.t() | nil,
          :mobileUsabilityResult =>
            GoogleApi.SearchConsole.V1.Model.MobileUsabilityInspectionResult.t() | nil,
          :richResultsResult =>
            GoogleApi.SearchConsole.V1.Model.RichResultsInspectionResult.t() | nil
        }

  field(:ampResult, as: GoogleApi.SearchConsole.V1.Model.AmpInspectionResult)
  field(:indexStatusResult, as: GoogleApi.SearchConsole.V1.Model.IndexStatusInspectionResult)
  field(:inspectionResultLink)

  field(:mobileUsabilityResult,
    as: GoogleApi.SearchConsole.V1.Model.MobileUsabilityInspectionResult
  )

  field(:richResultsResult, as: GoogleApi.SearchConsole.V1.Model.RichResultsInspectionResult)
end

defimpl Poison.Decoder, for: GoogleApi.SearchConsole.V1.Model.UrlInspectionResult do
  def decode(value, options) do
    GoogleApi.SearchConsole.V1.Model.UrlInspectionResult.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.SearchConsole.V1.Model.UrlInspectionResult do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
