# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.SearchConsole.V1.Model.InspectUrlIndexRequest do
  @moduledoc """
  Index inspection request.

  ## Attributes

  *   `inspectionUrl` (*type:* `String.t`, *default:* `nil`) - Required. URL to inspect. Must be under the property specified in "site_url".
  *   `languageCode` (*type:* `String.t`, *default:* `nil`) - Optional. An [IETF BCP-47](https://en.wikipedia.org/wiki/IETF_language_tag) language code representing the requested language for translated issue messages, e.g. "en-US", "or "de-CH". Default value is "en-US".
  *   `siteUrl` (*type:* `String.t`, *default:* `nil`) - Required. The URL of the property as defined in Search Console. **Examples:** `http://www.example.com/` for a URL-prefix property, or `sc-domain:example.com` for a Domain property.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :inspectionUrl => String.t() | nil,
          :languageCode => String.t() | nil,
          :siteUrl => String.t() | nil
        }

  field(:inspectionUrl)
  field(:languageCode)
  field(:siteUrl)
end

defimpl Poison.Decoder, for: GoogleApi.SearchConsole.V1.Model.InspectUrlIndexRequest do
  def decode(value, options) do
    GoogleApi.SearchConsole.V1.Model.InspectUrlIndexRequest.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.SearchConsole.V1.Model.InspectUrlIndexRequest do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
