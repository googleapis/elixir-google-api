# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudBuild.V2.Model.TaskRef do
  @moduledoc """
  TaskRef can be used to refer to a specific instance of a task. PipelineRef can be used to refer to a specific instance of a Pipeline.

  ## Attributes

  *   `name` (*type:* `String.t`, *default:* `nil`) - Optional. Name of the task.
  *   `params` (*type:* `list(GoogleApi.CloudBuild.V2.Model.Param.t)`, *default:* `nil`) - Params contains the parameters used to identify the referenced Tekton resource. Example entries might include "repo" or "path" but the set of params ultimately depends on the chosen resolver.
  *   `resolver` (*type:* `String.t`, *default:* `nil`) - Resolver is the name of the resolver that should perform resolution of the referenced Tekton resource.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :name => String.t() | nil,
          :params => list(GoogleApi.CloudBuild.V2.Model.Param.t()) | nil,
          :resolver => String.t() | nil
        }

  field(:name)
  field(:params, as: GoogleApi.CloudBuild.V2.Model.Param, type: :list)
  field(:resolver)
end

defimpl Poison.Decoder, for: GoogleApi.CloudBuild.V2.Model.TaskRef do
  def decode(value, options) do
    GoogleApi.CloudBuild.V2.Model.TaskRef.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudBuild.V2.Model.TaskRef do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
