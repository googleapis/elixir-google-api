# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudBuild.V1.Model.BitbucketServerTriggerConfig do
  @moduledoc """
  BitbucketServerTriggerConfig describes the configuration of a trigger that creates a build whenever a Bitbucket Server event is received.

  ## Attributes

  *   `bitbucketServerConfig` (*type:* `GoogleApi.CloudBuild.V1.Model.BitbucketServerConfig.t`, *default:* `nil`) - Output only. The BitbucketServerConfig specified in the bitbucket_server_config_resource field.
  *   `bitbucketServerConfigResource` (*type:* `String.t`, *default:* `nil`) - Required. The Bitbucket server config resource that this trigger config maps to.
  *   `projectKey` (*type:* `String.t`, *default:* `nil`) - Required. Key of the project that the repo is in. For example: The key for http://mybitbucket.server/projects/TEST/repos/test-repo is "TEST".
  *   `pullRequest` (*type:* `GoogleApi.CloudBuild.V1.Model.PullRequestFilter.t`, *default:* `nil`) - Filter to match changes in pull requests.
  *   `push` (*type:* `GoogleApi.CloudBuild.V1.Model.PushFilter.t`, *default:* `nil`) - Filter to match changes in refs like branches, tags.
  *   `repoSlug` (*type:* `String.t`, *default:* `nil`) - Required. Slug of the repository. A repository slug is a URL-friendly version of a repository name, automatically generated by Bitbucket for use in the URL. For example, if the repository name is 'test repo', in the URL it would become 'test-repo' as in http://mybitbucket.server/projects/TEST/repos/test-repo.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :bitbucketServerConfig => GoogleApi.CloudBuild.V1.Model.BitbucketServerConfig.t() | nil,
          :bitbucketServerConfigResource => String.t() | nil,
          :projectKey => String.t() | nil,
          :pullRequest => GoogleApi.CloudBuild.V1.Model.PullRequestFilter.t() | nil,
          :push => GoogleApi.CloudBuild.V1.Model.PushFilter.t() | nil,
          :repoSlug => String.t() | nil
        }

  field(:bitbucketServerConfig, as: GoogleApi.CloudBuild.V1.Model.BitbucketServerConfig)
  field(:bitbucketServerConfigResource)
  field(:projectKey)
  field(:pullRequest, as: GoogleApi.CloudBuild.V1.Model.PullRequestFilter)
  field(:push, as: GoogleApi.CloudBuild.V1.Model.PushFilter)
  field(:repoSlug)
end

defimpl Poison.Decoder, for: GoogleApi.CloudBuild.V1.Model.BitbucketServerTriggerConfig do
  def decode(value, options) do
    GoogleApi.CloudBuild.V1.Model.BitbucketServerTriggerConfig.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudBuild.V1.Model.BitbucketServerTriggerConfig do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
