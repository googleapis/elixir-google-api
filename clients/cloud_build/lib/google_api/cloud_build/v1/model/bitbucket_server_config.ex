# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudBuild.V1.Model.BitbucketServerConfig do
  @moduledoc """
  BitbucketServerConfig represents the configuration for a Bitbucket Server.

  ## Attributes

  *   `apiKey` (*type:* `String.t`, *default:* `nil`) - Required. Immutable. API Key that will be attached to webhook. Once this field has been set, it cannot be changed. If you need to change it, please create another BitbucketServerConfig.
  *   `connectedRepositories` (*type:* `list(GoogleApi.CloudBuild.V1.Model.BitbucketServerRepositoryId.t)`, *default:* `nil`) - Output only. Connected Bitbucket Server repositories for this config.
  *   `createTime` (*type:* `DateTime.t`, *default:* `nil`) - Time when the config was created.
  *   `hostUri` (*type:* `String.t`, *default:* `nil`) - Required. Immutable. The URI of the Bitbucket Server host. Once this field has been set, it cannot be changed. If you need to change it, please create another BitbucketServerConfig.
  *   `name` (*type:* `String.t`, *default:* `nil`) - The resource name for the config.
  *   `peeredNetwork` (*type:* `String.t`, *default:* `nil`) - Optional. The network to be used when reaching out to the Bitbucket Server instance. The VPC network must be enabled for private service connection. This should be set if the Bitbucket Server instance is hosted on-premises and not reachable by public internet. If this field is left empty, no network peering will occur and calls to the Bitbucket Server instance will be made over the public internet. Must be in the format `projects/{project}/global/networks/{network}`, where {project} is a project number or id and {network} is the name of a VPC network in the project.
  *   `secrets` (*type:* `GoogleApi.CloudBuild.V1.Model.BitbucketServerSecrets.t`, *default:* `nil`) - Required. Secret Manager secrets needed by the config.
  *   `sslCa` (*type:* `String.t`, *default:* `nil`) - Optional. SSL certificate to use for requests to Bitbucket Server. The format should be PEM format but the extension can be one of .pem, .cer, or .crt.
  *   `username` (*type:* `String.t`, *default:* `nil`) - Username of the account Cloud Build will use on Bitbucket Server.
  *   `webhookKey` (*type:* `String.t`, *default:* `nil`) - Output only. UUID included in webhook requests. The UUID is used to look up the corresponding config.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :apiKey => String.t() | nil,
          :connectedRepositories =>
            list(GoogleApi.CloudBuild.V1.Model.BitbucketServerRepositoryId.t()) | nil,
          :createTime => DateTime.t() | nil,
          :hostUri => String.t() | nil,
          :name => String.t() | nil,
          :peeredNetwork => String.t() | nil,
          :secrets => GoogleApi.CloudBuild.V1.Model.BitbucketServerSecrets.t() | nil,
          :sslCa => String.t() | nil,
          :username => String.t() | nil,
          :webhookKey => String.t() | nil
        }

  field(:apiKey)

  field(:connectedRepositories,
    as: GoogleApi.CloudBuild.V1.Model.BitbucketServerRepositoryId,
    type: :list
  )

  field(:createTime, as: DateTime)
  field(:hostUri)
  field(:name)
  field(:peeredNetwork)
  field(:secrets, as: GoogleApi.CloudBuild.V1.Model.BitbucketServerSecrets)
  field(:sslCa)
  field(:username)
  field(:webhookKey)
end

defimpl Poison.Decoder, for: GoogleApi.CloudBuild.V1.Model.BitbucketServerConfig do
  def decode(value, options) do
    GoogleApi.CloudBuild.V1.Model.BitbucketServerConfig.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudBuild.V1.Model.BitbucketServerConfig do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
