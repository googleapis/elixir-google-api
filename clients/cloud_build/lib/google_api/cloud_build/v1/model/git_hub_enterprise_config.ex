# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudBuild.V1.Model.GitHubEnterpriseConfig do
  @moduledoc """
  GitHubEnterpriseConfig represents a configuration for a GitHub Enterprise server.

  ## Attributes

  *   `appId` (*type:* `String.t`, *default:* `nil`) - Required. The GitHub app id of the Cloud Build app on the GitHub Enterprise server.
  *   `createTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. Time when the installation was associated with the project.
  *   `displayName` (*type:* `String.t`, *default:* `nil`) - Optional. Name to display for this config.
  *   `hostUrl` (*type:* `String.t`, *default:* `nil`) - The URL of the github enterprise host the configuration is for.
  *   `name` (*type:* `String.t`, *default:* `nil`) - The full resource name for the GitHubEnterpriseConfig For example: "projects/{$project_id}/locations/{$location_id}/githubEnterpriseConfigs/{$config_id}"
  *   `peeredNetwork` (*type:* `String.t`, *default:* `nil`) - Optional. The network to be used when reaching out to the GitHub Enterprise server. The VPC network must be enabled for private service connection. This should be set if the GitHub Enterprise server is hosted on-premises and not reachable by public internet. If this field is left empty, no network peering will occur and calls to the GitHub Enterprise server will be made over the public internet. Must be in the format `projects/{project}/global/networks/{network}`, where {project} is a project number or id and {network} is the name of a VPC network in the project.
  *   `secrets` (*type:* `GoogleApi.CloudBuild.V1.Model.GitHubEnterpriseSecrets.t`, *default:* `nil`) - Optional. Names of secrets in Secret Manager.
  *   `sslCa` (*type:* `String.t`, *default:* `nil`) - Optional. SSL certificate to use for requests to GitHub Enterprise.
  *   `webhookKey` (*type:* `String.t`, *default:* `nil`) - The key that should be attached to webhook calls to the ReceiveWebhook endpoint.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :appId => String.t() | nil,
          :createTime => DateTime.t() | nil,
          :displayName => String.t() | nil,
          :hostUrl => String.t() | nil,
          :name => String.t() | nil,
          :peeredNetwork => String.t() | nil,
          :secrets => GoogleApi.CloudBuild.V1.Model.GitHubEnterpriseSecrets.t() | nil,
          :sslCa => String.t() | nil,
          :webhookKey => String.t() | nil
        }

  field(:appId)
  field(:createTime, as: DateTime)
  field(:displayName)
  field(:hostUrl)
  field(:name)
  field(:peeredNetwork)
  field(:secrets, as: GoogleApi.CloudBuild.V1.Model.GitHubEnterpriseSecrets)
  field(:sslCa)
  field(:webhookKey)
end

defimpl Poison.Decoder, for: GoogleApi.CloudBuild.V1.Model.GitHubEnterpriseConfig do
  def decode(value, options) do
    GoogleApi.CloudBuild.V1.Model.GitHubEnterpriseConfig.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudBuild.V1.Model.GitHubEnterpriseConfig do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
