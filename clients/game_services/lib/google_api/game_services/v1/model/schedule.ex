# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.GameServices.V1.Model.Schedule do
  @moduledoc """
  The schedule of a recurring or one time event. The event's time span is specified by start_time and end_time. If the scheduled event's timespan is larger than the cron_spec + cron_job_duration, the event will be recurring. If only cron_spec + cron_job_duration are specified, the event is effective starting at the local time specified by cron_spec, and is recurring. ``` start_time|-------[cron job]-------[cron job]-------[cron job]---|end_time cron job: cron spec start time + duration ```

  ## Attributes

  *   `cronJobDuration` (*type:* `String.t`, *default:* `nil`) - The duration for the cron job event. The duration of the event is effective after the cron job's start time.
  *   `cronSpec` (*type:* `String.t`, *default:* `nil`) - The cron definition of the scheduled event. See https://en.wikipedia.org/wiki/Cron. Cron spec specifies the local time as defined by the realm.
  *   `endTime` (*type:* `DateTime.t`, *default:* `nil`) - The end time of the event.
  *   `startTime` (*type:* `DateTime.t`, *default:* `nil`) - The start time of the event.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :cronJobDuration => String.t() | nil,
          :cronSpec => String.t() | nil,
          :endTime => DateTime.t() | nil,
          :startTime => DateTime.t() | nil
        }

  field(:cronJobDuration)
  field(:cronSpec)
  field(:endTime, as: DateTime)
  field(:startTime, as: DateTime)
end

defimpl Poison.Decoder, for: GoogleApi.GameServices.V1.Model.Schedule do
  def decode(value, options) do
    GoogleApi.GameServices.V1.Model.Schedule.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.GameServices.V1.Model.Schedule do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
