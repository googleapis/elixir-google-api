# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContainerAnalysis.V1.Model.UpgradeOccurrence do
  @moduledoc """
  An Upgrade Occurrence represents that a specific resource_url could install a specific upgrade. This presence is supplied via local sources (i.e. it is present in the mirror and the running system has noticed its availability). For Windows, both distribution and windows_update contain information for the Windows update.

  ## Attributes

  *   `distribution` (*type:* `GoogleApi.ContainerAnalysis.V1.Model.UpgradeDistribution.t`, *default:* `nil`) - Metadata about the upgrade for available for the specific operating system for the resource_url. This allows efficient filtering, as well as making it easier to use the occurrence.
  *   `package` (*type:* `String.t`, *default:* `nil`) - Required for non-Windows OS. The package this Upgrade is for.
  *   `parsedVersion` (*type:* `GoogleApi.ContainerAnalysis.V1.Model.Version.t`, *default:* `nil`) - Required for non-Windows OS. The version of the package in a machine + human readable form.
  *   `windowsUpdate` (*type:* `GoogleApi.ContainerAnalysis.V1.Model.WindowsUpdate.t`, *default:* `nil`) - Required for Windows OS. Represents the metadata about the Windows update.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :distribution => GoogleApi.ContainerAnalysis.V1.Model.UpgradeDistribution.t() | nil,
          :package => String.t() | nil,
          :parsedVersion => GoogleApi.ContainerAnalysis.V1.Model.Version.t() | nil,
          :windowsUpdate => GoogleApi.ContainerAnalysis.V1.Model.WindowsUpdate.t() | nil
        }

  field(:distribution, as: GoogleApi.ContainerAnalysis.V1.Model.UpgradeDistribution)
  field(:package)
  field(:parsedVersion, as: GoogleApi.ContainerAnalysis.V1.Model.Version)
  field(:windowsUpdate, as: GoogleApi.ContainerAnalysis.V1.Model.WindowsUpdate)
end

defimpl Poison.Decoder, for: GoogleApi.ContainerAnalysis.V1.Model.UpgradeOccurrence do
  def decode(value, options) do
    GoogleApi.ContainerAnalysis.V1.Model.UpgradeOccurrence.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContainerAnalysis.V1.Model.UpgradeOccurrence do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
