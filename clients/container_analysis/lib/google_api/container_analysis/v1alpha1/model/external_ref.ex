# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContainerAnalysis.V1alpha1.Model.ExternalRef do
  @moduledoc """
  An External Reference allows a Package to reference an external source of additional information, metadata, enumerations, asset identifiers, or downloadable content believed to be relevant to the Package

  ## Attributes

  *   `category` (*type:* `String.t`, *default:* `nil`) - An External Reference allows a Package to reference an external source of additional information, metadata, enumerations, asset identifiers, or downloadable content believed to be relevant to the Package
  *   `comment` (*type:* `String.t`, *default:* `nil`) - Human-readable information about the purpose and target of the reference
  *   `locator` (*type:* `String.t`, *default:* `nil`) - The unique string with no spaces necessary to access the package-specific information, metadata, or content within the target location
  *   `type` (*type:* `String.t`, *default:* `nil`) - Type of category (e.g. 'npm' for the PACKAGE_MANAGER category)
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :category => String.t() | nil,
          :comment => String.t() | nil,
          :locator => String.t() | nil,
          :type => String.t() | nil
        }

  field(:category)
  field(:comment)
  field(:locator)
  field(:type)
end

defimpl Poison.Decoder, for: GoogleApi.ContainerAnalysis.V1alpha1.Model.ExternalRef do
  def decode(value, options) do
    GoogleApi.ContainerAnalysis.V1alpha1.Model.ExternalRef.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContainerAnalysis.V1alpha1.Model.ExternalRef do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
