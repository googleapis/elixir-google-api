# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContainerAnalysis.V1alpha1.Model.ContaineranalysisGoogleDevtoolsCloudbuildV1DependencyGitSourceDependency do
  @moduledoc """
  Represents a git repository as a build dependency.

  ## Attributes

  *   `depth` (*type:* `String.t`, *default:* `nil`) - Optional. How much history should be fetched for the build (default 1, -1 for all history).
  *   `destPath` (*type:* `String.t`, *default:* `nil`) - Required. Where should the files be placed on the worker.
  *   `recurseSubmodules` (*type:* `boolean()`, *default:* `nil`) - Optional. True if submodules should be fetched too (default false).
  *   `repository` (*type:* `GoogleApi.ContainerAnalysis.V1alpha1.Model.ContaineranalysisGoogleDevtoolsCloudbuildV1DependencyGitSourceRepository.t`, *default:* `nil`) - Required. The kind of repo (url or dev connect).
  *   `revision` (*type:* `String.t`, *default:* `nil`) - Required. The revision that we will fetch the repo at.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :depth => String.t() | nil,
          :destPath => String.t() | nil,
          :recurseSubmodules => boolean() | nil,
          :repository =>
            GoogleApi.ContainerAnalysis.V1alpha1.Model.ContaineranalysisGoogleDevtoolsCloudbuildV1DependencyGitSourceRepository.t()
            | nil,
          :revision => String.t() | nil
        }

  field(:depth)
  field(:destPath)
  field(:recurseSubmodules)

  field(:repository,
    as:
      GoogleApi.ContainerAnalysis.V1alpha1.Model.ContaineranalysisGoogleDevtoolsCloudbuildV1DependencyGitSourceRepository
  )

  field(:revision)
end

defimpl Poison.Decoder,
  for:
    GoogleApi.ContainerAnalysis.V1alpha1.Model.ContaineranalysisGoogleDevtoolsCloudbuildV1DependencyGitSourceDependency do
  def decode(value, options) do
    GoogleApi.ContainerAnalysis.V1alpha1.Model.ContaineranalysisGoogleDevtoolsCloudbuildV1DependencyGitSourceDependency.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for:
    GoogleApi.ContainerAnalysis.V1alpha1.Model.ContaineranalysisGoogleDevtoolsCloudbuildV1DependencyGitSourceDependency do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
