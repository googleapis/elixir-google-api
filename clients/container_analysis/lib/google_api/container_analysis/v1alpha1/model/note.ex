# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContainerAnalysis.V1alpha1.Model.Note do
  @moduledoc """
  Provides a detailed description of a `Note`.

  ## Attributes

  *   `attestationAuthority` (*type:* `GoogleApi.ContainerAnalysis.V1alpha1.Model.AttestationAuthority.t`, *default:* `nil`) - A note describing an attestation role.
  *   `baseImage` (*type:* `GoogleApi.ContainerAnalysis.V1alpha1.Model.Basis.t`, *default:* `nil`) - A note describing a base image.
  *   `buildType` (*type:* `GoogleApi.ContainerAnalysis.V1alpha1.Model.BuildType.t`, *default:* `nil`) - Build provenance type for a verifiable build.
  *   `compliance` (*type:* `GoogleApi.ContainerAnalysis.V1alpha1.Model.ComplianceNote.t`, *default:* `nil`) - A note describing a compliance check.
  *   `createTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. The time this note was created. This field can be used as a filter in list requests.
  *   `deployable` (*type:* `GoogleApi.ContainerAnalysis.V1alpha1.Model.Deployable.t`, *default:* `nil`) - A note describing something that can be deployed.
  *   `discovery` (*type:* `GoogleApi.ContainerAnalysis.V1alpha1.Model.Discovery.t`, *default:* `nil`) - A note describing a provider/analysis type.
  *   `expirationTime` (*type:* `DateTime.t`, *default:* `nil`) - Time of expiration for this note, null if note does not expire.
  *   `kind` (*type:* `String.t`, *default:* `nil`) - Output only. This explicitly denotes which kind of note is specified. This field can be used as a filter in list requests.
  *   `longDescription` (*type:* `String.t`, *default:* `nil`) - A detailed description of this `Note`.
  *   `name` (*type:* `String.t`, *default:* `nil`) - The name of the note in the form "projects/{provider_project_id}/notes/{NOTE_ID}"
  *   `package` (*type:* `GoogleApi.ContainerAnalysis.V1alpha1.Model.Package.t`, *default:* `nil`) - A note describing a package hosted by various package managers.
  *   `relatedUrl` (*type:* `list(GoogleApi.ContainerAnalysis.V1alpha1.Model.RelatedUrl.t)`, *default:* `nil`) - URLs associated with this note
  *   `sbom` (*type:* `GoogleApi.ContainerAnalysis.V1alpha1.Model.DocumentNote.t`, *default:* `nil`) - A note describing a software bill of materials.
  *   `shortDescription` (*type:* `String.t`, *default:* `nil`) - A one sentence description of this `Note`.
  *   `spdxFile` (*type:* `GoogleApi.ContainerAnalysis.V1alpha1.Model.FileNote.t`, *default:* `nil`) - A note describing an SPDX File.
  *   `spdxPackage` (*type:* `GoogleApi.ContainerAnalysis.V1alpha1.Model.PackageNote.t`, *default:* `nil`) - A note describing an SPDX Package.
  *   `spdxRelationship` (*type:* `GoogleApi.ContainerAnalysis.V1alpha1.Model.RelationshipNote.t`, *default:* `nil`) - A note describing a relationship between SPDX elements.
  *   `updateTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. The time this note was last updated. This field can be used as a filter in list requests.
  *   `upgrade` (*type:* `GoogleApi.ContainerAnalysis.V1alpha1.Model.UpgradeNote.t`, *default:* `nil`) - A note describing an upgrade.
  *   `vulnerabilityType` (*type:* `GoogleApi.ContainerAnalysis.V1alpha1.Model.VulnerabilityType.t`, *default:* `nil`) - A package vulnerability type of note.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :attestationAuthority =>
            GoogleApi.ContainerAnalysis.V1alpha1.Model.AttestationAuthority.t() | nil,
          :baseImage => GoogleApi.ContainerAnalysis.V1alpha1.Model.Basis.t() | nil,
          :buildType => GoogleApi.ContainerAnalysis.V1alpha1.Model.BuildType.t() | nil,
          :compliance => GoogleApi.ContainerAnalysis.V1alpha1.Model.ComplianceNote.t() | nil,
          :createTime => DateTime.t() | nil,
          :deployable => GoogleApi.ContainerAnalysis.V1alpha1.Model.Deployable.t() | nil,
          :discovery => GoogleApi.ContainerAnalysis.V1alpha1.Model.Discovery.t() | nil,
          :expirationTime => DateTime.t() | nil,
          :kind => String.t() | nil,
          :longDescription => String.t() | nil,
          :name => String.t() | nil,
          :package => GoogleApi.ContainerAnalysis.V1alpha1.Model.Package.t() | nil,
          :relatedUrl => list(GoogleApi.ContainerAnalysis.V1alpha1.Model.RelatedUrl.t()) | nil,
          :sbom => GoogleApi.ContainerAnalysis.V1alpha1.Model.DocumentNote.t() | nil,
          :shortDescription => String.t() | nil,
          :spdxFile => GoogleApi.ContainerAnalysis.V1alpha1.Model.FileNote.t() | nil,
          :spdxPackage => GoogleApi.ContainerAnalysis.V1alpha1.Model.PackageNote.t() | nil,
          :spdxRelationship =>
            GoogleApi.ContainerAnalysis.V1alpha1.Model.RelationshipNote.t() | nil,
          :updateTime => DateTime.t() | nil,
          :upgrade => GoogleApi.ContainerAnalysis.V1alpha1.Model.UpgradeNote.t() | nil,
          :vulnerabilityType =>
            GoogleApi.ContainerAnalysis.V1alpha1.Model.VulnerabilityType.t() | nil
        }

  field(:attestationAuthority, as: GoogleApi.ContainerAnalysis.V1alpha1.Model.AttestationAuthority)

  field(:baseImage, as: GoogleApi.ContainerAnalysis.V1alpha1.Model.Basis)
  field(:buildType, as: GoogleApi.ContainerAnalysis.V1alpha1.Model.BuildType)
  field(:compliance, as: GoogleApi.ContainerAnalysis.V1alpha1.Model.ComplianceNote)
  field(:createTime, as: DateTime)
  field(:deployable, as: GoogleApi.ContainerAnalysis.V1alpha1.Model.Deployable)
  field(:discovery, as: GoogleApi.ContainerAnalysis.V1alpha1.Model.Discovery)
  field(:expirationTime, as: DateTime)
  field(:kind)
  field(:longDescription)
  field(:name)
  field(:package, as: GoogleApi.ContainerAnalysis.V1alpha1.Model.Package)
  field(:relatedUrl, as: GoogleApi.ContainerAnalysis.V1alpha1.Model.RelatedUrl, type: :list)
  field(:sbom, as: GoogleApi.ContainerAnalysis.V1alpha1.Model.DocumentNote)
  field(:shortDescription)
  field(:spdxFile, as: GoogleApi.ContainerAnalysis.V1alpha1.Model.FileNote)
  field(:spdxPackage, as: GoogleApi.ContainerAnalysis.V1alpha1.Model.PackageNote)
  field(:spdxRelationship, as: GoogleApi.ContainerAnalysis.V1alpha1.Model.RelationshipNote)
  field(:updateTime, as: DateTime)
  field(:upgrade, as: GoogleApi.ContainerAnalysis.V1alpha1.Model.UpgradeNote)
  field(:vulnerabilityType, as: GoogleApi.ContainerAnalysis.V1alpha1.Model.VulnerabilityType)
end

defimpl Poison.Decoder, for: GoogleApi.ContainerAnalysis.V1alpha1.Model.Note do
  def decode(value, options) do
    GoogleApi.ContainerAnalysis.V1alpha1.Model.Note.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContainerAnalysis.V1alpha1.Model.Note do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
