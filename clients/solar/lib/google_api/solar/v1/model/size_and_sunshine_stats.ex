# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Solar.V1.Model.SizeAndSunshineStats do
  @moduledoc """
  Size and sunniness quantiles of a roof, or part of a roof.

  ## Attributes

  *   `areaMeters2` (*type:* `number()`, *default:* `nil`) - The area of the roof or roof segment, in m^2. This is the roof area (accounting for tilt), not the ground footprint area.
  *   `groundAreaMeters2` (*type:* `number()`, *default:* `nil`) - The ground footprint area covered by the roof or roof segment, in m^2.
  *   `sunshineQuantiles` (*type:* `list(number())`, *default:* `nil`) - Quantiles of the pointwise sunniness across the area. If there are N values here, this represents the (N-1)-iles. For example, if there are 5 values, then they would be the quartiles (min, 25%, 50%, 75%, max). Values are in annual kWh/kW like max_sunshine_hours_per_year.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :areaMeters2 => number() | nil,
          :groundAreaMeters2 => number() | nil,
          :sunshineQuantiles => list(number()) | nil
        }

  field(:areaMeters2)
  field(:groundAreaMeters2)
  field(:sunshineQuantiles, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.Solar.V1.Model.SizeAndSunshineStats do
  def decode(value, options) do
    GoogleApi.Solar.V1.Model.SizeAndSunshineStats.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Solar.V1.Model.SizeAndSunshineStats do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
