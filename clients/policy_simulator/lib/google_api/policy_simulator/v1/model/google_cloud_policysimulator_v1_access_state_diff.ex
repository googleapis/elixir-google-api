# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.PolicySimulator.V1.Model.GoogleCloudPolicysimulatorV1AccessStateDiff do
  @moduledoc """
  A summary and comparison of the principal's access under the current (baseline) policies and the proposed (simulated) policies for a single access tuple.

  ## Attributes

  *   `accessChange` (*type:* `String.t`, *default:* `nil`) - How the principal's access, specified in the AccessState field, changed between the current (baseline) policies and proposed (simulated) policies.
  *   `baseline` (*type:* `GoogleApi.PolicySimulator.V1.Model.GoogleCloudPolicysimulatorV1ExplainedAccess.t`, *default:* `nil`) - The results of evaluating the access tuple under the current (baseline) policies. If the AccessState couldn't be fully evaluated, this field explains why.
  *   `simulated` (*type:* `GoogleApi.PolicySimulator.V1.Model.GoogleCloudPolicysimulatorV1ExplainedAccess.t`, *default:* `nil`) - The results of evaluating the access tuple under the proposed (simulated) policies. If the AccessState couldn't be fully evaluated, this field explains why.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :accessChange => String.t() | nil,
          :baseline =>
            GoogleApi.PolicySimulator.V1.Model.GoogleCloudPolicysimulatorV1ExplainedAccess.t()
            | nil,
          :simulated =>
            GoogleApi.PolicySimulator.V1.Model.GoogleCloudPolicysimulatorV1ExplainedAccess.t()
            | nil
        }

  field(:accessChange)

  field(:baseline,
    as: GoogleApi.PolicySimulator.V1.Model.GoogleCloudPolicysimulatorV1ExplainedAccess
  )

  field(:simulated,
    as: GoogleApi.PolicySimulator.V1.Model.GoogleCloudPolicysimulatorV1ExplainedAccess
  )
end

defimpl Poison.Decoder,
  for: GoogleApi.PolicySimulator.V1.Model.GoogleCloudPolicysimulatorV1AccessStateDiff do
  def decode(value, options) do
    GoogleApi.PolicySimulator.V1.Model.GoogleCloudPolicysimulatorV1AccessStateDiff.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.PolicySimulator.V1.Model.GoogleCloudPolicysimulatorV1AccessStateDiff do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
