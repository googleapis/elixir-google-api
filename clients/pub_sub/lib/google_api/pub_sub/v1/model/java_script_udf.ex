# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.PubSub.V1.Model.JavaScriptUDF do
  @moduledoc """
  User-defined JavaScript function that can transform or filter a Pub/Sub message.

  ## Attributes

  *   `code` (*type:* `String.t`, *default:* `nil`) - Required. JavaScript code that contains a function `function_name` with the below signature: ``` /** * Transforms a Pub/Sub message. * @return {(Object)>|null)} - To * filter a message, return `null`. To transform a message return a map * with the following keys: * - (required) 'data' : {string} * - (optional) 'attributes' : {Object} * Returning empty `attributes` will remove all attributes from the * message. * * @param {(Object)>} Pub/Sub * message. Keys: * - (required) 'data' : {string} * - (required) 'attributes' : {Object} * * @param {Object} metadata - Pub/Sub message metadata. * Keys: * - (required) 'message_id' : {string} * - (optional) 'publish_time': {string} YYYY-MM-DDTHH:MM:SSZ format * - (optional) 'ordering_key': {string} */ function (message, metadata) { } ```
  *   `functionName` (*type:* `String.t`, *default:* `nil`) - Required. Name of the JavasScript function that should applied to Pub/Sub messages.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :code => String.t() | nil,
          :functionName => String.t() | nil
        }

  field(:code)
  field(:functionName)
end

defimpl Poison.Decoder, for: GoogleApi.PubSub.V1.Model.JavaScriptUDF do
  def decode(value, options) do
    GoogleApi.PubSub.V1.Model.JavaScriptUDF.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.PubSub.V1.Model.JavaScriptUDF do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
