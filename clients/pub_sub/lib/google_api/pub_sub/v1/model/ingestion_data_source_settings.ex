# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.PubSub.V1.Model.IngestionDataSourceSettings do
  @moduledoc """
  Settings for an ingestion data source on a topic.

  ## Attributes

  *   `awsKinesis` (*type:* `GoogleApi.PubSub.V1.Model.AwsKinesis.t`, *default:* `nil`) - Optional. Amazon Kinesis Data Streams.
  *   `awsMsk` (*type:* `GoogleApi.PubSub.V1.Model.AwsMsk.t`, *default:* `nil`) - Optional. Amazon MSK.
  *   `azureEventHubs` (*type:* `GoogleApi.PubSub.V1.Model.AzureEventHubs.t`, *default:* `nil`) - Optional. Azure Event Hubs.
  *   `cloudStorage` (*type:* `GoogleApi.PubSub.V1.Model.CloudStorage.t`, *default:* `nil`) - Optional. Cloud Storage.
  *   `confluentCloud` (*type:* `GoogleApi.PubSub.V1.Model.ConfluentCloud.t`, *default:* `nil`) - Optional. Confluent Cloud.
  *   `platformLogsSettings` (*type:* `GoogleApi.PubSub.V1.Model.PlatformLogsSettings.t`, *default:* `nil`) - Optional. Platform Logs settings. If unset, no Platform Logs will be generated.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :awsKinesis => GoogleApi.PubSub.V1.Model.AwsKinesis.t() | nil,
          :awsMsk => GoogleApi.PubSub.V1.Model.AwsMsk.t() | nil,
          :azureEventHubs => GoogleApi.PubSub.V1.Model.AzureEventHubs.t() | nil,
          :cloudStorage => GoogleApi.PubSub.V1.Model.CloudStorage.t() | nil,
          :confluentCloud => GoogleApi.PubSub.V1.Model.ConfluentCloud.t() | nil,
          :platformLogsSettings => GoogleApi.PubSub.V1.Model.PlatformLogsSettings.t() | nil
        }

  field(:awsKinesis, as: GoogleApi.PubSub.V1.Model.AwsKinesis)
  field(:awsMsk, as: GoogleApi.PubSub.V1.Model.AwsMsk)
  field(:azureEventHubs, as: GoogleApi.PubSub.V1.Model.AzureEventHubs)
  field(:cloudStorage, as: GoogleApi.PubSub.V1.Model.CloudStorage)
  field(:confluentCloud, as: GoogleApi.PubSub.V1.Model.ConfluentCloud)
  field(:platformLogsSettings, as: GoogleApi.PubSub.V1.Model.PlatformLogsSettings)
end

defimpl Poison.Decoder, for: GoogleApi.PubSub.V1.Model.IngestionDataSourceSettings do
  def decode(value, options) do
    GoogleApi.PubSub.V1.Model.IngestionDataSourceSettings.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.PubSub.V1.Model.IngestionDataSourceSettings do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
