# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.BackupDR.V1.Model.ListBackupPlanAssociationsResponse do
  @moduledoc """
  Response message for List BackupPlanAssociation

  ## Attributes

  *   `backupPlanAssociations` (*type:* `list(GoogleApi.BackupDR.V1.Model.BackupPlanAssociation.t)`, *default:* `nil`) - The list of Backup Plan Associations in the project for the specified location. If the `{location}` value in the request is "-", the response contains a list of instances from all locations. In case any location is unreachable, the response will only return backup plan associations in reachable locations and the 'unreachable' field will be populated with a list of unreachable locations.
  *   `nextPageToken` (*type:* `String.t`, *default:* `nil`) - A token identifying a page of results the server should return.
  *   `unreachable` (*type:* `list(String.t)`, *default:* `nil`) - Locations that could not be reached.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :backupPlanAssociations =>
            list(GoogleApi.BackupDR.V1.Model.BackupPlanAssociation.t()) | nil,
          :nextPageToken => String.t() | nil,
          :unreachable => list(String.t()) | nil
        }

  field(:backupPlanAssociations,
    as: GoogleApi.BackupDR.V1.Model.BackupPlanAssociation,
    type: :list
  )

  field(:nextPageToken)
  field(:unreachable, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.BackupDR.V1.Model.ListBackupPlanAssociationsResponse do
  def decode(value, options) do
    GoogleApi.BackupDR.V1.Model.ListBackupPlanAssociationsResponse.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.BackupDR.V1.Model.ListBackupPlanAssociationsResponse do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
