# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.BackupDR.V1.Model.AccessConfig do
  @moduledoc """
  An access configuration attached to an instance's network interface. Only one access config per instance is supported.

  ## Attributes

  *   `externalIpv6` (*type:* `String.t`, *default:* `nil`) - Optional. The external IPv6 address of this access configuration.
  *   `externalIpv6PrefixLength` (*type:* `integer()`, *default:* `nil`) - Optional. The prefix length of the external IPv6 range.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Optional. The name of this access configuration.
  *   `natIP` (*type:* `String.t`, *default:* `nil`) - Optional. The external IP address of this access configuration.
  *   `networkTier` (*type:* `String.t`, *default:* `nil`) - Optional. This signifies the networking tier used for configuring this access
  *   `publicPtrDomainName` (*type:* `String.t`, *default:* `nil`) - Optional. The DNS domain name for the public PTR record.
  *   `setPublicPtr` (*type:* `boolean()`, *default:* `nil`) - Optional. Specifies whether a public DNS 'PTR' record should be created to map the external IP address of the instance to a DNS domain name.
  *   `type` (*type:* `String.t`, *default:* `nil`) - Optional. In accessConfigs (IPv4), the default and only option is ONE_TO_ONE_NAT. In ipv6AccessConfigs, the default and only option is DIRECT_IPV6.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :externalIpv6 => String.t() | nil,
          :externalIpv6PrefixLength => integer() | nil,
          :name => String.t() | nil,
          :natIP => String.t() | nil,
          :networkTier => String.t() | nil,
          :publicPtrDomainName => String.t() | nil,
          :setPublicPtr => boolean() | nil,
          :type => String.t() | nil
        }

  field(:externalIpv6)
  field(:externalIpv6PrefixLength)
  field(:name)
  field(:natIP)
  field(:networkTier)
  field(:publicPtrDomainName)
  field(:setPublicPtr)
  field(:type)
end

defimpl Poison.Decoder, for: GoogleApi.BackupDR.V1.Model.AccessConfig do
  def decode(value, options) do
    GoogleApi.BackupDR.V1.Model.AccessConfig.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.BackupDR.V1.Model.AccessConfig do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
