# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.BackupDR.V1.Model.BackupApplianceBackupConfig do
  @moduledoc """
  BackupApplianceBackupConfig captures the backup configuration for applications that are protected by Backup Appliances.

  ## Attributes

  *   `applicationName` (*type:* `String.t`, *default:* `nil`) - The name of the application.
  *   `backupApplianceId` (*type:* `String.t`, *default:* `nil`) - The ID of the backup appliance.
  *   `backupApplianceName` (*type:* `String.t`, *default:* `nil`) - The name of the backup appliance.
  *   `hostName` (*type:* `String.t`, *default:* `nil`) - The name of the host where the application is running.
  *   `slaId` (*type:* `String.t`, *default:* `nil`) - The ID of the SLA of this application.
  *   `slpName` (*type:* `String.t`, *default:* `nil`) - The name of the SLP associated with the application.
  *   `sltName` (*type:* `String.t`, *default:* `nil`) - The name of the SLT associated with the application.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :applicationName => String.t() | nil,
          :backupApplianceId => String.t() | nil,
          :backupApplianceName => String.t() | nil,
          :hostName => String.t() | nil,
          :slaId => String.t() | nil,
          :slpName => String.t() | nil,
          :sltName => String.t() | nil
        }

  field(:applicationName)
  field(:backupApplianceId)
  field(:backupApplianceName)
  field(:hostName)
  field(:slaId)
  field(:slpName)
  field(:sltName)
end

defimpl Poison.Decoder, for: GoogleApi.BackupDR.V1.Model.BackupApplianceBackupConfig do
  def decode(value, options) do
    GoogleApi.BackupDR.V1.Model.BackupApplianceBackupConfig.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.BackupDR.V1.Model.BackupApplianceBackupConfig do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
