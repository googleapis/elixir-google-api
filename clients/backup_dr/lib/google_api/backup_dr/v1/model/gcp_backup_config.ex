# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.BackupDR.V1.Model.GcpBackupConfig do
  @moduledoc """
  GcpBackupConfig captures the Backup configuration details for Google Cloud resources. All Google Cloud resources regardless of type are protected with backup plan associations.

  ## Attributes

  *   `backupPlan` (*type:* `String.t`, *default:* `nil`) - The name of the backup plan.
  *   `backupPlanAssociation` (*type:* `String.t`, *default:* `nil`) - The name of the backup plan association.
  *   `backupPlanDescription` (*type:* `String.t`, *default:* `nil`) - The description of the backup plan.
  *   `backupPlanRules` (*type:* `list(String.t)`, *default:* `nil`) - The names of the backup plan rules which point to this backupvault
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :backupPlan => String.t() | nil,
          :backupPlanAssociation => String.t() | nil,
          :backupPlanDescription => String.t() | nil,
          :backupPlanRules => list(String.t()) | nil
        }

  field(:backupPlan)
  field(:backupPlanAssociation)
  field(:backupPlanDescription)
  field(:backupPlanRules, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.BackupDR.V1.Model.GcpBackupConfig do
  def decode(value, options) do
    GoogleApi.BackupDR.V1.Model.GcpBackupConfig.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.BackupDR.V1.Model.GcpBackupConfig do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
