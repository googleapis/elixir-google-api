# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.BackupDR.V1.Model.DataSourceBackupApplianceApplication do
  @moduledoc """
  BackupApplianceApplication describes a Source Resource when it is an application backed up by a BackupAppliance.

  ## Attributes

  *   `applianceId` (*type:* `String.t`, *default:* `nil`) - Appliance Id of the Backup Appliance.
  *   `applicationId` (*type:* `String.t`, *default:* `nil`) - The appid field of the application within the Backup Appliance.
  *   `applicationName` (*type:* `String.t`, *default:* `nil`) - The name of the Application as known to the Backup Appliance.
  *   `backupAppliance` (*type:* `String.t`, *default:* `nil`) - Appliance name.
  *   `hostId` (*type:* `String.t`, *default:* `nil`) - Hostid of the application host.
  *   `hostname` (*type:* `String.t`, *default:* `nil`) - Hostname of the host where the application is running.
  *   `type` (*type:* `String.t`, *default:* `nil`) - The type of the application. e.g. VMBackup
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :applianceId => String.t() | nil,
          :applicationId => String.t() | nil,
          :applicationName => String.t() | nil,
          :backupAppliance => String.t() | nil,
          :hostId => String.t() | nil,
          :hostname => String.t() | nil,
          :type => String.t() | nil
        }

  field(:applianceId)
  field(:applicationId)
  field(:applicationName)
  field(:backupAppliance)
  field(:hostId)
  field(:hostname)
  field(:type)
end

defimpl Poison.Decoder, for: GoogleApi.BackupDR.V1.Model.DataSourceBackupApplianceApplication do
  def decode(value, options) do
    GoogleApi.BackupDR.V1.Model.DataSourceBackupApplianceApplication.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.BackupDR.V1.Model.DataSourceBackupApplianceApplication do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
