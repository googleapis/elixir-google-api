# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.OAuth2.V2.Model.Tokeninfo do
  @moduledoc """


  ## Attributes

  *   `audience` (*type:* `String.t`, *default:* `nil`) - Who is the intended audience for this token. In general the same as issued_to.
  *   `email` (*type:* `String.t`, *default:* `nil`) - The email address of the user. Present only if the email scope is present in the request.
  *   `expires_in` (*type:* `integer()`, *default:* `nil`) - The expiry time of the token, as number of seconds left until expiry.
  *   `issued_to` (*type:* `String.t`, *default:* `nil`) - To whom was the token issued to. In general the same as audience.
  *   `scope` (*type:* `String.t`, *default:* `nil`) - The space separated list of scopes granted to this token.
  *   `user_id` (*type:* `String.t`, *default:* `nil`) - The obfuscated user id.
  *   `verified_email` (*type:* `boolean()`, *default:* `nil`) - Boolean flag which is true if the email address is verified. Present only if the email scope is present in the request.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :audience => String.t() | nil,
          :email => String.t() | nil,
          :expires_in => integer() | nil,
          :issued_to => String.t() | nil,
          :scope => String.t() | nil,
          :user_id => String.t() | nil,
          :verified_email => boolean() | nil
        }

  field(:audience)
  field(:email)
  field(:expires_in)
  field(:issued_to)
  field(:scope)
  field(:user_id)
  field(:verified_email)
end

defimpl Poison.Decoder, for: GoogleApi.OAuth2.V2.Model.Tokeninfo do
  def decode(value, options) do
    GoogleApi.OAuth2.V2.Model.Tokeninfo.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.OAuth2.V2.Model.Tokeninfo do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
