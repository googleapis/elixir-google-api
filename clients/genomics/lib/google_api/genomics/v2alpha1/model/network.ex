# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Genomics.V2alpha1.Model.Network do
  @moduledoc """
  VM networking options.

  ## Attributes

  *   `name` (*type:* `String.t`, *default:* `nil`) - The network name to attach the VM's network interface to. The value will be prefixed with `global/networks/` unless it contains a `/`, in which case it is assumed to be a fully specified network resource URL. If unspecified, the global default network is used.
  *   `subnetwork` (*type:* `String.t`, *default:* `nil`) - If the specified network is configured for custom subnet creation, the name of the subnetwork to attach the instance to must be specified here. The value is prefixed with `regions/*/subnetworks/` unless it contains a `/`, in which case it is assumed to be a fully specified subnetwork resource URL. If the `*` character appears in the value, it is replaced with the region that the virtual machine has been allocated in.
  *   `usePrivateAddress` (*type:* `boolean()`, *default:* `nil`) - If set to true, do not attach a public IP address to the VM. Note that without a public IP address, additional configuration is required to allow the VM to access Google services. See https://cloud.google.com/vpc/docs/configure-private-google-access for more information.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :name => String.t() | nil,
          :subnetwork => String.t() | nil,
          :usePrivateAddress => boolean() | nil
        }

  field(:name)
  field(:subnetwork)
  field(:usePrivateAddress)
end

defimpl Poison.Decoder, for: GoogleApi.Genomics.V2alpha1.Model.Network do
  def decode(value, options) do
    GoogleApi.Genomics.V2alpha1.Model.Network.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Genomics.V2alpha1.Model.Network do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
