# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.WebRisk.V1.Model.GoogleCloudWebriskV1RiceDeltaEncoding do
  @moduledoc """
  The Rice-Golomb encoded data. Used for sending compressed 4-byte hashes or compressed removal indices.

  ## Attributes

  *   `encodedData` (*type:* `String.t`, *default:* `nil`) - The encoded deltas that are encoded using the Golomb-Rice coder.
  *   `entryCount` (*type:* `integer()`, *default:* `nil`) - The number of entries that are delta encoded in the encoded data. If only a single integer was encoded, this will be zero and the single value will be stored in `first_value`.
  *   `firstValue` (*type:* `String.t`, *default:* `nil`) - The offset of the first entry in the encoded data, or, if only a single integer was encoded, that single integer's value. If the field is empty or missing, assume zero.
  *   `riceParameter` (*type:* `integer()`, *default:* `nil`) - The Golomb-Rice parameter, which is a number between 2 and 28. This field is missing (that is, zero) if `num_entries` is zero.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :encodedData => String.t() | nil,
          :entryCount => integer() | nil,
          :firstValue => String.t() | nil,
          :riceParameter => integer() | nil
        }

  field(:encodedData)
  field(:entryCount)
  field(:firstValue)
  field(:riceParameter)
end

defimpl Poison.Decoder, for: GoogleApi.WebRisk.V1.Model.GoogleCloudWebriskV1RiceDeltaEncoding do
  def decode(value, options) do
    GoogleApi.WebRisk.V1.Model.GoogleCloudWebriskV1RiceDeltaEncoding.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.WebRisk.V1.Model.GoogleCloudWebriskV1RiceDeltaEncoding do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
