# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Jobs.V4.Model.ApplicationInfo do
  @moduledoc """
  Application related details of a job posting.

  ## Attributes

  *   `emails` (*type:* `list(String.t)`, *default:* `nil`) - Use this field to specify email address(es) to which resumes or applications can be sent. The maximum number of allowed characters for each entry is 255.
  *   `instruction` (*type:* `String.t`, *default:* `nil`) - Use this field to provide instructions, such as "Mail your application to ...", that a candidate can follow to apply for the job. This field accepts and sanitizes HTML input, and also accepts bold, italic, ordered list, and unordered list markup tags. The maximum number of allowed characters is 3,000.
  *   `uris` (*type:* `list(String.t)`, *default:* `nil`) - Use this URI field to direct an applicant to a website, for example to link to an online application form. The maximum number of allowed characters for each entry is 2,000.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :emails => list(String.t()) | nil,
          :instruction => String.t() | nil,
          :uris => list(String.t()) | nil
        }

  field(:emails, type: :list)
  field(:instruction)
  field(:uris, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.Jobs.V4.Model.ApplicationInfo do
  def decode(value, options) do
    GoogleApi.Jobs.V4.Model.ApplicationInfo.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Jobs.V4.Model.ApplicationInfo do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
