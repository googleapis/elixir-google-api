# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Jobs.V4.Model.SpellingCorrection do
  @moduledoc """
  Spell check result.

  ## Attributes

  *   `corrected` (*type:* `boolean()`, *default:* `nil`) - Indicates if the query was corrected by the spell checker.
  *   `correctedHtml` (*type:* `String.t`, *default:* `nil`) - Corrected output with html tags to highlight the corrected words. Corrected words are called out with the "*...*" html tags. For example, the user input query is "software enginear", where the second word, "enginear," is incorrect. It should be "engineer". When spelling correction is enabled, this value is "software *engineer*".
  *   `correctedText` (*type:* `String.t`, *default:* `nil`) - Correction output consisting of the corrected keyword string.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :corrected => boolean() | nil,
          :correctedHtml => String.t() | nil,
          :correctedText => String.t() | nil
        }

  field(:corrected)
  field(:correctedHtml)
  field(:correctedText)
end

defimpl Poison.Decoder, for: GoogleApi.Jobs.V4.Model.SpellingCorrection do
  def decode(value, options) do
    GoogleApi.Jobs.V4.Model.SpellingCorrection.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Jobs.V4.Model.SpellingCorrection do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
