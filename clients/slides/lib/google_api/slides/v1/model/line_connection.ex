# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Slides.V1.Model.LineConnection do
  @moduledoc """
  The properties for one end of a Line connection.

  ## Attributes

  *   `connectedObjectId` (*type:* `String.t`, *default:* `nil`) - The object ID of the connected page element. Some page elements, such as groups, tables, and lines do not have connection sites and therefore cannot be connected to a connector line.
  *   `connectionSiteIndex` (*type:* `integer()`, *default:* `nil`) - The index of the connection site on the connected page element. In most cases, it corresponds to the predefined connection site index from the ECMA-376 standard. More information on those connection sites can be found in both the description of the "cxn" attribute in section 20.1.9.9 and "Annex H. Example Predefined DrawingML Shape and Text Geometries" of "Office Open XML File Formats - Fundamentals and Markup Language Reference", part 1 of [ECMA-376 5th edition](https://ecma-international.org/publications-and-standards/standards/ecma-376/). The position of each connection site can also be viewed from Slides editor.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :connectedObjectId => String.t() | nil,
          :connectionSiteIndex => integer() | nil
        }

  field(:connectedObjectId)
  field(:connectionSiteIndex)
end

defimpl Poison.Decoder, for: GoogleApi.Slides.V1.Model.LineConnection do
  def decode(value, options) do
    GoogleApi.Slides.V1.Model.LineConnection.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Slides.V1.Model.LineConnection do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
