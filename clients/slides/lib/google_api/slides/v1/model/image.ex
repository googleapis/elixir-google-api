# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Slides.V1.Model.Image do
  @moduledoc """
  A PageElement kind representing an image.

  ## Attributes

  *   `contentUrl` (*type:* `String.t`, *default:* `nil`) - An URL to an image with a default lifetime of 30 minutes. This URL is tagged with the account of the requester. Anyone with the URL effectively accesses the image as the original requester. Access to the image may be lost if the presentation's sharing settings change.
  *   `imageProperties` (*type:* `GoogleApi.Slides.V1.Model.ImageProperties.t`, *default:* `nil`) - The properties of the image.
  *   `placeholder` (*type:* `GoogleApi.Slides.V1.Model.Placeholder.t`, *default:* `nil`) - Placeholders are page elements that inherit from corresponding placeholders on layouts and masters. If set, the image is a placeholder image and any inherited properties can be resolved by looking at the parent placeholder identified by the Placeholder.parent_object_id field.
  *   `sourceUrl` (*type:* `String.t`, *default:* `nil`) - The source URL is the URL used to insert the image. The source URL can be empty.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :contentUrl => String.t() | nil,
          :imageProperties => GoogleApi.Slides.V1.Model.ImageProperties.t() | nil,
          :placeholder => GoogleApi.Slides.V1.Model.Placeholder.t() | nil,
          :sourceUrl => String.t() | nil
        }

  field(:contentUrl)
  field(:imageProperties, as: GoogleApi.Slides.V1.Model.ImageProperties)
  field(:placeholder, as: GoogleApi.Slides.V1.Model.Placeholder)
  field(:sourceUrl)
end

defimpl Poison.Decoder, for: GoogleApi.Slides.V1.Model.Image do
  def decode(value, options) do
    GoogleApi.Slides.V1.Model.Image.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Slides.V1.Model.Image do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
