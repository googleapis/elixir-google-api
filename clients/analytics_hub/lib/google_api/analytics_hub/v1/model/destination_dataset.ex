# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.AnalyticsHub.V1.Model.DestinationDataset do
  @moduledoc """
  Defines the destination bigquery dataset.

  ## Attributes

  *   `datasetReference` (*type:* `GoogleApi.AnalyticsHub.V1.Model.DestinationDatasetReference.t`, *default:* `nil`) - Required. A reference that identifies the destination dataset.
  *   `description` (*type:* `String.t`, *default:* `nil`) - Optional. A user-friendly description of the dataset.
  *   `friendlyName` (*type:* `String.t`, *default:* `nil`) - Optional. A descriptive name for the dataset.
  *   `labels` (*type:* `map()`, *default:* `nil`) - Optional. The labels associated with this dataset. You can use these to organize and group your datasets. You can set this property when inserting or updating a dataset. See https://cloud.google.com/resource-manager/docs/creating-managing-labels for more information.
  *   `location` (*type:* `String.t`, *default:* `nil`) - Required. The geographic location where the dataset should reside. See https://cloud.google.com/bigquery/docs/locations for supported locations.
  *   `replicaLocations` (*type:* `list(String.t)`, *default:* `nil`) - Optional. The geographic locations where the dataset should be replicated. See https://cloud.google.com/bigquery/docs/locations for supported locations.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :datasetReference =>
            GoogleApi.AnalyticsHub.V1.Model.DestinationDatasetReference.t() | nil,
          :description => String.t() | nil,
          :friendlyName => String.t() | nil,
          :labels => map() | nil,
          :location => String.t() | nil,
          :replicaLocations => list(String.t()) | nil
        }

  field(:datasetReference, as: GoogleApi.AnalyticsHub.V1.Model.DestinationDatasetReference)
  field(:description)
  field(:friendlyName)
  field(:labels, type: :map)
  field(:location)
  field(:replicaLocations, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.AnalyticsHub.V1.Model.DestinationDataset do
  def decode(value, options) do
    GoogleApi.AnalyticsHub.V1.Model.DestinationDataset.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.AnalyticsHub.V1.Model.DestinationDataset do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
