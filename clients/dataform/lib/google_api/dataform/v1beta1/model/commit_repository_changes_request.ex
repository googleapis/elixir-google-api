# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Dataform.V1beta1.Model.CommitRepositoryChangesRequest do
  @moduledoc """
  `CommitRepositoryChanges` request message.

  ## Attributes

  *   `commitMetadata` (*type:* `GoogleApi.Dataform.V1beta1.Model.CommitMetadata.t`, *default:* `nil`) - Required. The changes to commit to the repository.
  *   `fileOperations` (*type:* `%{optional(String.t) => GoogleApi.Dataform.V1beta1.Model.FileOperation.t}`, *default:* `nil`) - Optional. A map to the path of the file to the operation. The path is the full file path including filename, from repository root.
  *   `requiredHeadCommitSha` (*type:* `String.t`, *default:* `nil`) - Optional. The commit SHA which must be the repository's current HEAD before applying this commit; otherwise this request will fail. If unset, no validation on the current HEAD commit SHA is performed.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :commitMetadata => GoogleApi.Dataform.V1beta1.Model.CommitMetadata.t() | nil,
          :fileOperations =>
            %{optional(String.t()) => GoogleApi.Dataform.V1beta1.Model.FileOperation.t()} | nil,
          :requiredHeadCommitSha => String.t() | nil
        }

  field(:commitMetadata, as: GoogleApi.Dataform.V1beta1.Model.CommitMetadata)
  field(:fileOperations, as: GoogleApi.Dataform.V1beta1.Model.FileOperation, type: :map)
  field(:requiredHeadCommitSha)
end

defimpl Poison.Decoder, for: GoogleApi.Dataform.V1beta1.Model.CommitRepositoryChangesRequest do
  def decode(value, options) do
    GoogleApi.Dataform.V1beta1.Model.CommitRepositoryChangesRequest.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Dataform.V1beta1.Model.CommitRepositoryChangesRequest do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
