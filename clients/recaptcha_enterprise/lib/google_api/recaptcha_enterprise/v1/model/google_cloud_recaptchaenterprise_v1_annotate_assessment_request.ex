# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.RecaptchaEnterprise.V1.Model.GoogleCloudRecaptchaenterpriseV1AnnotateAssessmentRequest do
  @moduledoc """
  The request message to annotate an Assessment.

  ## Attributes

  *   `annotation` (*type:* `String.t`, *default:* `nil`) - Optional. The annotation that will be assigned to the Event. This field can be left empty to provide reasons that apply to an event without concluding whether the event is legitimate or fraudulent.
  *   `hashedAccountId` (*type:* `String.t`, *default:* `nil`) - Optional. Optional unique stable hashed user identifier to apply to the assessment. This is an alternative to setting the hashed_account_id in CreateAssessment, for example when the account identifier is not yet known in the initial request. It is recommended that the identifier is hashed using hmac-sha256 with stable secret.
  *   `reasons` (*type:* `list(String.t)`, *default:* `nil`) - Optional. Optional reasons for the annotation that will be assigned to the Event.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :annotation => String.t() | nil,
          :hashedAccountId => String.t() | nil,
          :reasons => list(String.t()) | nil
        }

  field(:annotation)
  field(:hashedAccountId)
  field(:reasons, type: :list)
end

defimpl Poison.Decoder,
  for:
    GoogleApi.RecaptchaEnterprise.V1.Model.GoogleCloudRecaptchaenterpriseV1AnnotateAssessmentRequest do
  def decode(value, options) do
    GoogleApi.RecaptchaEnterprise.V1.Model.GoogleCloudRecaptchaenterpriseV1AnnotateAssessmentRequest.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for:
    GoogleApi.RecaptchaEnterprise.V1.Model.GoogleCloudRecaptchaenterpriseV1AnnotateAssessmentRequest do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
