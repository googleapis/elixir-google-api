# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.RecaptchaEnterprise.V1.Model.GoogleCloudRecaptchaenterpriseV1IOSKeySettings do
  @moduledoc """
  Settings specific to keys that can be used by iOS apps.

  ## Attributes

  *   `allowAllBundleIds` (*type:* `boolean()`, *default:* `nil`) - Optional. If set to true, allowed_bundle_ids are not enforced.
  *   `allowedBundleIds` (*type:* `list(String.t)`, *default:* `nil`) - Optional. iOS bundle ids of apps allowed to use the key. Example: 'com.companyname.productname.appname'
  *   `appleDeveloperId` (*type:* `GoogleApi.RecaptchaEnterprise.V1.Model.GoogleCloudRecaptchaenterpriseV1AppleDeveloperId.t`, *default:* `nil`) - Optional. Apple Developer account details for the app that is protected by the reCAPTCHA Key. reCAPTCHA leverages platform-specific checks like Apple App Attest and Apple DeviceCheck to protect your app from abuse. Providing these fields allows reCAPTCHA to get a better assessment of the integrity of your app.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :allowAllBundleIds => boolean() | nil,
          :allowedBundleIds => list(String.t()) | nil,
          :appleDeveloperId =>
            GoogleApi.RecaptchaEnterprise.V1.Model.GoogleCloudRecaptchaenterpriseV1AppleDeveloperId.t()
            | nil
        }

  field(:allowAllBundleIds)
  field(:allowedBundleIds, type: :list)

  field(:appleDeveloperId,
    as: GoogleApi.RecaptchaEnterprise.V1.Model.GoogleCloudRecaptchaenterpriseV1AppleDeveloperId
  )
end

defimpl Poison.Decoder,
  for: GoogleApi.RecaptchaEnterprise.V1.Model.GoogleCloudRecaptchaenterpriseV1IOSKeySettings do
  def decode(value, options) do
    GoogleApi.RecaptchaEnterprise.V1.Model.GoogleCloudRecaptchaenterpriseV1IOSKeySettings.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.RecaptchaEnterprise.V1.Model.GoogleCloudRecaptchaenterpriseV1IOSKeySettings do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
