# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Meet.V2.Model.ModerationRestrictions do
  @moduledoc """
  Defines restrictions for features when the meeting is moderated.

  ## Attributes

  *   `chatRestriction` (*type:* `String.t`, *default:* `nil`) - Defines who has permission to send chat messages in the meeting space.
  *   `defaultJoinAsViewerType` (*type:* `String.t`, *default:* `nil`) - Defines whether to restrict the default role assigned to users as viewer.
  *   `presentRestriction` (*type:* `String.t`, *default:* `nil`) - Defines who has permission to share their screen in the meeting space.
  *   `reactionRestriction` (*type:* `String.t`, *default:* `nil`) - Defines who has permission to send reactions in the meeting space.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :chatRestriction => String.t() | nil,
          :defaultJoinAsViewerType => String.t() | nil,
          :presentRestriction => String.t() | nil,
          :reactionRestriction => String.t() | nil
        }

  field(:chatRestriction)
  field(:defaultJoinAsViewerType)
  field(:presentRestriction)
  field(:reactionRestriction)
end

defimpl Poison.Decoder, for: GoogleApi.Meet.V2.Model.ModerationRestrictions do
  def decode(value, options) do
    GoogleApi.Meet.V2.Model.ModerationRestrictions.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Meet.V2.Model.ModerationRestrictions do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
