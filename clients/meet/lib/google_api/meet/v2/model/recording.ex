# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Meet.V2.Model.Recording do
  @moduledoc """
  Metadata about a recording created during a conference.

  ## Attributes

  *   `driveDestination` (*type:* `GoogleApi.Meet.V2.Model.DriveDestination.t`, *default:* `nil`) - Output only. Recording is saved to Google Drive as an MP4 file. The `drive_destination` includes the Drive `fileId` that can be used to download the file using the `files.get` method of the Drive API.
  *   `endTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. Timestamp when the recording ended.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Output only. Resource name of the recording. Format: `conferenceRecords/{conference_record}/recordings/{recording}` where `{recording}` is a 1:1 mapping to each unique recording session during the conference.
  *   `startTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. Timestamp when the recording started.
  *   `state` (*type:* `String.t`, *default:* `nil`) - Output only. Current state.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :driveDestination => GoogleApi.Meet.V2.Model.DriveDestination.t() | nil,
          :endTime => DateTime.t() | nil,
          :name => String.t() | nil,
          :startTime => DateTime.t() | nil,
          :state => String.t() | nil
        }

  field(:driveDestination, as: GoogleApi.Meet.V2.Model.DriveDestination)
  field(:endTime, as: DateTime)
  field(:name)
  field(:startTime, as: DateTime)
  field(:state)
end

defimpl Poison.Decoder, for: GoogleApi.Meet.V2.Model.Recording do
  def decode(value, options) do
    GoogleApi.Meet.V2.Model.Recording.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Meet.V2.Model.Recording do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
