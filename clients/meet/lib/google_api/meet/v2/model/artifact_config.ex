# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Meet.V2.Model.ArtifactConfig do
  @moduledoc """
  Configuration related to meeting artifacts potentially generated by this meeting space.

  ## Attributes

  *   `recordingConfig` (*type:* `GoogleApi.Meet.V2.Model.RecordingConfig.t`, *default:* `nil`) - Configuration for recording.
  *   `smartNotesConfig` (*type:* `GoogleApi.Meet.V2.Model.SmartNotesConfig.t`, *default:* `nil`) - Configuration for auto-smart-notes.
  *   `transcriptionConfig` (*type:* `GoogleApi.Meet.V2.Model.TranscriptionConfig.t`, *default:* `nil`) - Configuration for auto-transcript.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :recordingConfig => GoogleApi.Meet.V2.Model.RecordingConfig.t() | nil,
          :smartNotesConfig => GoogleApi.Meet.V2.Model.SmartNotesConfig.t() | nil,
          :transcriptionConfig => GoogleApi.Meet.V2.Model.TranscriptionConfig.t() | nil
        }

  field(:recordingConfig, as: GoogleApi.Meet.V2.Model.RecordingConfig)
  field(:smartNotesConfig, as: GoogleApi.Meet.V2.Model.SmartNotesConfig)
  field(:transcriptionConfig, as: GoogleApi.Meet.V2.Model.TranscriptionConfig)
end

defimpl Poison.Decoder, for: GoogleApi.Meet.V2.Model.ArtifactConfig do
  def decode(value, options) do
    GoogleApi.Meet.V2.Model.ArtifactConfig.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Meet.V2.Model.ArtifactConfig do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
