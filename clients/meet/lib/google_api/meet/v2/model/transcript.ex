# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Meet.V2.Model.Transcript do
  @moduledoc """
  Metadata for a transcript generated from a conference. It refers to the ASR (Automatic Speech Recognition) result of user's speech during the conference.

  ## Attributes

  *   `docsDestination` (*type:* `GoogleApi.Meet.V2.Model.DocsDestination.t`, *default:* `nil`) - Output only. Where the Google Docs transcript is saved.
  *   `endTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. Timestamp when the transcript stopped.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Output only. Resource name of the transcript. Format: `conferenceRecords/{conference_record}/transcripts/{transcript}`, where `{transcript}` is a 1:1 mapping to each unique transcription session of the conference.
  *   `startTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. Timestamp when the transcript started.
  *   `state` (*type:* `String.t`, *default:* `nil`) - Output only. Current state.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :docsDestination => GoogleApi.Meet.V2.Model.DocsDestination.t() | nil,
          :endTime => DateTime.t() | nil,
          :name => String.t() | nil,
          :startTime => DateTime.t() | nil,
          :state => String.t() | nil
        }

  field(:docsDestination, as: GoogleApi.Meet.V2.Model.DocsDestination)
  field(:endTime, as: DateTime)
  field(:name)
  field(:startTime, as: DateTime)
  field(:state)
end

defimpl Poison.Decoder, for: GoogleApi.Meet.V2.Model.Transcript do
  def decode(value, options) do
    GoogleApi.Meet.V2.Model.Transcript.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Meet.V2.Model.Transcript do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
