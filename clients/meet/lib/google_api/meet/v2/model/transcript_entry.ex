# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Meet.V2.Model.TranscriptEntry do
  @moduledoc """
  Single entry for one userâ€™s speech during a transcript session.

  ## Attributes

  *   `endTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. Timestamp when the transcript entry ended.
  *   `languageCode` (*type:* `String.t`, *default:* `nil`) - Output only. Language of spoken text, such as "en-US". IETF BCP 47 syntax (https://tools.ietf.org/html/bcp47)
  *   `name` (*type:* `String.t`, *default:* `nil`) - Output only. Resource name of the entry. Format: "conferenceRecords/{conference_record}/transcripts/{transcript}/entries/{entry}"
  *   `participant` (*type:* `String.t`, *default:* `nil`) - Output only. Refers to the participant who speaks.
  *   `startTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. Timestamp when the transcript entry started.
  *   `text` (*type:* `String.t`, *default:* `nil`) - Output only. The transcribed text of the participant's voice, at maximum 10K words. Note that the limit is subject to change.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :endTime => DateTime.t() | nil,
          :languageCode => String.t() | nil,
          :name => String.t() | nil,
          :participant => String.t() | nil,
          :startTime => DateTime.t() | nil,
          :text => String.t() | nil
        }

  field(:endTime, as: DateTime)
  field(:languageCode)
  field(:name)
  field(:participant)
  field(:startTime, as: DateTime)
  field(:text)
end

defimpl Poison.Decoder, for: GoogleApi.Meet.V2.Model.TranscriptEntry do
  def decode(value, options) do
    GoogleApi.Meet.V2.Model.TranscriptEntry.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Meet.V2.Model.TranscriptEntry do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
