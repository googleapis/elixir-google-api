# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.DigitalAssetLinks.V1.Model.StatementTemplate do
  @moduledoc """
  A single statement to check in a bulk call using BulkCheck. See CheckRequest for details about each field.

  ## Attributes

  *   `relation` (*type:* `String.t`, *default:* `nil`) - The relationship being asserted between the source and target. If omitted, you must specify a BulkCheckRequest.default_relation value to use here.
  *   `source` (*type:* `GoogleApi.DigitalAssetLinks.V1.Model.Asset.t`, *default:* `nil`) - The source asset that is asserting the statement. If omitted, you must specify a BulkCheckRequest.default_source value to use here.
  *   `target` (*type:* `GoogleApi.DigitalAssetLinks.V1.Model.Asset.t`, *default:* `nil`) - The target that the source is declaring the relationship with. If omitted, you must specify a BulkCheckRequest.default_target to use here.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :relation => String.t() | nil,
          :source => GoogleApi.DigitalAssetLinks.V1.Model.Asset.t() | nil,
          :target => GoogleApi.DigitalAssetLinks.V1.Model.Asset.t() | nil
        }

  field(:relation)
  field(:source, as: GoogleApi.DigitalAssetLinks.V1.Model.Asset)
  field(:target, as: GoogleApi.DigitalAssetLinks.V1.Model.Asset)
end

defimpl Poison.Decoder, for: GoogleApi.DigitalAssetLinks.V1.Model.StatementTemplate do
  def decode(value, options) do
    GoogleApi.DigitalAssetLinks.V1.Model.StatementTemplate.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.DigitalAssetLinks.V1.Model.StatementTemplate do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
