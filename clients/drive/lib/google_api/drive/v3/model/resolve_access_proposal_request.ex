# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Drive.V3.Model.ResolveAccessProposalRequest do
  @moduledoc """
  Request message for resolving an AccessProposal on a file.

  ## Attributes

  *   `action` (*type:* `String.t`, *default:* `nil`) - Required. The action to take on the AccessProposal.
  *   `role` (*type:* `list(String.t)`, *default:* `nil`) - Optional. The roles the approver has allowed, if any. Note: This field is required for the `ACCEPT` action.
  *   `sendNotification` (*type:* `boolean()`, *default:* `nil`) - Optional. Whether to send an email to the requester when the AccessProposal is denied or accepted.
  *   `view` (*type:* `String.t`, *default:* `nil`) - Optional. Indicates the view for this access proposal. This should only be set when the proposal belongs to a view. `published` is the only supported value.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :action => String.t() | nil,
          :role => list(String.t()) | nil,
          :sendNotification => boolean() | nil,
          :view => String.t() | nil
        }

  field(:action)
  field(:role, type: :list)
  field(:sendNotification)
  field(:view)
end

defimpl Poison.Decoder, for: GoogleApi.Drive.V3.Model.ResolveAccessProposalRequest do
  def decode(value, options) do
    GoogleApi.Drive.V3.Model.ResolveAccessProposalRequest.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Drive.V3.Model.ResolveAccessProposalRequest do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
