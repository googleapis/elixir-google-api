# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Run.V1.Model.JobSpec do
  @moduledoc """
  JobSpec describes how the job will look.

  ## Attributes

  *   `runExecutionToken` (*type:* `String.t`, *default:* `nil`) - A unique string used as a suffix for creating a new execution. The Job will become ready when the execution is successfully completed. The sum of job name and token length must be fewer than 63 characters.
  *   `startExecutionToken` (*type:* `String.t`, *default:* `nil`) - A unique string used as a suffix for creating a new execution. The Job will become ready when the execution is successfully started. The sum of job name and token length must be fewer than 63 characters.
  *   `template` (*type:* `GoogleApi.Run.V1.Model.ExecutionTemplateSpec.t`, *default:* `nil`) - Optional. Describes the execution that will be created when running a job.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :runExecutionToken => String.t() | nil,
          :startExecutionToken => String.t() | nil,
          :template => GoogleApi.Run.V1.Model.ExecutionTemplateSpec.t() | nil
        }

  field(:runExecutionToken)
  field(:startExecutionToken)
  field(:template, as: GoogleApi.Run.V1.Model.ExecutionTemplateSpec)
end

defimpl Poison.Decoder, for: GoogleApi.Run.V1.Model.JobSpec do
  def decode(value, options) do
    GoogleApi.Run.V1.Model.JobSpec.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Run.V1.Model.JobSpec do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
