# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.HealthCare.V1beta1.Model.ImportResourcesHistoryRequest do
  @moduledoc """
  Request to import the history of resources.

  ## Attributes

  *   `contentStructure` (*type:* `String.t`, *default:* `nil`) - The content structure in the source location. If not specified, the server treats the input source files as BUNDLE.
  *   `gcsSource` (*type:* `GoogleApi.HealthCare.V1beta1.Model.GoogleCloudHealthcareV1beta1FhirGcsSource.t`, *default:* `nil`) - Cloud Storage source data location and import configuration. The Cloud Healthcare Service Agent requires the `roles/storage.objectAdmin` Cloud IAM roles on the Cloud Storage location. The Healthcare Service Agent Each Cloud Storage object should be a text file that contains the format specified in ContentStructure.
  *   `maxErrorCount` (*type:* `String.t`, *default:* `nil`) - The maximum number of errors before the server cancels the operation. If not specified or set to 0, defaults to 100. -1 means no maximum, the server tries to process all input. Since the server executes the operation in parallel, it might not stop the operation after exactly this number of errors occur.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :contentStructure => String.t() | nil,
          :gcsSource =>
            GoogleApi.HealthCare.V1beta1.Model.GoogleCloudHealthcareV1beta1FhirGcsSource.t() | nil,
          :maxErrorCount => String.t() | nil
        }

  field(:contentStructure)

  field(:gcsSource,
    as: GoogleApi.HealthCare.V1beta1.Model.GoogleCloudHealthcareV1beta1FhirGcsSource
  )

  field(:maxErrorCount)
end

defimpl Poison.Decoder, for: GoogleApi.HealthCare.V1beta1.Model.ImportResourcesHistoryRequest do
  def decode(value, options) do
    GoogleApi.HealthCare.V1beta1.Model.ImportResourcesHistoryRequest.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.HealthCare.V1beta1.Model.ImportResourcesHistoryRequest do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
