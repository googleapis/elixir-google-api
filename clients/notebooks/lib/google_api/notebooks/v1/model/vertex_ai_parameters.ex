# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Notebooks.V1.Model.VertexAIParameters do
  @moduledoc """
  Parameters used in Vertex AI JobType executions.

  ## Attributes

  *   `env` (*type:* `map()`, *default:* `nil`) - Environment variables. At most 100 environment variables can be specified and unique. Example: GCP_BUCKET=gs://my-bucket/samples/
  *   `network` (*type:* `String.t`, *default:* `nil`) - The full name of the Compute Engine [network](/compute/docs/networks-and-firewalls#networks) to which the Job should be peered. For example, `projects/12345/global/networks/myVPC`. [Format](https://cloud.google.com/compute/docs/reference/rest/v1/networks/insert) is of the form `projects/{project}/global/networks/{network}`. Where {project} is a project number, as in `12345`, and {network} is a network name. Private services access must already be configured for the network. If left unspecified, the job is not peered with any network.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :env => map() | nil,
          :network => String.t() | nil
        }

  field(:env, type: :map)
  field(:network)
end

defimpl Poison.Decoder, for: GoogleApi.Notebooks.V1.Model.VertexAIParameters do
  def decode(value, options) do
    GoogleApi.Notebooks.V1.Model.VertexAIParameters.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Notebooks.V1.Model.VertexAIParameters do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
