# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Notebooks.V1.Model.Schedule do
  @moduledoc """
  The definition of a schedule.

  ## Attributes

  *   `createTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. Time the schedule was created.
  *   `cronSchedule` (*type:* `String.t`, *default:* `nil`) - Cron-tab formatted schedule by which the job will execute. Format: minute, hour, day of month, month, day of week, e.g. 0 0 * * WED = every Wednesday More examples: https://crontab.guru/examples.html
  *   `description` (*type:* `String.t`, *default:* `nil`) - A brief description of this environment.
  *   `displayName` (*type:* `String.t`, *default:* `nil`) - Output only. Display name used for UI purposes. Name can only contain alphanumeric characters, hyphens '-', and underscores '_'.
  *   `executionTemplate` (*type:* `GoogleApi.Notebooks.V1.Model.ExecutionTemplate.t`, *default:* `nil`) - Notebook Execution Template corresponding to this schedule.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Output only. The name of this schedule. Format: `projects/{project_id}/locations/{location}/schedules/{schedule_id}`
  *   `recentExecutions` (*type:* `list(GoogleApi.Notebooks.V1.Model.Execution.t)`, *default:* `nil`) - Output only. The most recent execution names triggered from this schedule and their corresponding states.
  *   `state` (*type:* `String.t`, *default:* `nil`) - 
  *   `timeZone` (*type:* `String.t`, *default:* `nil`) - Timezone on which the cron_schedule. The value of this field must be a time zone name from the tz database. TZ Database: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones Note that some time zones include a provision for daylight savings time. The rules for daylight saving time are determined by the chosen tz. For UTC use the string "utc". If a time zone is not specified, the default will be in UTC (also known as GMT).
  *   `updateTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. Time the schedule was last updated.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :createTime => DateTime.t() | nil,
          :cronSchedule => String.t() | nil,
          :description => String.t() | nil,
          :displayName => String.t() | nil,
          :executionTemplate => GoogleApi.Notebooks.V1.Model.ExecutionTemplate.t() | nil,
          :name => String.t() | nil,
          :recentExecutions => list(GoogleApi.Notebooks.V1.Model.Execution.t()) | nil,
          :state => String.t() | nil,
          :timeZone => String.t() | nil,
          :updateTime => DateTime.t() | nil
        }

  field(:createTime, as: DateTime)
  field(:cronSchedule)
  field(:description)
  field(:displayName)
  field(:executionTemplate, as: GoogleApi.Notebooks.V1.Model.ExecutionTemplate)
  field(:name)
  field(:recentExecutions, as: GoogleApi.Notebooks.V1.Model.Execution, type: :list)
  field(:state)
  field(:timeZone)
  field(:updateTime, as: DateTime)
end

defimpl Poison.Decoder, for: GoogleApi.Notebooks.V1.Model.Schedule do
  def decode(value, options) do
    GoogleApi.Notebooks.V1.Model.Schedule.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Notebooks.V1.Model.Schedule do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
