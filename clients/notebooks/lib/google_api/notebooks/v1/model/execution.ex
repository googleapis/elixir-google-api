# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Notebooks.V1.Model.Execution do
  @moduledoc """
  The definition of a single executed notebook.

  ## Attributes

  *   `createTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. Time the Execution was instantiated.
  *   `description` (*type:* `String.t`, *default:* `nil`) - A brief description of this execution.
  *   `displayName` (*type:* `String.t`, *default:* `nil`) - Output only. Name used for UI purposes. Name can only contain alphanumeric characters and underscores '_'.
  *   `executionTemplate` (*type:* `GoogleApi.Notebooks.V1.Model.ExecutionTemplate.t`, *default:* `nil`) - execute metadata including name, hardware spec, region, labels, etc.
  *   `jobUri` (*type:* `String.t`, *default:* `nil`) - Output only. The URI of the external job used to execute the notebook.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Output only. The resource name of the execute. Format: `projects/{project_id}/locations/{location}/executions/{execution_id}`
  *   `outputNotebookFile` (*type:* `String.t`, *default:* `nil`) - Output notebook file generated by this execution
  *   `state` (*type:* `String.t`, *default:* `nil`) - Output only. State of the underlying AI Platform job.
  *   `updateTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. Time the Execution was last updated.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :createTime => DateTime.t() | nil,
          :description => String.t() | nil,
          :displayName => String.t() | nil,
          :executionTemplate => GoogleApi.Notebooks.V1.Model.ExecutionTemplate.t() | nil,
          :jobUri => String.t() | nil,
          :name => String.t() | nil,
          :outputNotebookFile => String.t() | nil,
          :state => String.t() | nil,
          :updateTime => DateTime.t() | nil
        }

  field(:createTime, as: DateTime)
  field(:description)
  field(:displayName)
  field(:executionTemplate, as: GoogleApi.Notebooks.V1.Model.ExecutionTemplate)
  field(:jobUri)
  field(:name)
  field(:outputNotebookFile)
  field(:state)
  field(:updateTime, as: DateTime)
end

defimpl Poison.Decoder, for: GoogleApi.Notebooks.V1.Model.Execution do
  def decode(value, options) do
    GoogleApi.Notebooks.V1.Model.Execution.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Notebooks.V1.Model.Execution do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
