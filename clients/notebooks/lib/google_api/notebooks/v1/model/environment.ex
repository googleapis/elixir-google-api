# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Notebooks.V1.Model.Environment do
  @moduledoc """
  Definition of a software environment that is used to start a notebook instance.

  ## Attributes

  *   `containerImage` (*type:* `GoogleApi.Notebooks.V1.Model.ContainerImage.t`, *default:* `nil`) - Use a container image to start the notebook instance.
  *   `createTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. The time at which this environment was created.
  *   `description` (*type:* `String.t`, *default:* `nil`) - A brief description of this environment.
  *   `displayName` (*type:* `String.t`, *default:* `nil`) - Display name of this environment for the UI.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Output only. Name of this environment. Format: `projects/{project_id}/locations/{location}/environments/{environment_id}`
  *   `postStartupScript` (*type:* `String.t`, *default:* `nil`) - Path to a Bash script that automatically runs after a notebook instance fully boots up. The path must be a URL or Cloud Storage path. Example: `"gs://path-to-file/file-name"`
  *   `vmImage` (*type:* `GoogleApi.Notebooks.V1.Model.VmImage.t`, *default:* `nil`) - Use a Compute Engine VM image to start the notebook instance.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :containerImage => GoogleApi.Notebooks.V1.Model.ContainerImage.t() | nil,
          :createTime => DateTime.t() | nil,
          :description => String.t() | nil,
          :displayName => String.t() | nil,
          :name => String.t() | nil,
          :postStartupScript => String.t() | nil,
          :vmImage => GoogleApi.Notebooks.V1.Model.VmImage.t() | nil
        }

  field(:containerImage, as: GoogleApi.Notebooks.V1.Model.ContainerImage)
  field(:createTime, as: DateTime)
  field(:description)
  field(:displayName)
  field(:name)
  field(:postStartupScript)
  field(:vmImage, as: GoogleApi.Notebooks.V1.Model.VmImage)
end

defimpl Poison.Decoder, for: GoogleApi.Notebooks.V1.Model.Environment do
  def decode(value, options) do
    GoogleApi.Notebooks.V1.Model.Environment.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Notebooks.V1.Model.Environment do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
