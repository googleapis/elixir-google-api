# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Notebooks.V1.Model.GetInstanceHealthResponse do
  @moduledoc """
  Response for checking if a notebook instance is healthy.

  ## Attributes

  *   `healthInfo` (*type:* `map()`, *default:* `nil`) - Output only. Additional information about instance health. Example: healthInfo": { "docker_proxy_agent_status": "1", "docker_status": "1", "jupyterlab_api_status": "-1", "jupyterlab_status": "-1", "updated": "2020-10-18 09:40:03.573409" }
  *   `healthState` (*type:* `String.t`, *default:* `nil`) - Output only. Runtime health_state.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :healthInfo => map() | nil,
          :healthState => String.t() | nil
        }

  field(:healthInfo, type: :map)
  field(:healthState)
end

defimpl Poison.Decoder, for: GoogleApi.Notebooks.V1.Model.GetInstanceHealthResponse do
  def decode(value, options) do
    GoogleApi.Notebooks.V1.Model.GetInstanceHealthResponse.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Notebooks.V1.Model.GetInstanceHealthResponse do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
