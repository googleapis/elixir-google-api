# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Notebooks.V2.Model.Instance do
  @moduledoc """
  The definition of a notebook instance.

  ## Attributes

  *   `createTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. Instance creation time.
  *   `creator` (*type:* `String.t`, *default:* `nil`) - Output only. Email address of entity that sent original CreateInstance request.
  *   `disableProxyAccess` (*type:* `boolean()`, *default:* `nil`) - Optional. If true, the notebook instance will not register with the proxy.
  *   `gceSetup` (*type:* `GoogleApi.Notebooks.V2.Model.GceSetup.t`, *default:* `nil`) - Optional. Compute Engine setup for the notebook. Uses notebook-defined fields.
  *   `healthInfo` (*type:* `map()`, *default:* `nil`) - Output only. Additional information about instance health. Example: healthInfo": { "docker_proxy_agent_status": "1", "docker_status": "1", "jupyterlab_api_status": "-1", "jupyterlab_status": "-1", "updated": "2020-10-18 09:40:03.573409" }
  *   `healthState` (*type:* `String.t`, *default:* `nil`) - Output only. Instance health_state.
  *   `id` (*type:* `String.t`, *default:* `nil`) - Output only. Unique ID of the resource.
  *   `instanceOwners` (*type:* `list(String.t)`, *default:* `nil`) - Optional. Input only. The owner of this instance after creation. Format: `alias@example.com` Currently supports one owner only. If not specified, all of the service account users of your VM instance's service account can use the instance.
  *   `labels` (*type:* `map()`, *default:* `nil`) - Optional. Labels to apply to this instance. These can be later modified by the UpdateInstance method.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Output only. The name of this notebook instance. Format: `projects/{project_id}/locations/{location}/instances/{instance_id}`
  *   `proxyUri` (*type:* `String.t`, *default:* `nil`) - Output only. The proxy endpoint that is used to access the Jupyter notebook.
  *   `satisfiesPzi` (*type:* `boolean()`, *default:* `nil`) - Output only. Reserved for future use for Zone Isolation.
  *   `satisfiesPzs` (*type:* `boolean()`, *default:* `nil`) - Output only. Reserved for future use for Zone Separation.
  *   `state` (*type:* `String.t`, *default:* `nil`) - Output only. The state of this instance.
  *   `thirdPartyProxyUrl` (*type:* `String.t`, *default:* `nil`) - Output only. The workforce pools proxy endpoint that is used to access the Jupyter notebook.
  *   `updateTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. Instance update time.
  *   `upgradeHistory` (*type:* `list(GoogleApi.Notebooks.V2.Model.UpgradeHistoryEntry.t)`, *default:* `nil`) - Output only. The upgrade history of this instance.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :createTime => DateTime.t() | nil,
          :creator => String.t() | nil,
          :disableProxyAccess => boolean() | nil,
          :gceSetup => GoogleApi.Notebooks.V2.Model.GceSetup.t() | nil,
          :healthInfo => map() | nil,
          :healthState => String.t() | nil,
          :id => String.t() | nil,
          :instanceOwners => list(String.t()) | nil,
          :labels => map() | nil,
          :name => String.t() | nil,
          :proxyUri => String.t() | nil,
          :satisfiesPzi => boolean() | nil,
          :satisfiesPzs => boolean() | nil,
          :state => String.t() | nil,
          :thirdPartyProxyUrl => String.t() | nil,
          :updateTime => DateTime.t() | nil,
          :upgradeHistory => list(GoogleApi.Notebooks.V2.Model.UpgradeHistoryEntry.t()) | nil
        }

  field(:createTime, as: DateTime)
  field(:creator)
  field(:disableProxyAccess)
  field(:gceSetup, as: GoogleApi.Notebooks.V2.Model.GceSetup)
  field(:healthInfo, type: :map)
  field(:healthState)
  field(:id)
  field(:instanceOwners, type: :list)
  field(:labels, type: :map)
  field(:name)
  field(:proxyUri)
  field(:satisfiesPzi)
  field(:satisfiesPzs)
  field(:state)
  field(:thirdPartyProxyUrl)
  field(:updateTime, as: DateTime)
  field(:upgradeHistory, as: GoogleApi.Notebooks.V2.Model.UpgradeHistoryEntry, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.Notebooks.V2.Model.Instance do
  def decode(value, options) do
    GoogleApi.Notebooks.V2.Model.Instance.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Notebooks.V2.Model.Instance do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
