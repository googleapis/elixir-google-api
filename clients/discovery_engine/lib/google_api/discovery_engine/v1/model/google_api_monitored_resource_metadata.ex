# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.DiscoveryEngine.V1.Model.GoogleApiMonitoredResourceMetadata do
  @moduledoc """
  Auxiliary metadata for a MonitoredResource object. MonitoredResource objects contain the minimum set of information to uniquely identify a monitored resource instance. There is some other useful auxiliary metadata. Monitoring and Logging use an ingestion pipeline to extract metadata for cloud resources of all types, and store the metadata in this message.

  ## Attributes

  *   `systemLabels` (*type:* `map()`, *default:* `nil`) - Output only. Values for predefined system metadata labels. System labels are a kind of metadata extracted by Google, including "machine_image", "vpc", "subnet_id", "security_group", "name", etc. System label values can be only strings, Boolean values, or a list of strings. For example: { "name": "my-test-instance", "security_group": ["a", "b", "c"], "spot_instance": false }
  *   `userLabels` (*type:* `map()`, *default:* `nil`) - Output only. A map of user-defined metadata labels.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :systemLabels => map() | nil,
          :userLabels => map() | nil
        }

  field(:systemLabels, type: :map)
  field(:userLabels, type: :map)
end

defimpl Poison.Decoder, for: GoogleApi.DiscoveryEngine.V1.Model.GoogleApiMonitoredResourceMetadata do
  def decode(value, options) do
    GoogleApi.DiscoveryEngine.V1.Model.GoogleApiMonitoredResourceMetadata.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.DiscoveryEngine.V1.Model.GoogleApiMonitoredResourceMetadata do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
