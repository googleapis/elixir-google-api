# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.DiscoveryEngine.V1.Model.GoogleCloudDiscoveryengineV1alphaIdentityScheduleConfig do
  @moduledoc """
  The configuration for the identity data synchronization runs.

  ## Attributes

  *   `nextSyncTime` (*type:* `GoogleApi.DiscoveryEngine.V1.Model.GoogleTypeDateTime.t`, *default:* `nil`) - Optional. The UTC time when the next data sync is expected to start for the Data Connector. Customers are only able to specify the hour and minute to schedule the data sync. This is utilized when the data connector has a refresh interval greater than 1 day.
  *   `refreshInterval` (*type:* `String.t`, *default:* `nil`) - Optional. The refresh interval to sync the Access Control List information for the documents ingested by this connector. If not set, the access control list will be refreshed at the default interval of 30 minutes. The identity refresh interval can be at least 30 minutes and at most 7 days.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :nextSyncTime => GoogleApi.DiscoveryEngine.V1.Model.GoogleTypeDateTime.t() | nil,
          :refreshInterval => String.t() | nil
        }

  field(:nextSyncTime, as: GoogleApi.DiscoveryEngine.V1.Model.GoogleTypeDateTime)
  field(:refreshInterval)
end

defimpl Poison.Decoder,
  for: GoogleApi.DiscoveryEngine.V1.Model.GoogleCloudDiscoveryengineV1alphaIdentityScheduleConfig do
  def decode(value, options) do
    GoogleApi.DiscoveryEngine.V1.Model.GoogleCloudDiscoveryengineV1alphaIdentityScheduleConfig.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.DiscoveryEngine.V1.Model.GoogleCloudDiscoveryengineV1alphaIdentityScheduleConfig do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
