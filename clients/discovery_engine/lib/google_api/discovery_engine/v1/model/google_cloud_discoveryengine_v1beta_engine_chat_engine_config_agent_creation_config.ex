# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.DiscoveryEngine.V1.Model.GoogleCloudDiscoveryengineV1betaEngineChatEngineConfigAgentCreationConfig do
  @moduledoc """
  Configurations for generating a Dialogflow agent. Note that these configurations are one-time consumed by and passed to Dialogflow service. It means they cannot be retrieved using EngineService.GetEngine or EngineService.ListEngines API after engine creation.

  ## Attributes

  *   `business` (*type:* `String.t`, *default:* `nil`) - Name of the company, organization or other entity that the agent represents. Used for knowledge connector LLM prompt and for knowledge search.
  *   `defaultLanguageCode` (*type:* `String.t`, *default:* `nil`) - Required. The default language of the agent as a language tag. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes.
  *   `location` (*type:* `String.t`, *default:* `nil`) - Agent location for Agent creation, supported values: global/us/eu. If not provided, us Engine will create Agent using us-central-1 by default; eu Engine will create Agent using eu-west-1 by default.
  *   `timeZone` (*type:* `String.t`, *default:* `nil`) - Required. The time zone of the agent from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York, Europe/Paris.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :business => String.t() | nil,
          :defaultLanguageCode => String.t() | nil,
          :location => String.t() | nil,
          :timeZone => String.t() | nil
        }

  field(:business)
  field(:defaultLanguageCode)
  field(:location)
  field(:timeZone)
end

defimpl Poison.Decoder,
  for:
    GoogleApi.DiscoveryEngine.V1.Model.GoogleCloudDiscoveryengineV1betaEngineChatEngineConfigAgentCreationConfig do
  def decode(value, options) do
    GoogleApi.DiscoveryEngine.V1.Model.GoogleCloudDiscoveryengineV1betaEngineChatEngineConfigAgentCreationConfig.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for:
    GoogleApi.DiscoveryEngine.V1.Model.GoogleCloudDiscoveryengineV1betaEngineChatEngineConfigAgentCreationConfig do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
