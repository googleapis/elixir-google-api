# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.DiscoveryEngine.V1beta.Model.GoogleCloudDiscoveryengineV1betaGenerateGroundedContentRequestGenerationSpec do
  @moduledoc """
  Content generation specification.

  ## Attributes

  *   `frequencyPenalty` (*type:* `number()`, *default:* `nil`) - If specified, custom value for frequency penalty will be used.
  *   `languageCode` (*type:* `String.t`, *default:* `nil`) - Language code for content. Use language tags defined by [BCP47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt).
  *   `maxOutputTokens` (*type:* `integer()`, *default:* `nil`) - If specified, custom value for max output tokens will be used.
  *   `modelId` (*type:* `String.t`, *default:* `nil`) - Specifies which Vertex model id to use for generation.
  *   `presencePenalty` (*type:* `number()`, *default:* `nil`) - If specified, custom value for presence penalty will be used.
  *   `seed` (*type:* `integer()`, *default:* `nil`) - If specified, custom value for the seed will be used.
  *   `temperature` (*type:* `number()`, *default:* `nil`) - If specified, custom value for the temperature will be used.
  *   `topK` (*type:* `integer()`, *default:* `nil`) - If specified, custom value for top-k sampling will be used.
  *   `topP` (*type:* `number()`, *default:* `nil`) - If specified, custom value for nucleus sampling will be used.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :frequencyPenalty => number() | nil,
          :languageCode => String.t() | nil,
          :maxOutputTokens => integer() | nil,
          :modelId => String.t() | nil,
          :presencePenalty => number() | nil,
          :seed => integer() | nil,
          :temperature => number() | nil,
          :topK => integer() | nil,
          :topP => number() | nil
        }

  field(:frequencyPenalty)
  field(:languageCode)
  field(:maxOutputTokens)
  field(:modelId)
  field(:presencePenalty)
  field(:seed)
  field(:temperature)
  field(:topK)
  field(:topP)
end

defimpl Poison.Decoder,
  for:
    GoogleApi.DiscoveryEngine.V1beta.Model.GoogleCloudDiscoveryengineV1betaGenerateGroundedContentRequestGenerationSpec do
  def decode(value, options) do
    GoogleApi.DiscoveryEngine.V1beta.Model.GoogleCloudDiscoveryengineV1betaGenerateGroundedContentRequestGenerationSpec.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for:
    GoogleApi.DiscoveryEngine.V1beta.Model.GoogleCloudDiscoveryengineV1betaGenerateGroundedContentRequestGenerationSpec do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
