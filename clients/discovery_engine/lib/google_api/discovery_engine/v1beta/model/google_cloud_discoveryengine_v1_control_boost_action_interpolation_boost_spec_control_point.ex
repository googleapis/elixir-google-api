# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.DiscoveryEngine.V1beta.Model.GoogleCloudDiscoveryengineV1ControlBoostActionInterpolationBoostSpecControlPoint do
  @moduledoc """
  The control points used to define the curve. The curve defined through these control points can only be monotonically increasing or decreasing(constant values are acceptable).

  ## Attributes

  *   `attributeValue` (*type:* `String.t`, *default:* `nil`) - Optional. Can be one of: 1. The numerical field value. 2. The duration spec for freshness: The value must be formatted as an XSD `dayTimeDuration` value (a restricted subset of an ISO 8601 duration value). The pattern for this is: `nDnM]`.
  *   `boostAmount` (*type:* `number()`, *default:* `nil`) - Optional. The value between -1 to 1 by which to boost the score if the attribute_value evaluates to the value specified above.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :attributeValue => String.t() | nil,
          :boostAmount => number() | nil
        }

  field(:attributeValue)
  field(:boostAmount)
end

defimpl Poison.Decoder,
  for:
    GoogleApi.DiscoveryEngine.V1beta.Model.GoogleCloudDiscoveryengineV1ControlBoostActionInterpolationBoostSpecControlPoint do
  def decode(value, options) do
    GoogleApi.DiscoveryEngine.V1beta.Model.GoogleCloudDiscoveryengineV1ControlBoostActionInterpolationBoostSpecControlPoint.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for:
    GoogleApi.DiscoveryEngine.V1beta.Model.GoogleCloudDiscoveryengineV1ControlBoostActionInterpolationBoostSpecControlPoint do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
