# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.DiscoveryEngine.V1beta.Model.GoogleCloudDiscoveryengineV1betaPurgeDocumentsRequest do
  @moduledoc """
  Request message for DocumentService.PurgeDocuments method.

  ## Attributes

  *   `errorConfig` (*type:* `GoogleApi.DiscoveryEngine.V1beta.Model.GoogleCloudDiscoveryengineV1betaPurgeErrorConfig.t`, *default:* `nil`) - The desired location of errors incurred during the purge.
  *   `filter` (*type:* `String.t`, *default:* `nil`) - Required. Filter matching documents to purge. Only currently supported value is `*` (all items).
  *   `force` (*type:* `boolean()`, *default:* `nil`) - Actually performs the purge. If `force` is set to false, return the expected purge count without deleting any documents.
  *   `gcsSource` (*type:* `GoogleApi.DiscoveryEngine.V1beta.Model.GoogleCloudDiscoveryengineV1betaGcsSource.t`, *default:* `nil`) - Cloud Storage location for the input content. Supported `data_schema`: * `document_id`: One valid Document.id per line.
  *   `inlineSource` (*type:* `GoogleApi.DiscoveryEngine.V1beta.Model.GoogleCloudDiscoveryengineV1betaPurgeDocumentsRequestInlineSource.t`, *default:* `nil`) - Inline source for the input content for purge.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :errorConfig =>
            GoogleApi.DiscoveryEngine.V1beta.Model.GoogleCloudDiscoveryengineV1betaPurgeErrorConfig.t()
            | nil,
          :filter => String.t() | nil,
          :force => boolean() | nil,
          :gcsSource =>
            GoogleApi.DiscoveryEngine.V1beta.Model.GoogleCloudDiscoveryengineV1betaGcsSource.t()
            | nil,
          :inlineSource =>
            GoogleApi.DiscoveryEngine.V1beta.Model.GoogleCloudDiscoveryengineV1betaPurgeDocumentsRequestInlineSource.t()
            | nil
        }

  field(:errorConfig,
    as: GoogleApi.DiscoveryEngine.V1beta.Model.GoogleCloudDiscoveryengineV1betaPurgeErrorConfig
  )

  field(:filter)
  field(:force)

  field(:gcsSource,
    as: GoogleApi.DiscoveryEngine.V1beta.Model.GoogleCloudDiscoveryengineV1betaGcsSource
  )

  field(:inlineSource,
    as:
      GoogleApi.DiscoveryEngine.V1beta.Model.GoogleCloudDiscoveryengineV1betaPurgeDocumentsRequestInlineSource
  )
end

defimpl Poison.Decoder,
  for:
    GoogleApi.DiscoveryEngine.V1beta.Model.GoogleCloudDiscoveryengineV1betaPurgeDocumentsRequest do
  def decode(value, options) do
    GoogleApi.DiscoveryEngine.V1beta.Model.GoogleCloudDiscoveryengineV1betaPurgeDocumentsRequest.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for:
    GoogleApi.DiscoveryEngine.V1beta.Model.GoogleCloudDiscoveryengineV1betaPurgeDocumentsRequest do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
