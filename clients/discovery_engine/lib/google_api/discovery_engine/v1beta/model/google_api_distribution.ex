# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.DiscoveryEngine.V1beta.Model.GoogleApiDistribution do
  @moduledoc """
  `Distribution` contains summary statistics for a population of values. It optionally contains a histogram representing the distribution of those values across a set of buckets. The summary statistics are the count, mean, sum of the squared deviation from the mean, the minimum, and the maximum of the set of population of values. The histogram is based on a sequence of buckets and gives a count of values that fall into each bucket. The boundaries of the buckets are given either explicitly or by formulas for buckets of fixed or exponentially increasing widths. Although it is not forbidden, it is generally a bad idea to include non-finite values (infinities or NaNs) in the population of values, as this will render the `mean` and `sum_of_squared_deviation` fields meaningless.

  ## Attributes

  *   `bucketCounts` (*type:* `list(String.t)`, *default:* `nil`) - The number of values in each bucket of the histogram, as described in `bucket_options`. If the distribution does not have a histogram, then omit this field. If there is a histogram, then the sum of the values in `bucket_counts` must equal the value in the `count` field of the distribution. If present, `bucket_counts` should contain N values, where N is the number of buckets specified in `bucket_options`. If you supply fewer than N values, the remaining values are assumed to be 0. The order of the values in `bucket_counts` follows the bucket numbering schemes described for the three bucket types. The first value must be the count for the underflow bucket (number 0). The next N-2 values are the counts for the finite buckets (number 1 through N-2). The N'th value in `bucket_counts` is the count for the overflow bucket (number N-1).
  *   `bucketOptions` (*type:* `GoogleApi.DiscoveryEngine.V1beta.Model.GoogleApiDistributionBucketOptions.t`, *default:* `nil`) - Defines the histogram bucket boundaries. If the distribution does not contain a histogram, then omit this field.
  *   `count` (*type:* `String.t`, *default:* `nil`) - The number of values in the population. Must be non-negative. This value must equal the sum of the values in `bucket_counts` if a histogram is provided.
  *   `exemplars` (*type:* `list(GoogleApi.DiscoveryEngine.V1beta.Model.GoogleApiDistributionExemplar.t)`, *default:* `nil`) - Must be in increasing order of `value` field.
  *   `mean` (*type:* `float()`, *default:* `nil`) - The arithmetic mean of the values in the population. If `count` is zero then this field must be zero.
  *   `range` (*type:* `GoogleApi.DiscoveryEngine.V1beta.Model.GoogleApiDistributionRange.t`, *default:* `nil`) - If specified, contains the range of the population values. The field must not be present if the `count` is zero.
  *   `sumOfSquaredDeviation` (*type:* `float()`, *default:* `nil`) - The sum of squared deviations from the mean of the values in the population. For values x_i this is: Sum[i=1..n]((x_i - mean)^2) Knuth, "The Art of Computer Programming", Vol. 2, page 232, 3rd edition describes Welford's method for accumulating this sum in one pass. If `count` is zero then this field must be zero.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :bucketCounts => list(String.t()) | nil,
          :bucketOptions =>
            GoogleApi.DiscoveryEngine.V1beta.Model.GoogleApiDistributionBucketOptions.t() | nil,
          :count => String.t() | nil,
          :exemplars =>
            list(GoogleApi.DiscoveryEngine.V1beta.Model.GoogleApiDistributionExemplar.t()) | nil,
          :mean => float() | nil,
          :range => GoogleApi.DiscoveryEngine.V1beta.Model.GoogleApiDistributionRange.t() | nil,
          :sumOfSquaredDeviation => float() | nil
        }

  field(:bucketCounts, type: :list)

  field(:bucketOptions,
    as: GoogleApi.DiscoveryEngine.V1beta.Model.GoogleApiDistributionBucketOptions
  )

  field(:count)

  field(:exemplars,
    as: GoogleApi.DiscoveryEngine.V1beta.Model.GoogleApiDistributionExemplar,
    type: :list
  )

  field(:mean)
  field(:range, as: GoogleApi.DiscoveryEngine.V1beta.Model.GoogleApiDistributionRange)
  field(:sumOfSquaredDeviation)
end

defimpl Poison.Decoder, for: GoogleApi.DiscoveryEngine.V1beta.Model.GoogleApiDistribution do
  def decode(value, options) do
    GoogleApi.DiscoveryEngine.V1beta.Model.GoogleApiDistribution.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.DiscoveryEngine.V1beta.Model.GoogleApiDistribution do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
