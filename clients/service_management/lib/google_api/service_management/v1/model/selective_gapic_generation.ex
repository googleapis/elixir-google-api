# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ServiceManagement.V1.Model.SelectiveGapicGeneration do
  @moduledoc """
  This message is used to configure the generation of a subset of the RPCs in a service for client libraries.

  ## Attributes

  *   `generateOmittedAsInternal` (*type:* `boolean()`, *default:* `nil`) - Setting this to true indicates to the client generators that methods that would be excluded from the generation should instead be generated in a way that indicates these methods should not be consumed by end users. How this is expressed is up to individual language implementations to decide. Some examples may be: added annotations, obfuscated identifiers, or other language idiomatic patterns.
  *   `methods` (*type:* `list(String.t)`, *default:* `nil`) - An allowlist of the fully qualified names of RPCs that should be included on public client surfaces.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :generateOmittedAsInternal => boolean() | nil,
          :methods => list(String.t()) | nil
        }

  field(:generateOmittedAsInternal)
  field(:methods, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.ServiceManagement.V1.Model.SelectiveGapicGeneration do
  def decode(value, options) do
    GoogleApi.ServiceManagement.V1.Model.SelectiveGapicGeneration.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ServiceManagement.V1.Model.SelectiveGapicGeneration do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
