# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.TagManager.V2.Model.Variable do
  @moduledoc """
  Represents a Google Tag Manager Variable.

  ## Attributes

  *   `accountId` (*type:* `String.t`, *default:* `nil`) - GTM Account ID.
  *   `containerId` (*type:* `String.t`, *default:* `nil`) - GTM Container ID.
  *   `disablingTriggerId` (*type:* `list(String.t)`, *default:* `nil`) - For mobile containers only: A list of trigger IDs for disabling conditional variables; the variable is enabled if one of the enabling trigger is true while all the disabling trigger are false. Treated as an unordered set.
  *   `enablingTriggerId` (*type:* `list(String.t)`, *default:* `nil`) - For mobile containers only: A list of trigger IDs for enabling conditional variables; the variable is enabled if one of the enabling triggers is true while all the disabling triggers are false. Treated as an unordered set.
  *   `fingerprint` (*type:* `String.t`, *default:* `nil`) - The fingerprint of the GTM Variable as computed at storage time. This value is recomputed whenever the variable is modified.
  *   `formatValue` (*type:* `GoogleApi.TagManager.V2.Model.VariableFormatValue.t`, *default:* `nil`) - Option to convert a variable value to other value.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Variable display name.
  *   `notes` (*type:* `String.t`, *default:* `nil`) - User notes on how to apply this variable in the container.
  *   `parameter` (*type:* `list(GoogleApi.TagManager.V2.Model.Parameter.t)`, *default:* `nil`) - The variable's parameters.
  *   `parentFolderId` (*type:* `String.t`, *default:* `nil`) - Parent folder id.
  *   `path` (*type:* `String.t`, *default:* `nil`) - GTM Variable's API relative path.
  *   `scheduleEndMs` (*type:* `String.t`, *default:* `nil`) - The end timestamp in milliseconds to schedule a variable.
  *   `scheduleStartMs` (*type:* `String.t`, *default:* `nil`) - The start timestamp in milliseconds to schedule a variable.
  *   `tagManagerUrl` (*type:* `String.t`, *default:* `nil`) - Auto generated link to the tag manager UI
  *   `type` (*type:* `String.t`, *default:* `nil`) - GTM Variable Type.
  *   `variableId` (*type:* `String.t`, *default:* `nil`) - The Variable ID uniquely identifies the GTM Variable.
  *   `workspaceId` (*type:* `String.t`, *default:* `nil`) - GTM Workspace ID.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :accountId => String.t() | nil,
          :containerId => String.t() | nil,
          :disablingTriggerId => list(String.t()) | nil,
          :enablingTriggerId => list(String.t()) | nil,
          :fingerprint => String.t() | nil,
          :formatValue => GoogleApi.TagManager.V2.Model.VariableFormatValue.t() | nil,
          :name => String.t() | nil,
          :notes => String.t() | nil,
          :parameter => list(GoogleApi.TagManager.V2.Model.Parameter.t()) | nil,
          :parentFolderId => String.t() | nil,
          :path => String.t() | nil,
          :scheduleEndMs => String.t() | nil,
          :scheduleStartMs => String.t() | nil,
          :tagManagerUrl => String.t() | nil,
          :type => String.t() | nil,
          :variableId => String.t() | nil,
          :workspaceId => String.t() | nil
        }

  field(:accountId)
  field(:containerId)
  field(:disablingTriggerId, type: :list)
  field(:enablingTriggerId, type: :list)
  field(:fingerprint)
  field(:formatValue, as: GoogleApi.TagManager.V2.Model.VariableFormatValue)
  field(:name)
  field(:notes)
  field(:parameter, as: GoogleApi.TagManager.V2.Model.Parameter, type: :list)
  field(:parentFolderId)
  field(:path)
  field(:scheduleEndMs)
  field(:scheduleStartMs)
  field(:tagManagerUrl)
  field(:type)
  field(:variableId)
  field(:workspaceId)
end

defimpl Poison.Decoder, for: GoogleApi.TagManager.V2.Model.Variable do
  def decode(value, options) do
    GoogleApi.TagManager.V2.Model.Variable.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.TagManager.V2.Model.Variable do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
