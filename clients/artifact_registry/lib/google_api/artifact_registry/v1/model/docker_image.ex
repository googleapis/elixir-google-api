# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ArtifactRegistry.V1.Model.DockerImage do
  @moduledoc """
  DockerImage represents a docker artifact. The following fields are returned as untyped metadata in the Version resource, using camelcase keys (i.e. metadata.imageSizeBytes): * imageSizeBytes * mediaType * buildTime

  ## Attributes

  *   `buildTime` (*type:* `DateTime.t`, *default:* `nil`) - The time this image was built. This field is returned as the 'metadata.buildTime' field in the Version resource. The build time is returned to the client as an RFC 3339 string, which can be easily used with the JavaScript Date constructor.
  *   `imageSizeBytes` (*type:* `String.t`, *default:* `nil`) - Calculated size of the image. This field is returned as the 'metadata.imageSizeBytes' field in the Version resource.
  *   `mediaType` (*type:* `String.t`, *default:* `nil`) - Media type of this image, e.g. "application/vnd.docker.distribution.manifest.v2+json". This field is returned as the 'metadata.mediaType' field in the Version resource.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Required. registry_location, project_id, repository_name and image id forms a unique image name:`projects//locations//repository//dockerImages/`. For example, "projects/test-project/locations/us-west4/repositories/test-repo/dockerImages/ nginx@sha256:e9954c1fc875017be1c3e36eca16be2d9e9bccc4bf072163515467d6a823c7cf", where "us-west4" is the registry_location, "test-project" is the project_id, "test-repo" is the repository_name and "nginx@sha256:e9954c1fc875017be1c3e36eca16be2d9e9bccc4bf072163515467d6a823c7cf" is the image's digest.
  *   `tags` (*type:* `list(String.t)`, *default:* `nil`) - Tags attached to this image.
  *   `uploadTime` (*type:* `DateTime.t`, *default:* `nil`) - Time the image was uploaded.
  *   `uri` (*type:* `String.t`, *default:* `nil`) - Required. URL to access the image. Example: us-west4-docker.pkg.dev/test-project/test-repo/nginx@sha256:e9954c1fc875017be1c3e36eca16be2d9e9bccc4bf072163515467d6a823c7cf
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :buildTime => DateTime.t() | nil,
          :imageSizeBytes => String.t() | nil,
          :mediaType => String.t() | nil,
          :name => String.t() | nil,
          :tags => list(String.t()) | nil,
          :uploadTime => DateTime.t() | nil,
          :uri => String.t() | nil
        }

  field(:buildTime, as: DateTime)
  field(:imageSizeBytes)
  field(:mediaType)
  field(:name)
  field(:tags, type: :list)
  field(:uploadTime, as: DateTime)
  field(:uri)
end

defimpl Poison.Decoder, for: GoogleApi.ArtifactRegistry.V1.Model.DockerImage do
  def decode(value, options) do
    GoogleApi.ArtifactRegistry.V1.Model.DockerImage.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ArtifactRegistry.V1.Model.DockerImage do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
