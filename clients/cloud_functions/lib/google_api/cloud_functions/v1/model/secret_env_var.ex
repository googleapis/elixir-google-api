# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudFunctions.V1.Model.SecretEnvVar do
  @moduledoc """
  Configuration for a secret environment variable. It has the information necessary to fetch the secret value from secret manager and expose it as an environment variable. Secret value is not a part of the configuration. Secret values are only fetched when a new clone starts.

  ## Attributes

  *   `key` (*type:* `String.t`, *default:* `nil`) - Name of the environment variable.
  *   `projectId` (*type:* `String.t`, *default:* `nil`) - Project identifier (preferrably project number but can also be the project ID) of the project that contains the secret. If not set, it will be populated with the function's project assuming that the secret exists in the same project as of the function.
  *   `secret` (*type:* `String.t`, *default:* `nil`) - Name of the secret in secret manager (not the full resource name).
  *   `version` (*type:* `String.t`, *default:* `nil`) - Version of the secret (version number or the string 'latest'). It is recommended to use a numeric version for secret environment variables as any updates to the secret value is not reflected until new clones start.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :key => String.t() | nil,
          :projectId => String.t() | nil,
          :secret => String.t() | nil,
          :version => String.t() | nil
        }

  field(:key)
  field(:projectId)
  field(:secret)
  field(:version)
end

defimpl Poison.Decoder, for: GoogleApi.CloudFunctions.V1.Model.SecretEnvVar do
  def decode(value, options) do
    GoogleApi.CloudFunctions.V1.Model.SecretEnvVar.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudFunctions.V1.Model.SecretEnvVar do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
