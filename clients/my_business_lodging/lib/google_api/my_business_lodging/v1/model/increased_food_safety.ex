# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.MyBusinessLodging.V1.Model.IncreasedFoodSafety do
  @moduledoc """
  Increased food safety measures implemented by the hotel during COVID-19.

  ## Attributes

  *   `diningAreasAdditionalSanitation` (*type:* `boolean()`, *default:* `nil`) - Additional sanitation in dining areas.
  *   `diningAreasAdditionalSanitationException` (*type:* `String.t`, *default:* `nil`) - Dining areas additional sanitation exception.
  *   `disposableFlatware` (*type:* `boolean()`, *default:* `nil`) - Disposable flatware.
  *   `disposableFlatwareException` (*type:* `String.t`, *default:* `nil`) - Disposable flatware exception.
  *   `foodPreparationAndServingAdditionalSafety` (*type:* `boolean()`, *default:* `nil`) - Additional safety measures during food prep and serving.
  *   `foodPreparationAndServingAdditionalSafetyException` (*type:* `String.t`, *default:* `nil`) - Food preparation and serving additional safety exception.
  *   `individualPackagedMeals` (*type:* `boolean()`, *default:* `nil`) - Individually-packaged meals.
  *   `individualPackagedMealsException` (*type:* `String.t`, *default:* `nil`) - Individual packaged meals exception.
  *   `singleUseFoodMenus` (*type:* `boolean()`, *default:* `nil`) - Single-use menus.
  *   `singleUseFoodMenusException` (*type:* `String.t`, *default:* `nil`) - Single use food menus exception.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :diningAreasAdditionalSanitation => boolean() | nil,
          :diningAreasAdditionalSanitationException => String.t() | nil,
          :disposableFlatware => boolean() | nil,
          :disposableFlatwareException => String.t() | nil,
          :foodPreparationAndServingAdditionalSafety => boolean() | nil,
          :foodPreparationAndServingAdditionalSafetyException => String.t() | nil,
          :individualPackagedMeals => boolean() | nil,
          :individualPackagedMealsException => String.t() | nil,
          :singleUseFoodMenus => boolean() | nil,
          :singleUseFoodMenusException => String.t() | nil
        }

  field(:diningAreasAdditionalSanitation)
  field(:diningAreasAdditionalSanitationException)
  field(:disposableFlatware)
  field(:disposableFlatwareException)
  field(:foodPreparationAndServingAdditionalSafety)
  field(:foodPreparationAndServingAdditionalSafetyException)
  field(:individualPackagedMeals)
  field(:individualPackagedMealsException)
  field(:singleUseFoodMenus)
  field(:singleUseFoodMenusException)
end

defimpl Poison.Decoder, for: GoogleApi.MyBusinessLodging.V1.Model.IncreasedFoodSafety do
  def decode(value, options) do
    GoogleApi.MyBusinessLodging.V1.Model.IncreasedFoodSafety.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.MyBusinessLodging.V1.Model.IncreasedFoodSafety do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
