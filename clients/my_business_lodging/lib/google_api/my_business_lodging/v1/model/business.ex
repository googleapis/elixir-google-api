# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.MyBusinessLodging.V1.Model.Business do
  @moduledoc """
  Features of the property of specific interest to the business traveler.

  ## Attributes

  *   `businessCenter` (*type:* `boolean()`, *default:* `nil`) - Business center. A designated room at the hotel with one or more desks and equipped with guest-use computers, printers, fax machines and/or photocopiers. May or may not be open 24/7. May or may not require a key to access. Not a meeting room or conference room.
  *   `businessCenterException` (*type:* `String.t`, *default:* `nil`) - Business center exception.
  *   `meetingRooms` (*type:* `boolean()`, *default:* `nil`) - Meeting rooms. Rooms at the hotel designated for business-related gatherings. Rooms are usually equipped with tables or desks, office chairs and audio/visual facilities to allow for presentations and conference calls. Also known as conference rooms.
  *   `meetingRoomsCount` (*type:* `integer()`, *default:* `nil`) - Meeting rooms count. The number of meeting rooms at the property.
  *   `meetingRoomsCountException` (*type:* `String.t`, *default:* `nil`) - Meeting rooms count exception.
  *   `meetingRoomsException` (*type:* `String.t`, *default:* `nil`) - Meeting rooms exception.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :businessCenter => boolean() | nil,
          :businessCenterException => String.t() | nil,
          :meetingRooms => boolean() | nil,
          :meetingRoomsCount => integer() | nil,
          :meetingRoomsCountException => String.t() | nil,
          :meetingRoomsException => String.t() | nil
        }

  field(:businessCenter)
  field(:businessCenterException)
  field(:meetingRooms)
  field(:meetingRoomsCount)
  field(:meetingRoomsCountException)
  field(:meetingRoomsException)
end

defimpl Poison.Decoder, for: GoogleApi.MyBusinessLodging.V1.Model.Business do
  def decode(value, options) do
    GoogleApi.MyBusinessLodging.V1.Model.Business.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.MyBusinessLodging.V1.Model.Business do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
