# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.MyBusinessLodging.V1.Model.ViewsFromUnit do
  @moduledoc """
  Views available from the guest unit itself.

  ## Attributes

  *   `beachView` (*type:* `boolean()`, *default:* `nil`) - Beach view. A guestroom that features a window through which guests can see the beach.
  *   `beachViewException` (*type:* `String.t`, *default:* `nil`) - Beach view exception.
  *   `cityView` (*type:* `boolean()`, *default:* `nil`) - City view. A guestroom that features a window through which guests can see the buildings, parks and/or streets of the city.
  *   `cityViewException` (*type:* `String.t`, *default:* `nil`) - City view exception.
  *   `gardenView` (*type:* `boolean()`, *default:* `nil`) - Garden view. A guestroom that features a window through which guests can see a garden.
  *   `gardenViewException` (*type:* `String.t`, *default:* `nil`) - Garden view exception.
  *   `lakeView` (*type:* `boolean()`, *default:* `nil`) - Lake view.
  *   `lakeViewException` (*type:* `String.t`, *default:* `nil`) - Lake view exception.
  *   `landmarkView` (*type:* `boolean()`, *default:* `nil`) - Landmark view. A guestroom that features a window through which guests can see a landmark such as the countryside, a golf course, the forest, a park, a rain forst, a mountain or a slope.
  *   `landmarkViewException` (*type:* `String.t`, *default:* `nil`) - Landmark view exception.
  *   `oceanView` (*type:* `boolean()`, *default:* `nil`) - Ocean view. A guestroom that features a window through which guests can see the ocean.
  *   `oceanViewException` (*type:* `String.t`, *default:* `nil`) - Ocean view exception.
  *   `poolView` (*type:* `boolean()`, *default:* `nil`) - Pool view. A guestroom that features a window through which guests can see the hotel's swimming pool.
  *   `poolViewException` (*type:* `String.t`, *default:* `nil`) - Pool view exception.
  *   `valleyView` (*type:* `boolean()`, *default:* `nil`) - Valley view. A guestroom that features a window through which guests can see over a valley.
  *   `valleyViewException` (*type:* `String.t`, *default:* `nil`) - Valley view exception.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :beachView => boolean() | nil,
          :beachViewException => String.t() | nil,
          :cityView => boolean() | nil,
          :cityViewException => String.t() | nil,
          :gardenView => boolean() | nil,
          :gardenViewException => String.t() | nil,
          :lakeView => boolean() | nil,
          :lakeViewException => String.t() | nil,
          :landmarkView => boolean() | nil,
          :landmarkViewException => String.t() | nil,
          :oceanView => boolean() | nil,
          :oceanViewException => String.t() | nil,
          :poolView => boolean() | nil,
          :poolViewException => String.t() | nil,
          :valleyView => boolean() | nil,
          :valleyViewException => String.t() | nil
        }

  field(:beachView)
  field(:beachViewException)
  field(:cityView)
  field(:cityViewException)
  field(:gardenView)
  field(:gardenViewException)
  field(:lakeView)
  field(:lakeViewException)
  field(:landmarkView)
  field(:landmarkViewException)
  field(:oceanView)
  field(:oceanViewException)
  field(:poolView)
  field(:poolViewException)
  field(:valleyView)
  field(:valleyViewException)
end

defimpl Poison.Decoder, for: GoogleApi.MyBusinessLodging.V1.Model.ViewsFromUnit do
  def decode(value, options) do
    GoogleApi.MyBusinessLodging.V1.Model.ViewsFromUnit.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.MyBusinessLodging.V1.Model.ViewsFromUnit do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
