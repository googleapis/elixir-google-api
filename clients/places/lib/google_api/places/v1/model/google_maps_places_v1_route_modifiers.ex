# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Places.V1.Model.GoogleMapsPlacesV1RouteModifiers do
  @moduledoc """
  Encapsulates a set of optional conditions to satisfy when calculating the routes.

  ## Attributes

  *   `avoidFerries` (*type:* `boolean()`, *default:* `nil`) - Optional. When set to true, avoids ferries where reasonable, giving preference to routes not containing ferries. Applies only to the `DRIVE` and `TWO_WHEELER` `TravelMode`.
  *   `avoidHighways` (*type:* `boolean()`, *default:* `nil`) - Optional. When set to true, avoids highways where reasonable, giving preference to routes not containing highways. Applies only to the `DRIVE` and `TWO_WHEELER` `TravelMode`.
  *   `avoidIndoor` (*type:* `boolean()`, *default:* `nil`) - Optional. When set to true, avoids navigating indoors where reasonable, giving preference to routes not containing indoor navigation. Applies only to the `WALK` `TravelMode`.
  *   `avoidTolls` (*type:* `boolean()`, *default:* `nil`) - Optional. When set to true, avoids toll roads where reasonable, giving preference to routes not containing toll roads. Applies only to the `DRIVE` and `TWO_WHEELER` `TravelMode`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :avoidFerries => boolean() | nil,
          :avoidHighways => boolean() | nil,
          :avoidIndoor => boolean() | nil,
          :avoidTolls => boolean() | nil
        }

  field(:avoidFerries)
  field(:avoidHighways)
  field(:avoidIndoor)
  field(:avoidTolls)
end

defimpl Poison.Decoder, for: GoogleApi.Places.V1.Model.GoogleMapsPlacesV1RouteModifiers do
  def decode(value, options) do
    GoogleApi.Places.V1.Model.GoogleMapsPlacesV1RouteModifiers.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Places.V1.Model.GoogleMapsPlacesV1RouteModifiers do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
