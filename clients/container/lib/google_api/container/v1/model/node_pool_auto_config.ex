# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Container.V1.Model.NodePoolAutoConfig do
  @moduledoc """
  Node pool configs that apply to all auto-provisioned node pools in autopilot clusters and node auto-provisioning enabled clusters.

  ## Attributes

  *   `linuxNodeConfig` (*type:* `GoogleApi.Container.V1.Model.LinuxNodeConfig.t`, *default:* `nil`) - Output only. Configuration options for Linux nodes.
  *   `networkTags` (*type:* `GoogleApi.Container.V1.Model.NetworkTags.t`, *default:* `nil`) - The list of instance tags applied to all nodes. Tags are used to identify valid sources or targets for network firewalls and are specified by the client during cluster creation. Each tag within the list must comply with RFC1035.
  *   `nodeKubeletConfig` (*type:* `GoogleApi.Container.V1.Model.NodeKubeletConfig.t`, *default:* `nil`) - NodeKubeletConfig controls the defaults for autoprovisioned node-pools. Currently only `insecure_kubelet_readonly_port_enabled` can be set here.
  *   `resourceManagerTags` (*type:* `GoogleApi.Container.V1.Model.ResourceManagerTags.t`, *default:* `nil`) - Resource manager tag keys and values to be attached to the nodes for managing Compute Engine firewalls using Network Firewall Policies.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :linuxNodeConfig => GoogleApi.Container.V1.Model.LinuxNodeConfig.t() | nil,
          :networkTags => GoogleApi.Container.V1.Model.NetworkTags.t() | nil,
          :nodeKubeletConfig => GoogleApi.Container.V1.Model.NodeKubeletConfig.t() | nil,
          :resourceManagerTags => GoogleApi.Container.V1.Model.ResourceManagerTags.t() | nil
        }

  field(:linuxNodeConfig, as: GoogleApi.Container.V1.Model.LinuxNodeConfig)
  field(:networkTags, as: GoogleApi.Container.V1.Model.NetworkTags)
  field(:nodeKubeletConfig, as: GoogleApi.Container.V1.Model.NodeKubeletConfig)
  field(:resourceManagerTags, as: GoogleApi.Container.V1.Model.ResourceManagerTags)
end

defimpl Poison.Decoder, for: GoogleApi.Container.V1.Model.NodePoolAutoConfig do
  def decode(value, options) do
    GoogleApi.Container.V1.Model.NodePoolAutoConfig.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Container.V1.Model.NodePoolAutoConfig do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
