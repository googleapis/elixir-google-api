# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Container.V1.Model.AutopilotCompatibilityIssue do
  @moduledoc """
  AutopilotCompatibilityIssue contains information about a specific compatibility issue with Autopilot mode.

  ## Attributes

  *   `constraintType` (*type:* `String.t`, *default:* `nil`) - The constraint type of the issue.
  *   `description` (*type:* `String.t`, *default:* `nil`) - The description of the issue.
  *   `documentationUrl` (*type:* `String.t`, *default:* `nil`) - A URL to a public documentation, which addresses resolving this issue.
  *   `incompatibilityType` (*type:* `String.t`, *default:* `nil`) - The incompatibility type of this issue.
  *   `lastObservation` (*type:* `DateTime.t`, *default:* `nil`) - The last time when this issue was observed.
  *   `subjects` (*type:* `list(String.t)`, *default:* `nil`) - The name of the resources which are subject to this issue.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :constraintType => String.t() | nil,
          :description => String.t() | nil,
          :documentationUrl => String.t() | nil,
          :incompatibilityType => String.t() | nil,
          :lastObservation => DateTime.t() | nil,
          :subjects => list(String.t()) | nil
        }

  field(:constraintType)
  field(:description)
  field(:documentationUrl)
  field(:incompatibilityType)
  field(:lastObservation, as: DateTime)
  field(:subjects, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.Container.V1.Model.AutopilotCompatibilityIssue do
  def decode(value, options) do
    GoogleApi.Container.V1.Model.AutopilotCompatibilityIssue.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Container.V1.Model.AutopilotCompatibilityIssue do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
