# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Container.V1.Model.UpgradeDetails do
  @moduledoc """
  UpgradeDetails contains detailed information of each individual upgrade operation.

  ## Attributes

  *   `endTime` (*type:* `DateTime.t`, *default:* `nil`) - The end timestamp of the upgrade.
  *   `initialVersion` (*type:* `String.t`, *default:* `nil`) - The version before the upgrade.
  *   `startTime` (*type:* `DateTime.t`, *default:* `nil`) - The start timestamp of the upgrade.
  *   `startType` (*type:* `String.t`, *default:* `nil`) - The start type of the upgrade.
  *   `state` (*type:* `String.t`, *default:* `nil`) - Output only. The state of the upgrade.
  *   `targetVersion` (*type:* `String.t`, *default:* `nil`) - The version after the upgrade.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :endTime => DateTime.t() | nil,
          :initialVersion => String.t() | nil,
          :startTime => DateTime.t() | nil,
          :startType => String.t() | nil,
          :state => String.t() | nil,
          :targetVersion => String.t() | nil
        }

  field(:endTime, as: DateTime)
  field(:initialVersion)
  field(:startTime, as: DateTime)
  field(:startType)
  field(:state)
  field(:targetVersion)
end

defimpl Poison.Decoder, for: GoogleApi.Container.V1.Model.UpgradeDetails do
  def decode(value, options) do
    GoogleApi.Container.V1.Model.UpgradeDetails.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Container.V1.Model.UpgradeDetails do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
