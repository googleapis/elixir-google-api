# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Pollen.V1.Model.IndexInfo do
  @moduledoc """
  This object contains data representing specific pollen index value, category and description.

  ## Attributes

  *   `category` (*type:* `String.t`, *default:* `nil`) - Text classification of index numerical score interpretation. The index consists of six categories: * 0: "None" * 1: "Very low" * 2: "Low" * 3: "Moderate" * 4: "High" * 5: "Very high
  *   `code` (*type:* `String.t`, *default:* `nil`) - The index's code. This field represents the index for programming purposes by using snake cases instead of spaces. Example: "UPI".
  *   `color` (*type:* `GoogleApi.Pollen.V1.Model.Color.t`, *default:* `nil`) - The color used to represent the Pollen Index numeric score.
  *   `displayName` (*type:* `String.t`, *default:* `nil`) - A human readable representation of the index name. Example: "Universal Pollen Index".
  *   `indexDescription` (*type:* `String.t`, *default:* `nil`) - Textual explanation of current index level.
  *   `value` (*type:* `integer()`, *default:* `nil`) - The index's numeric score. Numeric range is between 0 and 5.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :category => String.t() | nil,
          :code => String.t() | nil,
          :color => GoogleApi.Pollen.V1.Model.Color.t() | nil,
          :displayName => String.t() | nil,
          :indexDescription => String.t() | nil,
          :value => integer() | nil
        }

  field(:category)
  field(:code)
  field(:color, as: GoogleApi.Pollen.V1.Model.Color)
  field(:displayName)
  field(:indexDescription)
  field(:value)
end

defimpl Poison.Decoder, for: GoogleApi.Pollen.V1.Model.IndexInfo do
  def decode(value, options) do
    GoogleApi.Pollen.V1.Model.IndexInfo.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Pollen.V1.Model.IndexInfo do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
