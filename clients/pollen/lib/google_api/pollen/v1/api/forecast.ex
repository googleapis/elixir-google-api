# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Pollen.V1.Api.Forecast do
  @moduledoc """
  API calls for all endpoints tagged `Forecast`.
  """

  alias GoogleApi.Pollen.V1.Connection
  alias GoogleApi.Gax.{Request, Response}

  @library_version Mix.Project.config() |> Keyword.get(:version, "")

  @doc """
  Returns up to 5 days of daily pollen information in more than 65 countries, up to 1km resolution.

  ## Parameters

  *   `connection` (*type:* `GoogleApi.Pollen.V1.Connection.t`) - Connection to server
  *   `optional_params` (*type:* `keyword()`) - Optional parameters
      *   `:"$.xgafv"` (*type:* `String.t`) - V1 error format.
      *   `:access_token` (*type:* `String.t`) - OAuth access token.
      *   `:alt` (*type:* `String.t`) - Data format for response.
      *   `:callback` (*type:* `String.t`) - JSONP
      *   `:fields` (*type:* `String.t`) - Selector specifying which fields to include in a partial response.
      *   `:key` (*type:* `String.t`) - API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      *   `:oauth_token` (*type:* `String.t`) - OAuth 2.0 token for the current user.
      *   `:prettyPrint` (*type:* `boolean()`) - Returns response with indentations and line breaks.
      *   `:quotaUser` (*type:* `String.t`) - Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      *   `:uploadType` (*type:* `String.t`) - Legacy upload protocol for media (e.g. "media", "multipart").
      *   `:upload_protocol` (*type:* `String.t`) - Upload protocol for media (e.g. "raw", "multipart").
      *   `:days` (*type:* `integer()`) - Required. A number that indicates how many forecast days to request (minimum value 1, maximum value is 5).
      *   `:languageCode` (*type:* `String.t`) - Optional. Allows the client to choose the language for the response. If data cannot be provided for that language, the API uses the closest match. Allowed values rely on the IETF BCP-47 standard. The default value is "en".
      *   `:"location.latitude"` (*type:* `float()`) - The latitude in degrees. It must be in the range [-90.0, +90.0].
      *   `:"location.longitude"` (*type:* `float()`) - The longitude in degrees. It must be in the range [-180.0, +180.0].
      *   `:pageSize` (*type:* `integer()`) - Optional. The maximum number of daily info records to return per page. The default and max value is 5, indicating 5 days of data.
      *   `:pageToken` (*type:* `String.t`) - Optional. A page token received from a previous daily call. It is used to retrieve the subsequent page. Note that when providing a value for the page token, all other request parameters provided must match the previous call that provided the page token.
      *   `:plantsDescription` (*type:* `boolean()`) - Optional. Contains general information about plants, including details on their seasonality, special shapes and colors, information about allergic cross-reactions, and plant photos. The default value is "true".
  *   `opts` (*type:* `keyword()`) - Call options

  ## Returns

  *   `{:ok, %GoogleApi.Pollen.V1.Model.LookupForecastResponse{}}` on success
  *   `{:error, info}` on failure
  """
  @spec pollen_forecast_lookup(Tesla.Env.client(), keyword(), keyword()) ::
          {:ok, GoogleApi.Pollen.V1.Model.LookupForecastResponse.t()}
          | {:ok, Tesla.Env.t()}
          | {:ok, list()}
          | {:error, any()}
  def pollen_forecast_lookup(connection, optional_params \\ [], opts \\ []) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :uploadType => :query,
      :upload_protocol => :query,
      :days => :query,
      :languageCode => :query,
      :"location.latitude" => :query,
      :"location.longitude" => :query,
      :pageSize => :query,
      :pageToken => :query,
      :plantsDescription => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url("/v1/forecast:lookup", %{})
      |> Request.add_optional_params(optional_params_config, optional_params)
      |> Request.library_version(@library_version)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.Pollen.V1.Model.LookupForecastResponse{}])
  end
end
