# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Spanner.V1.Model.CreateInstanceConfigRequest do
  @moduledoc """
  The request for CreateInstanceConfig.

  ## Attributes

  *   `instanceConfig` (*type:* `GoogleApi.Spanner.V1.Model.InstanceConfig.t`, *default:* `nil`) - Required. The `InstanceConfig` proto of the configuration to create. `instance_config.name` must be `/instanceConfigs/`. `instance_config.base_config` must be a Google-managed configuration name, e.g. /instanceConfigs/us-east1, /instanceConfigs/nam3.
  *   `instanceConfigId` (*type:* `String.t`, *default:* `nil`) - Required. The ID of the instance configuration to create. Valid identifiers are of the form `custom-[-a-z0-9]*[a-z0-9]` and must be between 2 and 64 characters in length. The `custom-` prefix is required to avoid name conflicts with Google-managed configurations.
  *   `validateOnly` (*type:* `boolean()`, *default:* `nil`) - An option to validate, but not actually execute, a request, and provide the same response.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :instanceConfig => GoogleApi.Spanner.V1.Model.InstanceConfig.t() | nil,
          :instanceConfigId => String.t() | nil,
          :validateOnly => boolean() | nil
        }

  field(:instanceConfig, as: GoogleApi.Spanner.V1.Model.InstanceConfig)
  field(:instanceConfigId)
  field(:validateOnly)
end

defimpl Poison.Decoder, for: GoogleApi.Spanner.V1.Model.CreateInstanceConfigRequest do
  def decode(value, options) do
    GoogleApi.Spanner.V1.Model.CreateInstanceConfigRequest.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Spanner.V1.Model.CreateInstanceConfigRequest do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
