# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Spanner.V1.Model.InstancePartition do
  @moduledoc """
  An isolated set of Cloud Spanner resources that databases can define placements on.

  ## Attributes

  *   `config` (*type:* `String.t`, *default:* `nil`) - Required. The name of the instance partition's configuration. Values are of the form `projects//instanceConfigs/`. See also InstanceConfig and ListInstanceConfigs.
  *   `createTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. The time at which the instance partition was created.
  *   `displayName` (*type:* `String.t`, *default:* `nil`) - Required. The descriptive name for this instance partition as it appears in UIs. Must be unique per project and between 4 and 30 characters in length.
  *   `etag` (*type:* `String.t`, *default:* `nil`) - Used for optimistic concurrency control as a way to help prevent simultaneous updates of a instance partition from overwriting each other. It is strongly suggested that systems make use of the etag in the read-modify-write cycle to perform instance partition updates in order to avoid race conditions: An etag is returned in the response which contains instance partitions, and systems are expected to put that etag in the request to update instance partitions to ensure that their change will be applied to the same version of the instance partition. If no etag is provided in the call to update instance partition, then the existing instance partition is overwritten blindly.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Required. A unique identifier for the instance partition. Values are of the form `projects//instances//instancePartitions/a-z*[a-z0-9]`. The final segment of the name must be between 2 and 64 characters in length. An instance partition's name cannot be changed after the instance partition is created.
  *   `nodeCount` (*type:* `integer()`, *default:* `nil`) - The number of nodes allocated to this instance partition. Users can set the `node_count` field to specify the target number of nodes allocated to the instance partition. This may be zero in API responses for instance partitions that are not yet in state `READY`.
  *   `processingUnits` (*type:* `integer()`, *default:* `nil`) - The number of processing units allocated to this instance partition. Users can set the `processing_units` field to specify the target number of processing units allocated to the instance partition. This might be zero in API responses for instance partitions that are not yet in the `READY` state.
  *   `referencingBackups` (*type:* `list(String.t)`, *default:* `nil`) - Output only. Deprecated: This field is not populated. Output only. The names of the backups that reference this instance partition. Referencing backups should share the parent instance. The existence of any referencing backup prevents the instance partition from being deleted.
  *   `referencingDatabases` (*type:* `list(String.t)`, *default:* `nil`) - Output only. The names of the databases that reference this instance partition. Referencing databases should share the parent instance. The existence of any referencing database prevents the instance partition from being deleted.
  *   `state` (*type:* `String.t`, *default:* `nil`) - Output only. The current instance partition state.
  *   `updateTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. The time at which the instance partition was most recently updated.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :config => String.t() | nil,
          :createTime => DateTime.t() | nil,
          :displayName => String.t() | nil,
          :etag => String.t() | nil,
          :name => String.t() | nil,
          :nodeCount => integer() | nil,
          :processingUnits => integer() | nil,
          :referencingBackups => list(String.t()) | nil,
          :referencingDatabases => list(String.t()) | nil,
          :state => String.t() | nil,
          :updateTime => DateTime.t() | nil
        }

  field(:config)
  field(:createTime, as: DateTime)
  field(:displayName)
  field(:etag)
  field(:name)
  field(:nodeCount)
  field(:processingUnits)
  field(:referencingBackups, type: :list)
  field(:referencingDatabases, type: :list)
  field(:state)
  field(:updateTime, as: DateTime)
end

defimpl Poison.Decoder, for: GoogleApi.Spanner.V1.Model.InstancePartition do
  def decode(value, options) do
    GoogleApi.Spanner.V1.Model.InstancePartition.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Spanner.V1.Model.InstancePartition do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
