# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.DataPortability.V1.Model.InitiatePortabilityArchiveRequest do
  @moduledoc """
  Request to kick off an Archive job.

  ## Attributes

  *   `endTime` (*type:* `DateTime.t`, *default:* `nil`) - Optional. The timestamp that represents the end point for the data you are exporting. If the end_time is not specified in the InitiatePortabilityArchiveRequest, this field is set to the latest available data.
  *   `resources` (*type:* `list(String.t)`, *default:* `nil`) - The resources from which you're exporting data. These values have a 1:1 correspondence with the OAuth scopes.
  *   `startTime` (*type:* `DateTime.t`, *default:* `nil`) - Optional. The timestamp that represents the starting point for the data you are exporting. If the start_time is not specified in the InitiatePortabilityArchiveRequest, the field is set to the earliest available data.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :endTime => DateTime.t() | nil,
          :resources => list(String.t()) | nil,
          :startTime => DateTime.t() | nil
        }

  field(:endTime, as: DateTime)
  field(:resources, type: :list)
  field(:startTime, as: DateTime)
end

defimpl Poison.Decoder, for: GoogleApi.DataPortability.V1.Model.InitiatePortabilityArchiveRequest do
  def decode(value, options) do
    GoogleApi.DataPortability.V1.Model.InitiatePortabilityArchiveRequest.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.DataPortability.V1.Model.InitiatePortabilityArchiveRequest do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
