# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Testing.V1.Model.ApkManifest do
  @moduledoc """
  An Android app manifest. See http://developer.android.com/guide/topics/manifest/manifest-intro.html

  ## Attributes

  *   `applicationLabel` (*type:* `String.t`, *default:* `nil`) - User-readable name for the application.
  *   `intentFilters` (*type:* `list(GoogleApi.Testing.V1.Model.IntentFilter.t)`, *default:* `nil`) - 
  *   `maxSdkVersion` (*type:* `integer()`, *default:* `nil`) - Maximum API level on which the application is designed to run.
  *   `metadata` (*type:* `list(GoogleApi.Testing.V1.Model.Metadata.t)`, *default:* `nil`) - Meta-data tags defined in the manifest.
  *   `minSdkVersion` (*type:* `integer()`, *default:* `nil`) - Minimum API level required for the application to run.
  *   `packageName` (*type:* `String.t`, *default:* `nil`) - Full Java-style package name for this application, e.g. "com.example.foo".
  *   `services` (*type:* `list(GoogleApi.Testing.V1.Model.Service.t)`, *default:* `nil`) - Services contained in the tag.
  *   `targetSdkVersion` (*type:* `integer()`, *default:* `nil`) - Specifies the API Level on which the application is designed to run.
  *   `usesFeature` (*type:* `list(GoogleApi.Testing.V1.Model.UsesFeature.t)`, *default:* `nil`) - Feature usage tags defined in the manifest.
  *   `usesPermission` (*type:* `list(String.t)`, *default:* `nil`) - 
  *   `usesPermissionTags` (*type:* `list(GoogleApi.Testing.V1.Model.UsesPermissionTag.t)`, *default:* `nil`) - Permissions declared to be used by the application
  *   `versionCode` (*type:* `String.t`, *default:* `nil`) - Version number used internally by the app.
  *   `versionName` (*type:* `String.t`, *default:* `nil`) - Version number shown to users.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :applicationLabel => String.t() | nil,
          :intentFilters => list(GoogleApi.Testing.V1.Model.IntentFilter.t()) | nil,
          :maxSdkVersion => integer() | nil,
          :metadata => list(GoogleApi.Testing.V1.Model.Metadata.t()) | nil,
          :minSdkVersion => integer() | nil,
          :packageName => String.t() | nil,
          :services => list(GoogleApi.Testing.V1.Model.Service.t()) | nil,
          :targetSdkVersion => integer() | nil,
          :usesFeature => list(GoogleApi.Testing.V1.Model.UsesFeature.t()) | nil,
          :usesPermission => list(String.t()) | nil,
          :usesPermissionTags => list(GoogleApi.Testing.V1.Model.UsesPermissionTag.t()) | nil,
          :versionCode => String.t() | nil,
          :versionName => String.t() | nil
        }

  field(:applicationLabel)
  field(:intentFilters, as: GoogleApi.Testing.V1.Model.IntentFilter, type: :list)
  field(:maxSdkVersion)
  field(:metadata, as: GoogleApi.Testing.V1.Model.Metadata, type: :list)
  field(:minSdkVersion)
  field(:packageName)
  field(:services, as: GoogleApi.Testing.V1.Model.Service, type: :list)
  field(:targetSdkVersion)
  field(:usesFeature, as: GoogleApi.Testing.V1.Model.UsesFeature, type: :list)
  field(:usesPermission, type: :list)
  field(:usesPermissionTags, as: GoogleApi.Testing.V1.Model.UsesPermissionTag, type: :list)
  field(:versionCode)
  field(:versionName)
end

defimpl Poison.Decoder, for: GoogleApi.Testing.V1.Model.ApkManifest do
  def decode(value, options) do
    GoogleApi.Testing.V1.Model.ApkManifest.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Testing.V1.Model.ApkManifest do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
