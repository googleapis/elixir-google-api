# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Testing.V1.Model.IosTestSetup do
  @moduledoc """
  A description of how to set up an iOS device prior to running the test.

  ## Attributes

  *   `additionalIpas` (*type:* `list(GoogleApi.Testing.V1.Model.FileReference.t)`, *default:* `nil`) - iOS apps to install in addition to those being directly tested.
  *   `networkProfile` (*type:* `String.t`, *default:* `nil`) - The network traffic profile used for running the test. Available network profiles can be queried by using the NETWORK_CONFIGURATION environment type when calling TestEnvironmentDiscoveryService.GetTestEnvironmentCatalog.
  *   `pullDirectories` (*type:* `list(GoogleApi.Testing.V1.Model.IosDeviceFile.t)`, *default:* `nil`) - List of directories on the device to upload to Cloud Storage at the end of the test. Directories should either be in a shared directory (such as /private/var/mobile/Media) or within an accessible directory inside the app's filesystem (such as /Documents) by specifying the bundle ID.
  *   `pushFiles` (*type:* `list(GoogleApi.Testing.V1.Model.IosDeviceFile.t)`, *default:* `nil`) - List of files to push to the device before starting the test.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :additionalIpas => list(GoogleApi.Testing.V1.Model.FileReference.t()) | nil,
          :networkProfile => String.t() | nil,
          :pullDirectories => list(GoogleApi.Testing.V1.Model.IosDeviceFile.t()) | nil,
          :pushFiles => list(GoogleApi.Testing.V1.Model.IosDeviceFile.t()) | nil
        }

  field(:additionalIpas, as: GoogleApi.Testing.V1.Model.FileReference, type: :list)
  field(:networkProfile)
  field(:pullDirectories, as: GoogleApi.Testing.V1.Model.IosDeviceFile, type: :list)
  field(:pushFiles, as: GoogleApi.Testing.V1.Model.IosDeviceFile, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.Testing.V1.Model.IosTestSetup do
  def decode(value, options) do
    GoogleApi.Testing.V1.Model.IosTestSetup.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Testing.V1.Model.IosTestSetup do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
