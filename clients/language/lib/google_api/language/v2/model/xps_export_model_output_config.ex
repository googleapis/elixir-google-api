# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Language.V2.Model.XPSExportModelOutputConfig do
  @moduledoc """


  ## Attributes

  *   `coreMlFormat` (*type:* `GoogleApi.Language.V2.Model.XPSCoreMlFormat.t`, *default:* `nil`) - 
  *   `dockerFormat` (*type:* `GoogleApi.Language.V2.Model.XPSDockerFormat.t`, *default:* `nil`) - 
  *   `edgeTpuTfLiteFormat` (*type:* `GoogleApi.Language.V2.Model.XPSEdgeTpuTfLiteFormat.t`, *default:* `nil`) - 
  *   `exportFirebaseAuxiliaryInfo` (*type:* `boolean()`, *default:* `nil`) - For any model and format: If true, will additionally export FirebaseExportedModelInfo in a firebase.txt file.
  *   `outputGcrUri` (*type:* `String.t`, *default:* `nil`) - The Google Contained Registry path the exported files to be pushed to. This location is set if the exported format is DOCKDER.
  *   `outputGcsUri` (*type:* `String.t`, *default:* `nil`) - The Google Cloud Storage directory where XPS will output the exported models and related files. Format: gs://bucket/directory
  *   `tfJsFormat` (*type:* `GoogleApi.Language.V2.Model.XPSTfJsFormat.t`, *default:* `nil`) - 
  *   `tfLiteFormat` (*type:* `GoogleApi.Language.V2.Model.XPSTfLiteFormat.t`, *default:* `nil`) - 
  *   `tfSavedModelFormat` (*type:* `GoogleApi.Language.V2.Model.XPSTfSavedModelFormat.t`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :coreMlFormat => GoogleApi.Language.V2.Model.XPSCoreMlFormat.t() | nil,
          :dockerFormat => GoogleApi.Language.V2.Model.XPSDockerFormat.t() | nil,
          :edgeTpuTfLiteFormat => GoogleApi.Language.V2.Model.XPSEdgeTpuTfLiteFormat.t() | nil,
          :exportFirebaseAuxiliaryInfo => boolean() | nil,
          :outputGcrUri => String.t() | nil,
          :outputGcsUri => String.t() | nil,
          :tfJsFormat => GoogleApi.Language.V2.Model.XPSTfJsFormat.t() | nil,
          :tfLiteFormat => GoogleApi.Language.V2.Model.XPSTfLiteFormat.t() | nil,
          :tfSavedModelFormat => GoogleApi.Language.V2.Model.XPSTfSavedModelFormat.t() | nil
        }

  field(:coreMlFormat, as: GoogleApi.Language.V2.Model.XPSCoreMlFormat)
  field(:dockerFormat, as: GoogleApi.Language.V2.Model.XPSDockerFormat)
  field(:edgeTpuTfLiteFormat, as: GoogleApi.Language.V2.Model.XPSEdgeTpuTfLiteFormat)
  field(:exportFirebaseAuxiliaryInfo)
  field(:outputGcrUri)
  field(:outputGcsUri)
  field(:tfJsFormat, as: GoogleApi.Language.V2.Model.XPSTfJsFormat)
  field(:tfLiteFormat, as: GoogleApi.Language.V2.Model.XPSTfLiteFormat)
  field(:tfSavedModelFormat, as: GoogleApi.Language.V2.Model.XPSTfSavedModelFormat)
end

defimpl Poison.Decoder, for: GoogleApi.Language.V2.Model.XPSExportModelOutputConfig do
  def decode(value, options) do
    GoogleApi.Language.V2.Model.XPSExportModelOutputConfig.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Language.V2.Model.XPSExportModelOutputConfig do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
