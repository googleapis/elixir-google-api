# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Language.V2.Model.XPSImageExportModelSpec do
  @moduledoc """
  Information of downloadable models that are pre-generated as part of training flow and will be persisted in AutoMl backend. Upon receiving ExportModel request from user, AutoMl backend can serve the pre-generated models to user if exists (by copying the files from internal path to user provided location), otherwise, AutoMl backend will call xPS ExportModel API to generate the model on the fly with the requesting format.

  ## Attributes

  *   `exportModelOutputConfig` (*type:* `list(GoogleApi.Language.V2.Model.XPSExportModelOutputConfig.t)`, *default:* `nil`) - Contains the model format and internal location of the model files to be exported/downloaded. Use the Google Cloud Storage bucket name which is provided via TrainRequest.gcs_bucket_name to store the model files.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :exportModelOutputConfig =>
            list(GoogleApi.Language.V2.Model.XPSExportModelOutputConfig.t()) | nil
        }

  field(:exportModelOutputConfig,
    as: GoogleApi.Language.V2.Model.XPSExportModelOutputConfig,
    type: :list
  )
end

defimpl Poison.Decoder, for: GoogleApi.Language.V2.Model.XPSImageExportModelSpec do
  def decode(value, options) do
    GoogleApi.Language.V2.Model.XPSImageExportModelSpec.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Language.V2.Model.XPSImageExportModelSpec do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
