# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Language.V1.Model.XPSFileSpec do
  @moduledoc """
  Spec of input and output files, on external file systems (for example, Colossus Namespace System or Google Cloud Storage).

  ## Attributes

  *   `directoryPath` (*type:* `String.t`, *default:* `nil`) - Deprecated. Use file_spec.
  *   `fileFormat` (*type:* `String.t`, *default:* `nil`) - 
  *   `fileSpec` (*type:* `String.t`, *default:* `nil`) - Single file path, or file pattern of format "/path/to/file@shard_count". E.g. /cns/cell-d/somewhere/file@2 is expanded to two files: /cns/cell-d/somewhere/file-00000-of-00002 and /cns/cell-d/somewhere/file-00001-of-00002.
  *   `singleFilePath` (*type:* `String.t`, *default:* `nil`) - Deprecated. Use file_spec.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :directoryPath => String.t() | nil,
          :fileFormat => String.t() | nil,
          :fileSpec => String.t() | nil,
          :singleFilePath => String.t() | nil
        }

  field(:directoryPath)
  field(:fileFormat)
  field(:fileSpec)
  field(:singleFilePath)
end

defimpl Poison.Decoder, for: GoogleApi.Language.V1.Model.XPSFileSpec do
  def decode(value, options) do
    GoogleApi.Language.V1.Model.XPSFileSpec.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Language.V1.Model.XPSFileSpec do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
