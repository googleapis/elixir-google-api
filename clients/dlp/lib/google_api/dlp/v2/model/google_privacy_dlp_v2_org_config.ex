# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2OrgConfig do
  @moduledoc """
  Project and scan location information. Only set when the parent is an org.

  ## Attributes

  *   `location` (*type:* `GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2DiscoveryStartingLocation.t`, *default:* `nil`) - The data to scan: folder, org, or project
  *   `projectId` (*type:* `String.t`, *default:* `nil`) - The project that will run the scan. The DLP service account that exists within this project must have access to all resources that are profiled, and the DLP API must be enabled.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :location =>
            GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2DiscoveryStartingLocation.t() | nil,
          :projectId => String.t() | nil
        }

  field(:location, as: GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2DiscoveryStartingLocation)
  field(:projectId)
end

defimpl Poison.Decoder, for: GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2OrgConfig do
  def decode(value, options) do
    GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2OrgConfig.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2OrgConfig do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
