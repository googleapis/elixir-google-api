# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Content.V21.Model.ProductCertification do
  @moduledoc """
  Product [certification](https://support.google.com/merchants/answer/13528839), introduced for EU energy efficiency labeling compliance using the [EU EPREL](https://eprel.ec.europa.eu/screen/home) database.

  ## Attributes

  *   `certificationAuthority` (*type:* `String.t`, *default:* `nil`) - The certification authority, for example "European_Commission". Maximum length is 2000 characters.
  *   `certificationCode` (*type:* `String.t`, *default:* `nil`) - The certification code, for eaxample "123456". Maximum length is 2000 characters.
  *   `certificationName` (*type:* `String.t`, *default:* `nil`) - The name of the certification, for example "EPREL". Maximum length is 2000 characters.
  *   `certificationValue` (*type:* `String.t`, *default:* `nil`) - The certification value (also known as class, level or grade), for example "A+", "C", "gold". Maximum length is 2000 characters.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :certificationAuthority => String.t() | nil,
          :certificationCode => String.t() | nil,
          :certificationName => String.t() | nil,
          :certificationValue => String.t() | nil
        }

  field(:certificationAuthority)
  field(:certificationCode)
  field(:certificationName)
  field(:certificationValue)
end

defimpl Poison.Decoder, for: GoogleApi.Content.V21.Model.ProductCertification do
  def decode(value, options) do
    GoogleApi.Content.V21.Model.ProductCertification.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Content.V21.Model.ProductCertification do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
