# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Content.V21.Model.RenderAccountIssuesResponse do
  @moduledoc """
  Response containing support content and actions for listed account issues.

  ## Attributes

  *   `alternateDisputeResolution` (*type:* `GoogleApi.Content.V21.Model.AlternateDisputeResolution.t`, *default:* `nil`) - Alternate Dispute Resolution (ADR) is deprecated. Use `prerendered_out_of_court_dispute_settlement` instead.
  *   `issues` (*type:* `list(GoogleApi.Content.V21.Model.AccountIssue.t)`, *default:* `nil`) - List of account issues for a given account. This list can be shown with compressed, expandable items. In the compressed form, the title and impact should be shown for each issue. Once the issue is expanded, the detailed content and available actions should be rendered.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :alternateDisputeResolution =>
            GoogleApi.Content.V21.Model.AlternateDisputeResolution.t() | nil,
          :issues => list(GoogleApi.Content.V21.Model.AccountIssue.t()) | nil
        }

  field(:alternateDisputeResolution, as: GoogleApi.Content.V21.Model.AlternateDisputeResolution)
  field(:issues, as: GoogleApi.Content.V21.Model.AccountIssue, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.Content.V21.Model.RenderAccountIssuesResponse do
  def decode(value, options) do
    GoogleApi.Content.V21.Model.RenderAccountIssuesResponse.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Content.V21.Model.RenderAccountIssuesResponse do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
