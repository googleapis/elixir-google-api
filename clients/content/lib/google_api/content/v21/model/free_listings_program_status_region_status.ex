# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Content.V21.Model.FreeListingsProgramStatusRegionStatus do
  @moduledoc """
  Status of program and region.

  ## Attributes

  *   `disapprovalDate` (*type:* `String.t`, *default:* `nil`) - Date by which `eligibility_status` will go from `WARNING` to `DISAPPROVED`. It will be present when `eligibility_status` is `WARNING`. Date will be provided in ISO 8601 format i.e. YYYY-MM-DD
  *   `eligibilityStatus` (*type:* `String.t`, *default:* `nil`) - Eligibility status of the standard free listing program.
  *   `enhancedEligibilityStatus` (*type:* `String.t`, *default:* `nil`) - Eligibility status of the enhanced free listing program.
  *   `ineligibilityReason` (*type:* `String.t`, *default:* `nil`) - Reason if a program in a given country is not eligible for review. Populated only if `review_eligibility_status` is `INELIGIBLE`.
  *   `regionCodes` (*type:* `list(String.t)`, *default:* `nil`) - The two-letter [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) codes for all the regions with the same `eligibilityStatus` and `reviewEligibility`.
  *   `reviewEligibilityStatus` (*type:* `String.t`, *default:* `nil`) - If a program in a given country is eligible for review. It will be present only if eligibility status is `DISAPPROVED`.
  *   `reviewIssues` (*type:* `list(String.t)`, *default:* `nil`) - These issues will be evaluated in review process. Fix all the issues before requesting the review.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :disapprovalDate => String.t() | nil,
          :eligibilityStatus => String.t() | nil,
          :enhancedEligibilityStatus => String.t() | nil,
          :ineligibilityReason => String.t() | nil,
          :regionCodes => list(String.t()) | nil,
          :reviewEligibilityStatus => String.t() | nil,
          :reviewIssues => list(String.t()) | nil
        }

  field(:disapprovalDate)
  field(:eligibilityStatus)
  field(:enhancedEligibilityStatus)
  field(:ineligibilityReason)
  field(:regionCodes, type: :list)
  field(:reviewEligibilityStatus)
  field(:reviewIssues, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.Content.V21.Model.FreeListingsProgramStatusRegionStatus do
  def decode(value, options) do
    GoogleApi.Content.V21.Model.FreeListingsProgramStatusRegionStatus.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Content.V21.Model.FreeListingsProgramStatusRegionStatus do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
