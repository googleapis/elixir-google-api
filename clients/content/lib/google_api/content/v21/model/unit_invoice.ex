# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Content.V21.Model.UnitInvoice do
  @moduledoc """


  ## Attributes

  *   `additionalCharges` (*type:* `list(GoogleApi.Content.V21.Model.UnitInvoiceAdditionalCharge.t)`, *default:* `nil`) - Additional charges for a unit, e.g. shipping costs.
  *   `unitPrice` (*type:* `GoogleApi.Content.V21.Model.Price.t`, *default:* `nil`) - [required] Pre-tax or post-tax price of one unit depending on the locality of the order. *Note:* Invoicing works on a per unit basis. The `unitPrice` is the price of a single unit, and will be multiplied by the number of entries in `shipmentUnitId`.
  *   `unitPriceTaxes` (*type:* `list(GoogleApi.Content.V21.Model.UnitInvoiceTaxLine.t)`, *default:* `nil`) - Tax amounts to apply to the unit price.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :additionalCharges =>
            list(GoogleApi.Content.V21.Model.UnitInvoiceAdditionalCharge.t()) | nil,
          :unitPrice => GoogleApi.Content.V21.Model.Price.t() | nil,
          :unitPriceTaxes => list(GoogleApi.Content.V21.Model.UnitInvoiceTaxLine.t()) | nil
        }

  field(:additionalCharges,
    as: GoogleApi.Content.V21.Model.UnitInvoiceAdditionalCharge,
    type: :list
  )

  field(:unitPrice, as: GoogleApi.Content.V21.Model.Price)
  field(:unitPriceTaxes, as: GoogleApi.Content.V21.Model.UnitInvoiceTaxLine, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.Content.V21.Model.UnitInvoice do
  def decode(value, options) do
    GoogleApi.Content.V21.Model.UnitInvoice.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Content.V21.Model.UnitInvoice do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
