# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Dataflow.V1b3.Model.CounterUpdate do
  @moduledoc """
  An update to a Counter sent from a worker. Next ID: 17

  ## Attributes

  *   `boolean` (*type:* `boolean()`, *default:* `nil`) - Boolean value for And, Or.
  *   `boundedTrie` (*type:* `GoogleApi.Dataflow.V1b3.Model.BoundedTrie.t`, *default:* `nil`) - Bounded trie data
  *   `cumulative` (*type:* `boolean()`, *default:* `nil`) - True if this counter is reported as the total cumulative aggregate value accumulated since the worker started working on this WorkItem. By default this is false, indicating that this counter is reported as a delta.
  *   `distribution` (*type:* `GoogleApi.Dataflow.V1b3.Model.DistributionUpdate.t`, *default:* `nil`) - Distribution data
  *   `floatingPoint` (*type:* `float()`, *default:* `nil`) - Floating point value for Sum, Max, Min.
  *   `floatingPointList` (*type:* `GoogleApi.Dataflow.V1b3.Model.FloatingPointList.t`, *default:* `nil`) - List of floating point numbers, for Set.
  *   `floatingPointMean` (*type:* `GoogleApi.Dataflow.V1b3.Model.FloatingPointMean.t`, *default:* `nil`) - Floating point mean aggregation value for Mean.
  *   `integer` (*type:* `GoogleApi.Dataflow.V1b3.Model.SplitInt64.t`, *default:* `nil`) - Integer value for Sum, Max, Min.
  *   `integerGauge` (*type:* `GoogleApi.Dataflow.V1b3.Model.IntegerGauge.t`, *default:* `nil`) - Gauge data
  *   `integerList` (*type:* `GoogleApi.Dataflow.V1b3.Model.IntegerList.t`, *default:* `nil`) - List of integers, for Set.
  *   `integerMean` (*type:* `GoogleApi.Dataflow.V1b3.Model.IntegerMean.t`, *default:* `nil`) - Integer mean aggregation value for Mean.
  *   `internal` (*type:* `any()`, *default:* `nil`) - Value for internally-defined counters used by the Dataflow service.
  *   `nameAndKind` (*type:* `GoogleApi.Dataflow.V1b3.Model.NameAndKind.t`, *default:* `nil`) - Counter name and aggregation type.
  *   `shortId` (*type:* `String.t`, *default:* `nil`) - The service-generated short identifier for this counter. The short_id -> (name, metadata) mapping is constant for the lifetime of a job.
  *   `stringList` (*type:* `GoogleApi.Dataflow.V1b3.Model.StringList.t`, *default:* `nil`) - List of strings, for Set.
  *   `structuredNameAndMetadata` (*type:* `GoogleApi.Dataflow.V1b3.Model.CounterStructuredNameAndMetadata.t`, *default:* `nil`) - Counter structured name and metadata.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :boolean => boolean() | nil,
          :boundedTrie => GoogleApi.Dataflow.V1b3.Model.BoundedTrie.t() | nil,
          :cumulative => boolean() | nil,
          :distribution => GoogleApi.Dataflow.V1b3.Model.DistributionUpdate.t() | nil,
          :floatingPoint => float() | nil,
          :floatingPointList => GoogleApi.Dataflow.V1b3.Model.FloatingPointList.t() | nil,
          :floatingPointMean => GoogleApi.Dataflow.V1b3.Model.FloatingPointMean.t() | nil,
          :integer => GoogleApi.Dataflow.V1b3.Model.SplitInt64.t() | nil,
          :integerGauge => GoogleApi.Dataflow.V1b3.Model.IntegerGauge.t() | nil,
          :integerList => GoogleApi.Dataflow.V1b3.Model.IntegerList.t() | nil,
          :integerMean => GoogleApi.Dataflow.V1b3.Model.IntegerMean.t() | nil,
          :internal => any() | nil,
          :nameAndKind => GoogleApi.Dataflow.V1b3.Model.NameAndKind.t() | nil,
          :shortId => String.t() | nil,
          :stringList => GoogleApi.Dataflow.V1b3.Model.StringList.t() | nil,
          :structuredNameAndMetadata =>
            GoogleApi.Dataflow.V1b3.Model.CounterStructuredNameAndMetadata.t() | nil
        }

  field(:boolean)
  field(:boundedTrie, as: GoogleApi.Dataflow.V1b3.Model.BoundedTrie)
  field(:cumulative)
  field(:distribution, as: GoogleApi.Dataflow.V1b3.Model.DistributionUpdate)
  field(:floatingPoint)
  field(:floatingPointList, as: GoogleApi.Dataflow.V1b3.Model.FloatingPointList)
  field(:floatingPointMean, as: GoogleApi.Dataflow.V1b3.Model.FloatingPointMean)
  field(:integer, as: GoogleApi.Dataflow.V1b3.Model.SplitInt64)
  field(:integerGauge, as: GoogleApi.Dataflow.V1b3.Model.IntegerGauge)
  field(:integerList, as: GoogleApi.Dataflow.V1b3.Model.IntegerList)
  field(:integerMean, as: GoogleApi.Dataflow.V1b3.Model.IntegerMean)
  field(:internal)
  field(:nameAndKind, as: GoogleApi.Dataflow.V1b3.Model.NameAndKind)
  field(:shortId)
  field(:stringList, as: GoogleApi.Dataflow.V1b3.Model.StringList)

  field(:structuredNameAndMetadata,
    as: GoogleApi.Dataflow.V1b3.Model.CounterStructuredNameAndMetadata
  )
end

defimpl Poison.Decoder, for: GoogleApi.Dataflow.V1b3.Model.CounterUpdate do
  def decode(value, options) do
    GoogleApi.Dataflow.V1b3.Model.CounterUpdate.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Dataflow.V1b3.Model.CounterUpdate do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
