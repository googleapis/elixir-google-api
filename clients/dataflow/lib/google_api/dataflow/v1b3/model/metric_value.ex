# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Dataflow.V1b3.Model.MetricValue do
  @moduledoc """
  The value of a metric along with its name and labels.

  ## Attributes

  *   `metric` (*type:* `String.t`, *default:* `nil`) - Base name for this metric.
  *   `metricLabels` (*type:* `map()`, *default:* `nil`) - Optional. Set of metric labels for this metric.
  *   `valueGauge64` (*type:* `GoogleApi.Dataflow.V1b3.Model.DataflowGaugeValue.t`, *default:* `nil`) - Non-cumulative int64 value of this metric.
  *   `valueHistogram` (*type:* `GoogleApi.Dataflow.V1b3.Model.DataflowHistogramValue.t`, *default:* `nil`) - Histogram value of this metric.
  *   `valueInt64` (*type:* `String.t`, *default:* `nil`) - Integer value of this metric.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :metric => String.t() | nil,
          :metricLabels => map() | nil,
          :valueGauge64 => GoogleApi.Dataflow.V1b3.Model.DataflowGaugeValue.t() | nil,
          :valueHistogram => GoogleApi.Dataflow.V1b3.Model.DataflowHistogramValue.t() | nil,
          :valueInt64 => String.t() | nil
        }

  field(:metric)
  field(:metricLabels, type: :map)
  field(:valueGauge64, as: GoogleApi.Dataflow.V1b3.Model.DataflowGaugeValue)
  field(:valueHistogram, as: GoogleApi.Dataflow.V1b3.Model.DataflowHistogramValue)
  field(:valueInt64)
end

defimpl Poison.Decoder, for: GoogleApi.Dataflow.V1b3.Model.MetricValue do
  def decode(value, options) do
    GoogleApi.Dataflow.V1b3.Model.MetricValue.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Dataflow.V1b3.Model.MetricValue do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
