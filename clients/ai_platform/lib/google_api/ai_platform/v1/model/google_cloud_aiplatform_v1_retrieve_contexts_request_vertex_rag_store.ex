# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.AIPlatform.V1.Model.GoogleCloudAiplatformV1RetrieveContextsRequestVertexRagStore do
  @moduledoc """
  The data source for Vertex RagStore.

  ## Attributes

  *   `ragResources` (*type:* `list(GoogleApi.AIPlatform.V1.Model.GoogleCloudAiplatformV1RetrieveContextsRequestVertexRagStoreRagResource.t)`, *default:* `nil`) - Optional. The representation of the rag source. It can be used to specify corpus only or ragfiles. Currently only support one corpus or multiple files from one corpus. In the future we may open up multiple corpora support.
  *   `vectorDistanceThreshold` (*type:* `float()`, *default:* `nil`) - Optional. Only return contexts with vector distance smaller than the threshold.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :ragResources =>
            list(
              GoogleApi.AIPlatform.V1.Model.GoogleCloudAiplatformV1RetrieveContextsRequestVertexRagStoreRagResource.t()
            )
            | nil,
          :vectorDistanceThreshold => float() | nil
        }

  field(:ragResources,
    as:
      GoogleApi.AIPlatform.V1.Model.GoogleCloudAiplatformV1RetrieveContextsRequestVertexRagStoreRagResource,
    type: :list
  )

  field(:vectorDistanceThreshold)
end

defimpl Poison.Decoder,
  for: GoogleApi.AIPlatform.V1.Model.GoogleCloudAiplatformV1RetrieveContextsRequestVertexRagStore do
  def decode(value, options) do
    GoogleApi.AIPlatform.V1.Model.GoogleCloudAiplatformV1RetrieveContextsRequestVertexRagStore.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.AIPlatform.V1.Model.GoogleCloudAiplatformV1RetrieveContextsRequestVertexRagStore do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
