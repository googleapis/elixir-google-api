# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.AIPlatform.V1.Model.GoogleCloudAiplatformV1RagContextsContext do
  @moduledoc """
  A context of the query.

  ## Attributes

  *   `score` (*type:* `float()`, *default:* `nil`) - According to the underlying Vector DB and the selected metric type, the score can be either the distance or the similarity between the query and the context and its range depends on the metric type. For example, if the metric type is COSINE_DISTANCE, it represents the distance between the query and the context. The larger the distance, the less relevant the context is to the query. The range is [0, 2], while 0 means the most relevant and 2 means the least relevant.
  *   `sourceDisplayName` (*type:* `String.t`, *default:* `nil`) - The file display name.
  *   `sourceUri` (*type:* `String.t`, *default:* `nil`) - If the file is imported from Cloud Storage or Google Drive, source_uri will be original file URI in Cloud Storage or Google Drive; if file is uploaded, source_uri will be file display name.
  *   `text` (*type:* `String.t`, *default:* `nil`) - The text chunk.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :score => float() | nil,
          :sourceDisplayName => String.t() | nil,
          :sourceUri => String.t() | nil,
          :text => String.t() | nil
        }

  field(:score)
  field(:sourceDisplayName)
  field(:sourceUri)
  field(:text)
end

defimpl Poison.Decoder,
  for: GoogleApi.AIPlatform.V1.Model.GoogleCloudAiplatformV1RagContextsContext do
  def decode(value, options) do
    GoogleApi.AIPlatform.V1.Model.GoogleCloudAiplatformV1RagContextsContext.decode(value, options)
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.AIPlatform.V1.Model.GoogleCloudAiplatformV1RagContextsContext do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
