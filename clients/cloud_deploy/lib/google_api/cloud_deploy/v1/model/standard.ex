# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudDeploy.V1.Model.Standard do
  @moduledoc """
  Standard represents the standard deployment strategy.

  ## Attributes

  *   `postdeploy` (*type:* `GoogleApi.CloudDeploy.V1.Model.Postdeploy.t`, *default:* `nil`) - Optional. Configuration for the postdeploy job. If this is not configured, postdeploy job will not be present.
  *   `predeploy` (*type:* `GoogleApi.CloudDeploy.V1.Model.Predeploy.t`, *default:* `nil`) - Optional. Configuration for the predeploy job. If this is not configured, predeploy job will not be present.
  *   `verify` (*type:* `boolean()`, *default:* `nil`) - Optional. Whether to verify a deployment.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :postdeploy => GoogleApi.CloudDeploy.V1.Model.Postdeploy.t() | nil,
          :predeploy => GoogleApi.CloudDeploy.V1.Model.Predeploy.t() | nil,
          :verify => boolean() | nil
        }

  field(:postdeploy, as: GoogleApi.CloudDeploy.V1.Model.Postdeploy)
  field(:predeploy, as: GoogleApi.CloudDeploy.V1.Model.Predeploy)
  field(:verify)
end

defimpl Poison.Decoder, for: GoogleApi.CloudDeploy.V1.Model.Standard do
  def decode(value, options) do
    GoogleApi.CloudDeploy.V1.Model.Standard.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudDeploy.V1.Model.Standard do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
