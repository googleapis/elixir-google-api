# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudDeploy.V1.Model.AutomationRule do
  @moduledoc """
  `AutomationRule` defines the automation activities.

  ## Attributes

  *   `advanceRolloutRule` (*type:* `GoogleApi.CloudDeploy.V1.Model.AdvanceRolloutRule.t`, *default:* `nil`) - Optional. The `AdvanceRolloutRule` will automatically advance a successful Rollout.
  *   `promoteReleaseRule` (*type:* `GoogleApi.CloudDeploy.V1.Model.PromoteReleaseRule.t`, *default:* `nil`) - Optional. `PromoteReleaseRule` will automatically promote a release from the current target to a specified target.
  *   `repairRolloutRule` (*type:* `GoogleApi.CloudDeploy.V1.Model.RepairRolloutRule.t`, *default:* `nil`) - Optional. The `RepairRolloutRule` will automatically repair a failed rollout.
  *   `timedPromoteReleaseRule` (*type:* `GoogleApi.CloudDeploy.V1.Model.TimedPromoteReleaseRule.t`, *default:* `nil`) - Optional. The `TimedPromoteReleaseRule` will automatically promote a release from the current target(s) to the specified target(s) on a configured schedule.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :advanceRolloutRule => GoogleApi.CloudDeploy.V1.Model.AdvanceRolloutRule.t() | nil,
          :promoteReleaseRule => GoogleApi.CloudDeploy.V1.Model.PromoteReleaseRule.t() | nil,
          :repairRolloutRule => GoogleApi.CloudDeploy.V1.Model.RepairRolloutRule.t() | nil,
          :timedPromoteReleaseRule =>
            GoogleApi.CloudDeploy.V1.Model.TimedPromoteReleaseRule.t() | nil
        }

  field(:advanceRolloutRule, as: GoogleApi.CloudDeploy.V1.Model.AdvanceRolloutRule)
  field(:promoteReleaseRule, as: GoogleApi.CloudDeploy.V1.Model.PromoteReleaseRule)
  field(:repairRolloutRule, as: GoogleApi.CloudDeploy.V1.Model.RepairRolloutRule)
  field(:timedPromoteReleaseRule, as: GoogleApi.CloudDeploy.V1.Model.TimedPromoteReleaseRule)
end

defimpl Poison.Decoder, for: GoogleApi.CloudDeploy.V1.Model.AutomationRule do
  def decode(value, options) do
    GoogleApi.CloudDeploy.V1.Model.AutomationRule.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudDeploy.V1.Model.AutomationRule do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
