# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudDeploy.V1.Model.DeliveryPipeline do
  @moduledoc """
  A `DeliveryPipeline` resource in the Cloud Deploy API. A `DeliveryPipeline` defines a pipeline through which a Skaffold configuration can progress.

  ## Attributes

  *   `annotations` (*type:* `map()`, *default:* `nil`) - User annotations. These attributes can only be set and used by the user, and not by Cloud Deploy.
  *   `condition` (*type:* `GoogleApi.CloudDeploy.V1.Model.PipelineCondition.t`, *default:* `nil`) - Output only. Information around the state of the Delivery Pipeline.
  *   `createTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. Time at which the pipeline was created.
  *   `description` (*type:* `String.t`, *default:* `nil`) - Description of the `DeliveryPipeline`. Max length is 255 characters.
  *   `etag` (*type:* `String.t`, *default:* `nil`) - This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
  *   `labels` (*type:* `map()`, *default:* `nil`) - Labels are attributes that can be set and used by both the user and by Cloud Deploy. Labels must meet the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values are additionally constrained to be <= 128 bytes.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Optional. Name of the `DeliveryPipeline`. Format is `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}`. The `deliveryPipeline` component must match `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`
  *   `serialPipeline` (*type:* `GoogleApi.CloudDeploy.V1.Model.SerialPipeline.t`, *default:* `nil`) - SerialPipeline defines a sequential set of stages for a `DeliveryPipeline`.
  *   `suspended` (*type:* `boolean()`, *default:* `nil`) - When suspended, no new releases or rollouts can be created, but in-progress ones will complete.
  *   `uid` (*type:* `String.t`, *default:* `nil`) - Output only. Unique identifier of the `DeliveryPipeline`.
  *   `updateTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. Most recent time at which the pipeline was updated.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :annotations => map() | nil,
          :condition => GoogleApi.CloudDeploy.V1.Model.PipelineCondition.t() | nil,
          :createTime => DateTime.t() | nil,
          :description => String.t() | nil,
          :etag => String.t() | nil,
          :labels => map() | nil,
          :name => String.t() | nil,
          :serialPipeline => GoogleApi.CloudDeploy.V1.Model.SerialPipeline.t() | nil,
          :suspended => boolean() | nil,
          :uid => String.t() | nil,
          :updateTime => DateTime.t() | nil
        }

  field(:annotations, type: :map)
  field(:condition, as: GoogleApi.CloudDeploy.V1.Model.PipelineCondition)
  field(:createTime, as: DateTime)
  field(:description)
  field(:etag)
  field(:labels, type: :map)
  field(:name)
  field(:serialPipeline, as: GoogleApi.CloudDeploy.V1.Model.SerialPipeline)
  field(:suspended)
  field(:uid)
  field(:updateTime, as: DateTime)
end

defimpl Poison.Decoder, for: GoogleApi.CloudDeploy.V1.Model.DeliveryPipeline do
  def decode(value, options) do
    GoogleApi.CloudDeploy.V1.Model.DeliveryPipeline.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudDeploy.V1.Model.DeliveryPipeline do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
