# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudAsset.V1.Model.Options do
  @moduledoc """
  Contains query options.

  ## Attributes

  *   `analyzeServiceAccountImpersonation` (*type:* `boolean()`, *default:* `nil`) - Optional. If true, the response will include access analysis from identities to resources via service account impersonation. This is a very expensive operation, because many derived queries will be executed. We highly recommend you use AssetService.AnalyzeIamPolicyLongrunning rpc instead. For example, if the request analyzes for which resources user A has permission P, and there's an IAM policy states user A has iam.serviceAccounts.getAccessToken permission to a service account SA, and there's another IAM policy states service account SA has permission P to a GCP folder F, then user A potentially has access to the GCP folder F. And those advanced analysis results will be included in AnalyzeIamPolicyResponse.service_account_impersonation_analysis. Another example, if the request analyzes for who has permission P to a GCP folder F, and there's an IAM policy states user A has iam.serviceAccounts.actAs permission to a service account SA, and there's another IAM policy states service account SA has permission P to the GCP folder F, then user A potentially has access to the GCP folder F. And those advanced analysis results will be included in AnalyzeIamPolicyResponse.service_account_impersonation_analysis. Default is false.
  *   `expandGroups` (*type:* `boolean()`, *default:* `nil`) - Optional. If true, the identities section of the result will expand any Google groups appearing in an IAM policy binding. If IamPolicyAnalysisQuery.identity_selector is specified, the identity in the result will be determined by the selector, and this flag is not allowed to set. Default is false.
  *   `expandResources` (*type:* `boolean()`, *default:* `nil`) - Optional. If true and IamPolicyAnalysisQuery.resource_selector is not specified, the resource section of the result will expand any resource attached to an IAM policy to include resources lower in the resource hierarchy. For example, if the request analyzes for which resources user A has permission P, and the results include an IAM policy with P on a GCP folder, the results will also include resources in that folder with permission P. If true and IamPolicyAnalysisQuery.resource_selector is specified, the resource section of the result will expand the specified resource to include resources lower in the resource hierarchy. Only project or lower resources are supported. Folder and organization resource cannot be used together with this option. For example, if the request analyzes for which users have permission P on a GCP project with this option enabled, the results will include all users who have permission P on that project or any lower resource. Default is false.
  *   `expandRoles` (*type:* `boolean()`, *default:* `nil`) - Optional. If true, the access section of result will expand any roles appearing in IAM policy bindings to include their permissions. If IamPolicyAnalysisQuery.access_selector is specified, the access section of the result will be determined by the selector, and this flag is not allowed to set. Default is false.
  *   `outputGroupEdges` (*type:* `boolean()`, *default:* `nil`) - Optional. If true, the result will output the relevant membership relationships between groups and other groups, and between groups and principals. Default is false.
  *   `outputResourceEdges` (*type:* `boolean()`, *default:* `nil`) - Optional. If true, the result will output the relevant parent/child relationships between resources. Default is false.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :analyzeServiceAccountImpersonation => boolean() | nil,
          :expandGroups => boolean() | nil,
          :expandResources => boolean() | nil,
          :expandRoles => boolean() | nil,
          :outputGroupEdges => boolean() | nil,
          :outputResourceEdges => boolean() | nil
        }

  field(:analyzeServiceAccountImpersonation)
  field(:expandGroups)
  field(:expandResources)
  field(:expandRoles)
  field(:outputGroupEdges)
  field(:outputResourceEdges)
end

defimpl Poison.Decoder, for: GoogleApi.CloudAsset.V1.Model.Options do
  def decode(value, options) do
    GoogleApi.CloudAsset.V1.Model.Options.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudAsset.V1.Model.Options do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
