# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.DocumentAI.V1.Model.GoogleCloudDocumentaiV1beta2DocumentLabel do
  @moduledoc """
  Label attaches schema information and/or other metadata to segments within a Document. Multiple Labels on a single field can denote either different labels, different instances of the same label created at different times, or some combination of both.

  ## Attributes

  *   `automlModel` (*type:* `String.t`, *default:* `nil`) - Label is generated AutoML model. This field stores the full resource name of the AutoML model. Format: `projects/{project-id}/locations/{location-id}/models/{model-id}`
  *   `confidence` (*type:* `number()`, *default:* `nil`) - Confidence score between 0 and 1 for label assignment.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Name of the label. When the label is generated from AutoML Text Classification model, this field represents the name of the category.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :automlModel => String.t() | nil,
          :confidence => number() | nil,
          :name => String.t() | nil
        }

  field(:automlModel)
  field(:confidence)
  field(:name)
end

defimpl Poison.Decoder,
  for: GoogleApi.DocumentAI.V1.Model.GoogleCloudDocumentaiV1beta2DocumentLabel do
  def decode(value, options) do
    GoogleApi.DocumentAI.V1.Model.GoogleCloudDocumentaiV1beta2DocumentLabel.decode(value, options)
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.DocumentAI.V1.Model.GoogleCloudDocumentaiV1beta2DocumentLabel do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
