# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Batch.V1.Model.LogsPolicy do
  @moduledoc """
  LogsPolicy describes if and how a job's logs are preserved. Logs include information that is automatically written by the Batch service agent and any information that you configured the job's runnables to write to the `stdout` or `stderr` streams.

  ## Attributes

  *   `cloudLoggingOption` (*type:* `GoogleApi.Batch.V1.Model.CloudLoggingOption.t`, *default:* `nil`) - Optional. When `destination` is set to `CLOUD_LOGGING`, you can optionally set this field to configure additional settings for Cloud Logging.
  *   `destination` (*type:* `String.t`, *default:* `nil`) - If and where logs should be saved.
  *   `logsPath` (*type:* `String.t`, *default:* `nil`) - When `destination` is set to `PATH`, you must set this field to the path where you want logs to be saved. This path can point to a local directory on the VM or (if congifured) a directory under the mount path of any Cloud Storage bucket, network file system (NFS), or writable persistent disk that is mounted to the job. For example, if the job has a bucket with `mountPath` set to `/mnt/disks/my-bucket`, you can write logs to the root directory of the `remotePath` of that bucket by setting this field to `/mnt/disks/my-bucket/`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :cloudLoggingOption => GoogleApi.Batch.V1.Model.CloudLoggingOption.t() | nil,
          :destination => String.t() | nil,
          :logsPath => String.t() | nil
        }

  field(:cloudLoggingOption, as: GoogleApi.Batch.V1.Model.CloudLoggingOption)
  field(:destination)
  field(:logsPath)
end

defimpl Poison.Decoder, for: GoogleApi.Batch.V1.Model.LogsPolicy do
  def decode(value, options) do
    GoogleApi.Batch.V1.Model.LogsPolicy.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Batch.V1.Model.LogsPolicy do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
