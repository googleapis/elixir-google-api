# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Batch.V1.Model.JobNotification do
  @moduledoc """
  Notification configurations.

  ## Attributes

  *   `message` (*type:* `GoogleApi.Batch.V1.Model.Message.t`, *default:* `nil`) - The attribute requirements of messages to be sent to this Pub/Sub topic. Without this field, no message will be sent.
  *   `pubsubTopic` (*type:* `String.t`, *default:* `nil`) - The Pub/Sub topic where notifications for the job, like state changes, will be published. If undefined, no Pub/Sub notifications are sent for this job. Specify the topic using the following format: `projects/{project}/topics/{topic}`. Notably, if you want to specify a Pub/Sub topic that is in a different project than the job, your administrator must grant your project's Batch service agent permission to publish to that topic. For more information about configuring Pub/Sub notifications for a job, see https://cloud.google.com/batch/docs/enable-notifications.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :message => GoogleApi.Batch.V1.Model.Message.t() | nil,
          :pubsubTopic => String.t() | nil
        }

  field(:message, as: GoogleApi.Batch.V1.Model.Message)
  field(:pubsubTopic)
end

defimpl Poison.Decoder, for: GoogleApi.Batch.V1.Model.JobNotification do
  def decode(value, options) do
    GoogleApi.Batch.V1.Model.JobNotification.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Batch.V1.Model.JobNotification do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
