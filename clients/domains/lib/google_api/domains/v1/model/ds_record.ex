# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Domains.V1.Model.DsRecord do
  @moduledoc """
  Defines a Delegation Signer (DS) record, which is needed to enable DNSSEC for a domain. It contains a digest (hash) of a DNSKEY record that must be present in the domain's DNS zone.

  ## Attributes

  *   `algorithm` (*type:* `String.t`, *default:* `nil`) - The algorithm used to generate the referenced DNSKEY.
  *   `digest` (*type:* `String.t`, *default:* `nil`) - The digest generated from the referenced DNSKEY.
  *   `digestType` (*type:* `String.t`, *default:* `nil`) - The hash function used to generate the digest of the referenced DNSKEY.
  *   `keyTag` (*type:* `integer()`, *default:* `nil`) - The key tag of the record. Must be set in range 0 -- 65535.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :algorithm => String.t() | nil,
          :digest => String.t() | nil,
          :digestType => String.t() | nil,
          :keyTag => integer() | nil
        }

  field(:algorithm)
  field(:digest)
  field(:digestType)
  field(:keyTag)
end

defimpl Poison.Decoder, for: GoogleApi.Domains.V1.Model.DsRecord do
  def decode(value, options) do
    GoogleApi.Domains.V1.Model.DsRecord.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Domains.V1.Model.DsRecord do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
