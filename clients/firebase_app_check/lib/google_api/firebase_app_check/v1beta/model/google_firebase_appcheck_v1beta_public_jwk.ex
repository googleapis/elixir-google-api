# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.FirebaseAppCheck.V1beta.Model.GoogleFirebaseAppcheckV1betaPublicJwk do
  @moduledoc """
  A JWK as specified by [section 4 of RFC 7517](https://tools.ietf.org/html/rfc7517#section-4) and [section 6.3.1 of RFC 7518](https://tools.ietf.org/html/rfc7518#section-6.3.1).

  ## Attributes

  *   `alg` (*type:* `String.t`, *default:* `nil`) - See [section 4.4 of RFC 7517](https://tools.ietf.org/html/rfc7517#section-4.4).
  *   `e` (*type:* `String.t`, *default:* `nil`) - See [section 6.3.1.2 of RFC 7518](https://tools.ietf.org/html/rfc7518#section-6.3.1.2).
  *   `kid` (*type:* `String.t`, *default:* `nil`) - See [section 4.5 of RFC 7517](https://tools.ietf.org/html/rfc7517#section-4.5).
  *   `kty` (*type:* `String.t`, *default:* `nil`) - See [section 4.1 of RFC 7517](https://tools.ietf.org/html/rfc7517#section-4.1).
  *   `n` (*type:* `String.t`, *default:* `nil`) - See [section 6.3.1.1 of RFC 7518](https://tools.ietf.org/html/rfc7518#section-6.3.1.1).
  *   `use` (*type:* `String.t`, *default:* `nil`) - See [section 4.2 of RFC 7517](https://tools.ietf.org/html/rfc7517#section-4.2).
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :alg => String.t() | nil,
          :e => String.t() | nil,
          :kid => String.t() | nil,
          :kty => String.t() | nil,
          :n => String.t() | nil,
          :use => String.t() | nil
        }

  field(:alg)
  field(:e)
  field(:kid)
  field(:kty)
  field(:n)
  field(:use)
end

defimpl Poison.Decoder,
  for: GoogleApi.FirebaseAppCheck.V1beta.Model.GoogleFirebaseAppcheckV1betaPublicJwk do
  def decode(value, options) do
    GoogleApi.FirebaseAppCheck.V1beta.Model.GoogleFirebaseAppcheckV1betaPublicJwk.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.FirebaseAppCheck.V1beta.Model.GoogleFirebaseAppcheckV1betaPublicJwk do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
