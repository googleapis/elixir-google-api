# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.IAM.V1.Model.WorkforcePoolProviderKey do
  @moduledoc """
  Represents a public key configuration for a Workforce Pool Provider. The key can be configured in your identity provider to encrypt SAML assertions. Google holds the corresponding private key, which it uses to decrypt encrypted tokens.

  ## Attributes

  *   `expireTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. The time after which the key will be permanently deleted and cannot be recovered. Note that the key may get purged before this time if the total limit of keys per provider is exceeded.
  *   `keyData` (*type:* `GoogleApi.IAM.V1.Model.KeyData.t`, *default:* `nil`) - Immutable. Public half of the asymmetric key.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Identifier. The resource name of the key. Format: `locations/{location}/workforcePools/{workforce_pool_id}/providers/{provider_id}/keys/{key_id}`
  *   `state` (*type:* `String.t`, *default:* `nil`) - Output only. The state of the key.
  *   `use` (*type:* `String.t`, *default:* `nil`) - Required. The purpose of the key.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :expireTime => DateTime.t() | nil,
          :keyData => GoogleApi.IAM.V1.Model.KeyData.t() | nil,
          :name => String.t() | nil,
          :state => String.t() | nil,
          :use => String.t() | nil
        }

  field(:expireTime, as: DateTime)
  field(:keyData, as: GoogleApi.IAM.V1.Model.KeyData)
  field(:name)
  field(:state)
  field(:use)
end

defimpl Poison.Decoder, for: GoogleApi.IAM.V1.Model.WorkforcePoolProviderKey do
  def decode(value, options) do
    GoogleApi.IAM.V1.Model.WorkforcePoolProviderKey.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.IAM.V1.Model.WorkforcePoolProviderKey do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
