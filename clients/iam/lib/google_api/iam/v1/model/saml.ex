# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.IAM.V1.Model.Saml do
  @moduledoc """
  Represents an SAML 2.0 identity provider.

  ## Attributes

  *   `idpMetadataXml` (*type:* `String.t`, *default:* `nil`) - Required. SAML identity provider (IdP) configuration metadata XML doc. The XML document must comply with the [SAML 2.0 specification](https://docs.oasis-open.org/security/saml/v2.0/saml-metadata-2.0-os.pdf). The maximum size of an acceptable XML document is 128K characters. The SAML metadata XML document must satisfy the following constraints: * Must contain an IdP Entity ID. * Must contain at least one non-expired signing certificate. * For each signing certificate, the expiration must be: * From no more than 7 days in the future. * To no more than 20 years in the future. * Up to three IdP signing keys are allowed. When updating the provider's metadata XML, at least one non-expired signing key must overlap with the existing metadata. This requirement is skipped if there are no non-expired signing keys present in the existing metadata.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :idpMetadataXml => String.t() | nil
        }

  field(:idpMetadataXml)
end

defimpl Poison.Decoder, for: GoogleApi.IAM.V1.Model.Saml do
  def decode(value, options) do
    GoogleApi.IAM.V1.Model.Saml.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.IAM.V1.Model.Saml do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
