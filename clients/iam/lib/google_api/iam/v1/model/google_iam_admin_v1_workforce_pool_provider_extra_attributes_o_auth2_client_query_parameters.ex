# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.IAM.V1.Model.GoogleIamAdminV1WorkforcePoolProviderExtraAttributesOAuth2ClientQueryParameters do
  @moduledoc """
  Represents the parameters to control which claims are fetched from an IdP.

  ## Attributes

  *   `filter` (*type:* `String.t`, *default:* `nil`) - Optional. The filter used to request specific records from IdP. In case of attributes type as AZURE_AD_GROUPS_MAIL, it represents the filter used to request specific groups for users from IdP. By default, all of the groups associated with the user are fetched. The groups should be mail enabled and security enabled. See https://learn.microsoft.com/en-us/graph/search-query-parameter for more details.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :filter => String.t() | nil
        }

  field(:filter)
end

defimpl Poison.Decoder,
  for:
    GoogleApi.IAM.V1.Model.GoogleIamAdminV1WorkforcePoolProviderExtraAttributesOAuth2ClientQueryParameters do
  def decode(value, options) do
    GoogleApi.IAM.V1.Model.GoogleIamAdminV1WorkforcePoolProviderExtraAttributesOAuth2ClientQueryParameters.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for:
    GoogleApi.IAM.V1.Model.GoogleIamAdminV1WorkforcePoolProviderExtraAttributesOAuth2ClientQueryParameters do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
