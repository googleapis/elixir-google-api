# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Transcoder.V1beta1.Model.Encryption do
  @moduledoc """
  Encryption settings.

  ## Attributes

  *   `aes128` (*type:* `GoogleApi.Transcoder.V1beta1.Model.Aes128Encryption.t`, *default:* `nil`) - Configuration for AES-128 encryption.
  *   `iv` (*type:* `String.t`, *default:* `nil`) - Required. 128 bit Initialization Vector (IV) represented as lowercase hexadecimal digits.
  *   `key` (*type:* `String.t`, *default:* `nil`) - Required. 128 bit encryption key represented as lowercase hexadecimal digits.
  *   `mpegCenc` (*type:* `GoogleApi.Transcoder.V1beta1.Model.MpegCommonEncryption.t`, *default:* `nil`) - Configuration for MPEG Common Encryption (MPEG-CENC).
  *   `sampleAes` (*type:* `GoogleApi.Transcoder.V1beta1.Model.SampleAesEncryption.t`, *default:* `nil`) - Configuration for SAMPLE-AES encryption.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :aes128 => GoogleApi.Transcoder.V1beta1.Model.Aes128Encryption.t() | nil,
          :iv => String.t() | nil,
          :key => String.t() | nil,
          :mpegCenc => GoogleApi.Transcoder.V1beta1.Model.MpegCommonEncryption.t() | nil,
          :sampleAes => GoogleApi.Transcoder.V1beta1.Model.SampleAesEncryption.t() | nil
        }

  field(:aes128, as: GoogleApi.Transcoder.V1beta1.Model.Aes128Encryption)
  field(:iv)
  field(:key)
  field(:mpegCenc, as: GoogleApi.Transcoder.V1beta1.Model.MpegCommonEncryption)
  field(:sampleAes, as: GoogleApi.Transcoder.V1beta1.Model.SampleAesEncryption)
end

defimpl Poison.Decoder, for: GoogleApi.Transcoder.V1beta1.Model.Encryption do
  def decode(value, options) do
    GoogleApi.Transcoder.V1beta1.Model.Encryption.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Transcoder.V1beta1.Model.Encryption do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
