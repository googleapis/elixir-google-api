# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Transcoder.V1beta1.Model.AnimationFade do
  @moduledoc """
  Display overlay object with fade animation.

  ## Attributes

  *   `endTimeOffset` (*type:* `String.t`, *default:* `nil`) - The time to end the fade animation, in seconds. Default: `start_time_offset` + 1s
  *   `fadeType` (*type:* `String.t`, *default:* `nil`) - Required. Type of fade animation: `FADE_IN` or `FADE_OUT`.
  *   `startTimeOffset` (*type:* `String.t`, *default:* `nil`) - The time to start the fade animation, in seconds. Default: 0
  *   `xy` (*type:* `GoogleApi.Transcoder.V1beta1.Model.NormalizedCoordinate.t`, *default:* `nil`) - Normalized coordinates based on output video resolution. Valid values: `0.0`â€“`1.0`. `xy` is the upper-left coordinate of the overlay object. For example, use the x and y coordinates {0,0} to position the top-left corner of the overlay animation in the top-left corner of the output video.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :endTimeOffset => String.t() | nil,
          :fadeType => String.t() | nil,
          :startTimeOffset => String.t() | nil,
          :xy => GoogleApi.Transcoder.V1beta1.Model.NormalizedCoordinate.t() | nil
        }

  field(:endTimeOffset)
  field(:fadeType)
  field(:startTimeOffset)
  field(:xy, as: GoogleApi.Transcoder.V1beta1.Model.NormalizedCoordinate)
end

defimpl Poison.Decoder, for: GoogleApi.Transcoder.V1beta1.Model.AnimationFade do
  def decode(value, options) do
    GoogleApi.Transcoder.V1beta1.Model.AnimationFade.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Transcoder.V1beta1.Model.AnimationFade do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
