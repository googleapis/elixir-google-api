# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.DataFusion.V1.Model.RecurringTimeWindow do
  @moduledoc """
  Represents an arbitrary window of time that recurs.

  ## Attributes

  *   `recurrence` (*type:* `String.t`, *default:* `nil`) - Required. An RRULE with format [RFC-5545](https://tools.ietf.org/html/rfc5545#section-3.8.5.3) for how this window reccurs. They go on for the span of time between the start and end time. The only supported FREQ value is "WEEKLY". To have something repeat every weekday, use: "FREQ=WEEKLY;BYDAY=MO,TU,WE,TH,FR". This specifies how frequently the window starts. To have a 9 am - 5 pm UTC-4 window every weekday, use something like: ``` start time = 2019-01-01T09:00:00-0400 end time = 2019-01-01T17:00:00-0400 recurrence = FREQ=WEEKLY;BYDAY=MO,TU,WE,TH,FR ```
  *   `window` (*type:* `GoogleApi.DataFusion.V1.Model.TimeWindow.t`, *default:* `nil`) - Required. The window representing the start and end time of recurrences. This field ignores the date components of the provided timestamps. Only the time of day and duration between start and end time are relevant.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :recurrence => String.t() | nil,
          :window => GoogleApi.DataFusion.V1.Model.TimeWindow.t() | nil
        }

  field(:recurrence)
  field(:window, as: GoogleApi.DataFusion.V1.Model.TimeWindow)
end

defimpl Poison.Decoder, for: GoogleApi.DataFusion.V1.Model.RecurringTimeWindow do
  def decode(value, options) do
    GoogleApi.DataFusion.V1.Model.RecurringTimeWindow.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.DataFusion.V1.Model.RecurringTimeWindow do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
