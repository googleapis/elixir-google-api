# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Compute.V1.Model.FutureReservationStatusLastKnownGoodState do
  @moduledoc """
  The state that the future reservation will be reverted to should the amendment be declined.

  ## Attributes

  *   `description` (*type:* `String.t`, *default:* `nil`) - [Output Only] The description of the FutureReservation before an amendment was requested.
  *   `existingMatchingUsageInfo` (*type:* `GoogleApi.Compute.V1.Model.FutureReservationStatusExistingMatchingUsageInfo.t`, *default:* `nil`) - [Output Only] Represents the matching usage for the future reservation before an amendment was requested.
  *   `futureReservationSpecs` (*type:* `GoogleApi.Compute.V1.Model.FutureReservationStatusLastKnownGoodStateFutureReservationSpecs.t`, *default:* `nil`) - 
  *   `lockTime` (*type:* `String.t`, *default:* `nil`) - [Output Only] The lock time of the FutureReservation before an amendment was requested.
  *   `namePrefix` (*type:* `String.t`, *default:* `nil`) - [Output Only] The name prefix of the Future Reservation before an amendment was requested.
  *   `procurementStatus` (*type:* `String.t`, *default:* `nil`) - [Output Only] The status of the last known good state for the Future Reservation.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :description => String.t() | nil,
          :existingMatchingUsageInfo =>
            GoogleApi.Compute.V1.Model.FutureReservationStatusExistingMatchingUsageInfo.t() | nil,
          :futureReservationSpecs =>
            GoogleApi.Compute.V1.Model.FutureReservationStatusLastKnownGoodStateFutureReservationSpecs.t()
            | nil,
          :lockTime => String.t() | nil,
          :namePrefix => String.t() | nil,
          :procurementStatus => String.t() | nil
        }

  field(:description)

  field(:existingMatchingUsageInfo,
    as: GoogleApi.Compute.V1.Model.FutureReservationStatusExistingMatchingUsageInfo
  )

  field(:futureReservationSpecs,
    as: GoogleApi.Compute.V1.Model.FutureReservationStatusLastKnownGoodStateFutureReservationSpecs
  )

  field(:lockTime)
  field(:namePrefix)
  field(:procurementStatus)
end

defimpl Poison.Decoder, for: GoogleApi.Compute.V1.Model.FutureReservationStatusLastKnownGoodState do
  def decode(value, options) do
    GoogleApi.Compute.V1.Model.FutureReservationStatusLastKnownGoodState.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Compute.V1.Model.FutureReservationStatusLastKnownGoodState do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
