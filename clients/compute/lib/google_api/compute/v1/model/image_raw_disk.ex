# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Compute.V1.Model.ImageRawDisk do
  @moduledoc """
  The parameters of the raw disk image.

  ## Attributes

  *   `containerType` (*type:* `String.t`, *default:* `nil`) - The format used to encode and transmit the block device, which should be TAR. This is just a container and transmission format and not a runtime format. Provided by the client when the disk image is created.
  *   `sha1Checksum` (*type:* `String.t`, *default:* `nil`) - [Deprecated] This field is deprecated. An optional SHA1 checksum of the disk image before unpackaging provided by the client when the disk image is created.
  *   `source` (*type:* `String.t`, *default:* `nil`) - The full Google Cloud Storage URL where the raw disk image archive is stored. The following are valid formats for the URL: - https://storage.googleapis.com/bucket_name/image_archive_name - https://storage.googleapis.com/bucket_name/folder_name/ image_archive_name In order to create an image, you must provide the full or partial URL of one of the following: - The rawDisk.source URL - The sourceDisk URL - The sourceImage URL - The sourceSnapshot URL 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :containerType => String.t() | nil,
          :sha1Checksum => String.t() | nil,
          :source => String.t() | nil
        }

  field(:containerType)
  field(:sha1Checksum)
  field(:source)
end

defimpl Poison.Decoder, for: GoogleApi.Compute.V1.Model.ImageRawDisk do
  def decode(value, options) do
    GoogleApi.Compute.V1.Model.ImageRawDisk.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Compute.V1.Model.ImageRawDisk do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
