# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Compute.V1.Model.HttpHealthCheck do
  @moduledoc """
  Represents a legacy HTTP Health Check resource. Legacy HTTP health checks are now only required by target pool-based network load balancers. For all other load balancers, including backend service-based network load balancers, and for managed instance group auto-healing, you must use modern (non-legacy) health checks. For more information, see Health checks overview .

  ## Attributes

  *   `checkIntervalSec` (*type:* `integer()`, *default:* `nil`) - How often (in seconds) to send a health check. The default value is 5 seconds.
  *   `creationTimestamp` (*type:* `String.t`, *default:* `nil`) - [Output Only] Creation timestamp in RFC3339 text format.
  *   `description` (*type:* `String.t`, *default:* `nil`) - An optional description of this resource. Provide this property when you create the resource.
  *   `healthyThreshold` (*type:* `integer()`, *default:* `nil`) - A so-far unhealthy instance will be marked healthy after this many consecutive successes. The default value is 2.
  *   `host` (*type:* `String.t`, *default:* `nil`) - The value of the host header in the HTTP health check request. If left empty (default value), the public IP on behalf of which this health check is performed will be used.
  *   `id` (*type:* `String.t`, *default:* `nil`) - [Output Only] The unique identifier for the resource. This identifier is defined by the server.
  *   `kind` (*type:* `String.t`, *default:* `compute#httpHealthCheck`) - [Output Only] Type of the resource. Always compute#httpHealthCheck for HTTP health checks.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
  *   `port` (*type:* `integer()`, *default:* `nil`) - The TCP port number for the HTTP health check request. The default value is 80.
  *   `requestPath` (*type:* `String.t`, *default:* `nil`) - The request path of the HTTP health check request. The default value is /. This field does not support query parameters.
  *   `selfLink` (*type:* `String.t`, *default:* `nil`) - [Output Only] Server-defined URL for the resource.
  *   `timeoutSec` (*type:* `integer()`, *default:* `nil`) - How long (in seconds) to wait before claiming failure. The default value is 5 seconds. It is invalid for timeoutSec to have greater value than checkIntervalSec.
  *   `unhealthyThreshold` (*type:* `integer()`, *default:* `nil`) - A so-far healthy instance will be marked unhealthy after this many consecutive failures. The default value is 2.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :checkIntervalSec => integer() | nil,
          :creationTimestamp => String.t() | nil,
          :description => String.t() | nil,
          :healthyThreshold => integer() | nil,
          :host => String.t() | nil,
          :id => String.t() | nil,
          :kind => String.t() | nil,
          :name => String.t() | nil,
          :port => integer() | nil,
          :requestPath => String.t() | nil,
          :selfLink => String.t() | nil,
          :timeoutSec => integer() | nil,
          :unhealthyThreshold => integer() | nil
        }

  field(:checkIntervalSec)
  field(:creationTimestamp)
  field(:description)
  field(:healthyThreshold)
  field(:host)
  field(:id)
  field(:kind)
  field(:name)
  field(:port)
  field(:requestPath)
  field(:selfLink)
  field(:timeoutSec)
  field(:unhealthyThreshold)
end

defimpl Poison.Decoder, for: GoogleApi.Compute.V1.Model.HttpHealthCheck do
  def decode(value, options) do
    GoogleApi.Compute.V1.Model.HttpHealthCheck.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Compute.V1.Model.HttpHealthCheck do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
