# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Compute.V1.Model.RoutePolicy do
  @moduledoc """


  ## Attributes

  *   `description` (*type:* `String.t`, *default:* `nil`) - An optional description of route policy.
  *   `fingerprint` (*type:* `String.t`, *default:* `nil`) - A fingerprint for the Route Policy being applied to this Router, which is essentially a hash of the Route Policy used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update Route Policy. You must always provide an up-to-date fingerprint hash in order to update or change labels. To see the latest fingerprint, make a getRoutePolicy() request to retrieve a Route Policy.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Route Policy name, which must be a resource ID segment and unique within all the router's Route Policies. Name should conform to RFC1035.
  *   `terms` (*type:* `list(GoogleApi.Compute.V1.Model.RoutePolicyPolicyTerm.t)`, *default:* `nil`) - List of terms (the order in the list is not important, they are evaluated in order of priority). Order of policies is not retained and might change when getting policy later.
  *   `type` (*type:* `String.t`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :description => String.t() | nil,
          :fingerprint => String.t() | nil,
          :name => String.t() | nil,
          :terms => list(GoogleApi.Compute.V1.Model.RoutePolicyPolicyTerm.t()) | nil,
          :type => String.t() | nil
        }

  field(:description)
  field(:fingerprint)
  field(:name)
  field(:terms, as: GoogleApi.Compute.V1.Model.RoutePolicyPolicyTerm, type: :list)
  field(:type)
end

defimpl Poison.Decoder, for: GoogleApi.Compute.V1.Model.RoutePolicy do
  def decode(value, options) do
    GoogleApi.Compute.V1.Model.RoutePolicy.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Compute.V1.Model.RoutePolicy do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
