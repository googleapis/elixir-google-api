# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Compute.V1.Model.InstanceGroupManagerStandbyPolicy do
  @moduledoc """


  ## Attributes

  *   `initialDelaySec` (*type:* `integer()`, *default:* `nil`) - Specifies the number of seconds that the MIG should wait to suspend or stop a VM after that VM was created. The initial delay gives the initialization script the time to prepare your VM for a quick scale out. The value of initial delay must be between 0 and 3600 seconds. The default value is 0.
  *   `mode` (*type:* `String.t`, *default:* `nil`) - Defines how a MIG resumes or starts VMs from a standby pool when the group scales out. The default mode is `MANUAL`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :initialDelaySec => integer() | nil,
          :mode => String.t() | nil
        }

  field(:initialDelaySec)
  field(:mode)
end

defimpl Poison.Decoder, for: GoogleApi.Compute.V1.Model.InstanceGroupManagerStandbyPolicy do
  def decode(value, options) do
    GoogleApi.Compute.V1.Model.InstanceGroupManagerStandbyPolicy.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Compute.V1.Model.InstanceGroupManagerStandbyPolicy do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
