# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Compute.V1.Model.ResourceStatusPhysicalHostTopology do
  @moduledoc """
  Represents the physical host topology of the host on which the VM is running.

  ## Attributes

  *   `block` (*type:* `String.t`, *default:* `nil`) - [Output Only] The ID of the block in which the running instance is located. Instances within the same block experience low network latency.
  *   `cluster` (*type:* `String.t`, *default:* `nil`) - [Output Only] The global name of the Compute Engine cluster where the running instance is located.
  *   `host` (*type:* `String.t`, *default:* `nil`) - [Output Only] The ID of the host on which the running instance is located. Instances on the same host experience the lowest possible network latency.
  *   `subblock` (*type:* `String.t`, *default:* `nil`) - [Output Only] The ID of the sub-block in which the running instance is located. Instances in the same sub-block experience lower network latency than instances in the same block.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :block => String.t() | nil,
          :cluster => String.t() | nil,
          :host => String.t() | nil,
          :subblock => String.t() | nil
        }

  field(:block)
  field(:cluster)
  field(:host)
  field(:subblock)
end

defimpl Poison.Decoder, for: GoogleApi.Compute.V1.Model.ResourceStatusPhysicalHostTopology do
  def decode(value, options) do
    GoogleApi.Compute.V1.Model.ResourceStatusPhysicalHostTopology.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Compute.V1.Model.ResourceStatusPhysicalHostTopology do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
