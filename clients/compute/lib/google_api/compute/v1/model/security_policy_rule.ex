# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Compute.V1.Model.SecurityPolicyRule do
  @moduledoc """
  Represents a rule that describes one or more match conditions along with the action to be taken when traffic matches this condition (allow or deny).

  ## Attributes

  *   `action` (*type:* `String.t`, *default:* `nil`) - The Action to perform when the rule is matched. The following are the valid actions: - allow: allow access to target. - deny(): deny access to target, returns the HTTP response code specified (valid values are 403, 404, and 502). - rate_based_ban: limit client traffic to the configured threshold and ban the client if the traffic exceeds the threshold. Configure parameters for this action in RateLimitOptions. Requires rate_limit_options to be set. - redirect: redirect to a different target. This can either be an internal reCAPTCHA redirect, or an external URL-based redirect via a 302 response. Parameters for this action can be configured via redirectOptions. - throttle: limit client traffic to the configured threshold. Configure parameters for this action in rateLimitOptions. Requires rate_limit_options to be set for this. 
  *   `description` (*type:* `String.t`, *default:* `nil`) - An optional description of this resource. Provide this property when you create the resource.
  *   `headerAction` (*type:* `GoogleApi.Compute.V1.Model.SecurityPolicyRuleHttpHeaderAction.t`, *default:* `nil`) - Optional, additional actions that are performed on headers.
  *   `kind` (*type:* `String.t`, *default:* `compute#securityPolicyRule`) - [Output only] Type of the resource. Always compute#securityPolicyRule for security policy rules
  *   `match` (*type:* `GoogleApi.Compute.V1.Model.SecurityPolicyRuleMatcher.t`, *default:* `nil`) - A match condition that incoming traffic is evaluated against. If it evaluates to true, the corresponding 'action' is enforced.
  *   `preview` (*type:* `boolean()`, *default:* `nil`) - If set to true, the specified action is not enforced.
  *   `priority` (*type:* `integer()`, *default:* `nil`) - An integer indicating the priority of a rule in the list. The priority must be a positive value between 0 and 2147483647. Rules are evaluated from highest to lowest priority where 0 is the highest priority and 2147483647 is the lowest priority.
  *   `rateLimitOptions` (*type:* `GoogleApi.Compute.V1.Model.SecurityPolicyRuleRateLimitOptions.t`, *default:* `nil`) - Must be specified if the action is "rate_based_ban" or "throttle". Cannot be specified for any other actions.
  *   `redirectOptions` (*type:* `GoogleApi.Compute.V1.Model.SecurityPolicyRuleRedirectOptions.t`, *default:* `nil`) - Parameters defining the redirect action. Cannot be specified for any other actions.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :action => String.t() | nil,
          :description => String.t() | nil,
          :headerAction =>
            GoogleApi.Compute.V1.Model.SecurityPolicyRuleHttpHeaderAction.t() | nil,
          :kind => String.t() | nil,
          :match => GoogleApi.Compute.V1.Model.SecurityPolicyRuleMatcher.t() | nil,
          :preview => boolean() | nil,
          :priority => integer() | nil,
          :rateLimitOptions =>
            GoogleApi.Compute.V1.Model.SecurityPolicyRuleRateLimitOptions.t() | nil,
          :redirectOptions =>
            GoogleApi.Compute.V1.Model.SecurityPolicyRuleRedirectOptions.t() | nil
        }

  field(:action)
  field(:description)
  field(:headerAction, as: GoogleApi.Compute.V1.Model.SecurityPolicyRuleHttpHeaderAction)
  field(:kind)
  field(:match, as: GoogleApi.Compute.V1.Model.SecurityPolicyRuleMatcher)
  field(:preview)
  field(:priority)
  field(:rateLimitOptions, as: GoogleApi.Compute.V1.Model.SecurityPolicyRuleRateLimitOptions)
  field(:redirectOptions, as: GoogleApi.Compute.V1.Model.SecurityPolicyRuleRedirectOptions)
end

defimpl Poison.Decoder, for: GoogleApi.Compute.V1.Model.SecurityPolicyRule do
  def decode(value, options) do
    GoogleApi.Compute.V1.Model.SecurityPolicyRule.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Compute.V1.Model.SecurityPolicyRule do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
