# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Compute.V1.Model.ResourceCommitment do
  @moduledoc """
  Commitment for a particular hardware resource (a commitment is composed of one or more of these).

  ## Attributes

  *   `acceleratorType` (*type:* `String.t`, *default:* `nil`) - Name of the accelerator type or GPU resource. Specify this field only when the type of hardware resource is ACCELERATOR.
  *   `amount` (*type:* `String.t`, *default:* `nil`) - The quantity of the hardware resource that you want to commit to purchasing (in a type-dependent unit). - For vCPUs, you must specify an integer value. - For memory, you specify the amount of MB that you want. The value you specify must be a multiple of 256 MB, with up to 6.5 GB of memory per every vCPU. - For GPUs, you must specify an integer value. - For Local SSD disks, you must specify the amount in GB. The size of a single Local SSD disk is 375 GB. 
  *   `type` (*type:* `String.t`, *default:* `nil`) - The type of hardware resource that you want to specify. You can specify any of the following values: - VCPU - MEMORY - LOCAL_SSD - ACCELERATOR Specify as a separate entry in the list for each individual resource type.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :acceleratorType => String.t() | nil,
          :amount => String.t() | nil,
          :type => String.t() | nil
        }

  field(:acceleratorType)
  field(:amount)
  field(:type)
end

defimpl Poison.Decoder, for: GoogleApi.Compute.V1.Model.ResourceCommitment do
  def decode(value, options) do
    GoogleApi.Compute.V1.Model.ResourceCommitment.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Compute.V1.Model.ResourceCommitment do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
