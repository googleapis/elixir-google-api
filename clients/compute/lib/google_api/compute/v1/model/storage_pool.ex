# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Compute.V1.Model.StoragePool do
  @moduledoc """
  Represents a zonal storage pool resource.

  ## Attributes

  *   `capacityProvisioningType` (*type:* `String.t`, *default:* `nil`) - Provisioning type of the byte capacity of the pool.
  *   `creationTimestamp` (*type:* `String.t`, *default:* `nil`) - [Output Only] Creation timestamp in RFC3339 text format.
  *   `description` (*type:* `String.t`, *default:* `nil`) - An optional description of this resource. Provide this property when you create the resource.
  *   `id` (*type:* `String.t`, *default:* `nil`) - [Output Only] The unique identifier for the resource. This identifier is defined by the server.
  *   `kind` (*type:* `String.t`, *default:* `compute#storagePool`) - [Output Only] Type of the resource. Always compute#storagePool for storage pools.
  *   `labelFingerprint` (*type:* `String.t`, *default:* `nil`) - A fingerprint for the labels being applied to this storage pool, which is essentially a hash of the labels set used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels, otherwise the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve a storage pool.
  *   `labels` (*type:* `map()`, *default:* `nil`) - Labels to apply to this storage pool. These can be later modified by the setLabels method.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
  *   `performanceProvisioningType` (*type:* `String.t`, *default:* `nil`) - Provisioning type of the performance-related parameters of the pool, such as throughput and IOPS.
  *   `poolProvisionedCapacityGb` (*type:* `String.t`, *default:* `nil`) - Size, in GiB, of the storage pool. For more information about the size limits, see https://cloud.google.com/compute/docs/disks/storage-pools.
  *   `poolProvisionedIops` (*type:* `String.t`, *default:* `nil`) - Provisioned IOPS of the storage pool. Only relevant if the storage pool type is hyperdisk-balanced.
  *   `poolProvisionedThroughput` (*type:* `String.t`, *default:* `nil`) - Provisioned throughput of the storage pool. Only relevant if the storage pool type is hyperdisk-balanced or hyperdisk-throughput.
  *   `resourceStatus` (*type:* `GoogleApi.Compute.V1.Model.StoragePoolResourceStatus.t`, *default:* `nil`) - [Output Only] Status information for the storage pool resource.
  *   `selfLink` (*type:* `String.t`, *default:* `nil`) - [Output Only] Server-defined fully-qualified URL for this resource.
  *   `selfLinkWithId` (*type:* `String.t`, *default:* `nil`) - [Output Only] Server-defined URL for this resource's resource id.
  *   `state` (*type:* `String.t`, *default:* `nil`) - [Output Only] The status of storage pool creation. - CREATING: Storage pool is provisioning. storagePool. - FAILED: Storage pool creation failed. - READY: Storage pool is ready for use. - DELETING: Storage pool is deleting. 
  *   `status` (*type:* `GoogleApi.Compute.V1.Model.StoragePoolResourceStatus.t`, *default:* `nil`) - [Output Only] Status information for the storage pool resource.
  *   `storagePoolType` (*type:* `String.t`, *default:* `nil`) - Type of the storage pool.
  *   `zone` (*type:* `String.t`, *default:* `nil`) - [Output Only] URL of the zone where the storage pool resides. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :capacityProvisioningType => String.t() | nil,
          :creationTimestamp => String.t() | nil,
          :description => String.t() | nil,
          :id => String.t() | nil,
          :kind => String.t() | nil,
          :labelFingerprint => String.t() | nil,
          :labels => map() | nil,
          :name => String.t() | nil,
          :performanceProvisioningType => String.t() | nil,
          :poolProvisionedCapacityGb => String.t() | nil,
          :poolProvisionedIops => String.t() | nil,
          :poolProvisionedThroughput => String.t() | nil,
          :resourceStatus => GoogleApi.Compute.V1.Model.StoragePoolResourceStatus.t() | nil,
          :selfLink => String.t() | nil,
          :selfLinkWithId => String.t() | nil,
          :state => String.t() | nil,
          :status => GoogleApi.Compute.V1.Model.StoragePoolResourceStatus.t() | nil,
          :storagePoolType => String.t() | nil,
          :zone => String.t() | nil
        }

  field(:capacityProvisioningType)
  field(:creationTimestamp)
  field(:description)
  field(:id)
  field(:kind)
  field(:labelFingerprint)
  field(:labels, type: :map)
  field(:name)
  field(:performanceProvisioningType)
  field(:poolProvisionedCapacityGb)
  field(:poolProvisionedIops)
  field(:poolProvisionedThroughput)
  field(:resourceStatus, as: GoogleApi.Compute.V1.Model.StoragePoolResourceStatus)
  field(:selfLink)
  field(:selfLinkWithId)
  field(:state)
  field(:status, as: GoogleApi.Compute.V1.Model.StoragePoolResourceStatus)
  field(:storagePoolType)
  field(:zone)
end

defimpl Poison.Decoder, for: GoogleApi.Compute.V1.Model.StoragePool do
  def decode(value, options) do
    GoogleApi.Compute.V1.Model.StoragePool.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Compute.V1.Model.StoragePool do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
