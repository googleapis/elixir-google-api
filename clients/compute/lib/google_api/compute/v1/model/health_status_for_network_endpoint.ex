# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Compute.V1.Model.HealthStatusForNetworkEndpoint do
  @moduledoc """


  ## Attributes

  *   `backendService` (*type:* `GoogleApi.Compute.V1.Model.BackendServiceReference.t`, *default:* `nil`) - URL of the backend service associated with the health state of the network endpoint.
  *   `forwardingRule` (*type:* `GoogleApi.Compute.V1.Model.ForwardingRuleReference.t`, *default:* `nil`) - URL of the forwarding rule associated with the health state of the network endpoint.
  *   `healthCheck` (*type:* `GoogleApi.Compute.V1.Model.HealthCheckReference.t`, *default:* `nil`) - URL of the health check associated with the health state of the network endpoint.
  *   `healthCheckService` (*type:* `GoogleApi.Compute.V1.Model.HealthCheckServiceReference.t`, *default:* `nil`) - URL of the health check service associated with the health state of the network endpoint.
  *   `healthState` (*type:* `String.t`, *default:* `nil`) - Health state of the network endpoint determined based on the health checks configured.
  *   `ipv6HealthState` (*type:* `String.t`, *default:* `nil`) - Health state of the ipv6 network endpoint determined based on the health checks configured.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :backendService => GoogleApi.Compute.V1.Model.BackendServiceReference.t() | nil,
          :forwardingRule => GoogleApi.Compute.V1.Model.ForwardingRuleReference.t() | nil,
          :healthCheck => GoogleApi.Compute.V1.Model.HealthCheckReference.t() | nil,
          :healthCheckService => GoogleApi.Compute.V1.Model.HealthCheckServiceReference.t() | nil,
          :healthState => String.t() | nil,
          :ipv6HealthState => String.t() | nil
        }

  field(:backendService, as: GoogleApi.Compute.V1.Model.BackendServiceReference)
  field(:forwardingRule, as: GoogleApi.Compute.V1.Model.ForwardingRuleReference)
  field(:healthCheck, as: GoogleApi.Compute.V1.Model.HealthCheckReference)
  field(:healthCheckService, as: GoogleApi.Compute.V1.Model.HealthCheckServiceReference)
  field(:healthState)
  field(:ipv6HealthState)
end

defimpl Poison.Decoder, for: GoogleApi.Compute.V1.Model.HealthStatusForNetworkEndpoint do
  def decode(value, options) do
    GoogleApi.Compute.V1.Model.HealthStatusForNetworkEndpoint.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Compute.V1.Model.HealthStatusForNetworkEndpoint do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
