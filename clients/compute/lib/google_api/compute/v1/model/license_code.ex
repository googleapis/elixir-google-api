# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Compute.V1.Model.LicenseCode do
  @moduledoc """
  Represents a License Code resource. A License Code is a unique identifier used to represent a license resource. *Caution* This resource is intended for use only by third-party partners who are creating Cloud Marketplace images. 

  ## Attributes

  *   `creationTimestamp` (*type:* `String.t`, *default:* `nil`) - [Output Only] Creation timestamp in RFC3339 text format.
  *   `description` (*type:* `String.t`, *default:* `nil`) - [Output Only] Description of this License Code.
  *   `id` (*type:* `String.t`, *default:* `nil`) - [Output Only] The unique identifier for the resource. This identifier is defined by the server.
  *   `kind` (*type:* `String.t`, *default:* `compute#licenseCode`) - [Output Only] Type of resource. Always compute#licenseCode for licenses.
  *   `licenseAlias` (*type:* `list(GoogleApi.Compute.V1.Model.LicenseCodeLicenseAlias.t)`, *default:* `nil`) - [Output Only] URL and description aliases of Licenses with the same License Code.
  *   `name` (*type:* `String.t`, *default:* `nil`) - [Output Only] Name of the resource. The name is 1-20 characters long and must be a valid 64 bit integer.
  *   `selfLink` (*type:* `String.t`, *default:* `nil`) - [Output Only] Server-defined URL for the resource.
  *   `state` (*type:* `String.t`, *default:* `nil`) - [Output Only] Current state of this License Code.
  *   `transferable` (*type:* `boolean()`, *default:* `nil`) - [Output Only] If true, the license will remain attached when creating images or snapshots from disks. Otherwise, the license is not transferred.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :creationTimestamp => String.t() | nil,
          :description => String.t() | nil,
          :id => String.t() | nil,
          :kind => String.t() | nil,
          :licenseAlias => list(GoogleApi.Compute.V1.Model.LicenseCodeLicenseAlias.t()) | nil,
          :name => String.t() | nil,
          :selfLink => String.t() | nil,
          :state => String.t() | nil,
          :transferable => boolean() | nil
        }

  field(:creationTimestamp)
  field(:description)
  field(:id)
  field(:kind)
  field(:licenseAlias, as: GoogleApi.Compute.V1.Model.LicenseCodeLicenseAlias, type: :list)
  field(:name)
  field(:selfLink)
  field(:state)
  field(:transferable)
end

defimpl Poison.Decoder, for: GoogleApi.Compute.V1.Model.LicenseCode do
  def decode(value, options) do
    GoogleApi.Compute.V1.Model.LicenseCode.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Compute.V1.Model.LicenseCode do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
