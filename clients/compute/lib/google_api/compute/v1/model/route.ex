# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Compute.V1.Model.Route do
  @moduledoc """
  Represents a Route resource. A route defines a path from VM instances in the VPC network to a specific destination. This destination can be inside or outside the VPC network. For more information, read the Routes overview.

  ## Attributes

  *   `asPaths` (*type:* `list(GoogleApi.Compute.V1.Model.RouteAsPath.t)`, *default:* `nil`) - [Output Only] AS path.
  *   `creationTimestamp` (*type:* `String.t`, *default:* `nil`) - [Output Only] Creation timestamp in RFC3339 text format.
  *   `description` (*type:* `String.t`, *default:* `nil`) - An optional description of this resource. Provide this field when you create the resource.
  *   `destRange` (*type:* `String.t`, *default:* `nil`) - The destination range of outgoing packets that this route applies to. Both IPv4 and IPv6 are supported. Must specify an IPv4 range (e.g. 192.0.2.0/24) or an IPv6 range in RFC 4291 format (e.g. 2001:db8::/32). IPv6 range will be displayed using RFC 5952 compressed format.
  *   `id` (*type:* `String.t`, *default:* `nil`) - [Output Only] The unique identifier for the resource. This identifier is defined by the server.
  *   `kind` (*type:* `String.t`, *default:* `compute#route`) - [Output Only] Type of this resource. Always compute#routes for Route resources.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?`. The first character must be a lowercase letter, and all following characters (except for the last character) must be a dash, lowercase letter, or digit. The last character must be a lowercase letter or digit.
  *   `network` (*type:* `String.t`, *default:* `nil`) - Fully-qualified URL of the network that this route applies to.
  *   `nextHopGateway` (*type:* `String.t`, *default:* `nil`) - The URL to a gateway that should handle matching packets. You can only specify the internet gateway using a full or partial valid URL: projects/ project/global/gateways/default-internet-gateway
  *   `nextHopHub` (*type:* `String.t`, *default:* `nil`) - [Output Only] The full resource name of the Network Connectivity Center hub that will handle matching packets.
  *   `nextHopIlb` (*type:* `String.t`, *default:* `nil`) - The URL to a forwarding rule of type loadBalancingScheme=INTERNAL that should handle matching packets or the IP address of the forwarding Rule. For example, the following are all valid URLs: - https://www.googleapis.com/compute/v1/projects/project/regions/region /forwardingRules/forwardingRule - regions/region/forwardingRules/forwardingRule If an IP address is provided, must specify an IPv4 address in dot-decimal notation or an IPv6 address in RFC 4291 format. For example, the following are all valid IP addresses: - 10.128.0.56 - 2001:db8::2d9:51:0:0 - 2001:db8:0:0:2d9:51:0:0 IPv6 addresses will be displayed using RFC 5952 compressed format (e.g. 2001:db8::2d9:51:0:0). Should never be an IPv4-mapped IPv6 address.
  *   `nextHopInstance` (*type:* `String.t`, *default:* `nil`) - The URL to an instance that should handle matching packets. You can specify this as a full or partial URL. For example: https://www.googleapis.com/compute/v1/projects/project/zones/zone/instances/
  *   `nextHopInterRegionCost` (*type:* `integer()`, *default:* `nil`) - [Output only] Internal fixed region-to-region cost that Google Cloud calculates based on factors such as network performance, distance, and available bandwidth between regions.
  *   `nextHopIp` (*type:* `String.t`, *default:* `nil`) - The network IP address of an instance that should handle matching packets. Both IPv6 address and IPv4 addresses are supported. Must specify an IPv4 address in dot-decimal notation (e.g. 192.0.2.99) or an IPv6 address in RFC 4291 format (e.g. 2001:db8::2d9:51:0:0 or 2001:db8:0:0:2d9:51:0:0). IPv6 addresses will be displayed using RFC 5952 compressed format (e.g. 2001:db8::2d9:51:0:0). Should never be an IPv4-mapped IPv6 address.
  *   `nextHopMed` (*type:* `integer()`, *default:* `nil`) - [Output Only] Multi-Exit Discriminator, a BGP route metric that indicates the desirability of a particular route in a network.
  *   `nextHopNetwork` (*type:* `String.t`, *default:* `nil`) - The URL of the local network if it should handle matching packets.
  *   `nextHopOrigin` (*type:* `String.t`, *default:* `nil`) - [Output Only] Indicates the origin of the route. Can be IGP (Interior Gateway Protocol), EGP (Exterior Gateway Protocol), or INCOMPLETE.
  *   `nextHopPeering` (*type:* `String.t`, *default:* `nil`) - [Output Only] The network peering name that should handle matching packets, which should conform to RFC1035.
  *   `nextHopVpnTunnel` (*type:* `String.t`, *default:* `nil`) - The URL to a VpnTunnel that should handle matching packets.
  *   `priority` (*type:* `integer()`, *default:* `nil`) - The priority of this route. Priority is used to break ties in cases where there is more than one matching route of equal prefix length. In cases where multiple routes have equal prefix length, the one with the lowest-numbered priority value wins. The default value is `1000`. The priority value must be from `0` to `65535`, inclusive.
  *   `routeStatus` (*type:* `String.t`, *default:* `nil`) - [Output only] The status of the route.
  *   `routeType` (*type:* `String.t`, *default:* `nil`) - [Output Only] The type of this route, which can be one of the following values: - 'TRANSIT' for a transit route that this router learned from another Cloud Router and will readvertise to one of its BGP peers - 'SUBNET' for a route from a subnet of the VPC - 'BGP' for a route learned from a BGP peer of this router - 'STATIC' for a static route
  *   `selfLink` (*type:* `String.t`, *default:* `nil`) - [Output Only] Server-defined fully-qualified URL for this resource.
  *   `tags` (*type:* `list(String.t)`, *default:* `nil`) - A list of instance tags to which this route applies.
  *   `warnings` (*type:* `list(GoogleApi.Compute.V1.Model.RouteWarnings.t)`, *default:* `nil`) - [Output Only] If potential misconfigurations are detected for this route, this field will be populated with warning messages.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :asPaths => list(GoogleApi.Compute.V1.Model.RouteAsPath.t()) | nil,
          :creationTimestamp => String.t() | nil,
          :description => String.t() | nil,
          :destRange => String.t() | nil,
          :id => String.t() | nil,
          :kind => String.t() | nil,
          :name => String.t() | nil,
          :network => String.t() | nil,
          :nextHopGateway => String.t() | nil,
          :nextHopHub => String.t() | nil,
          :nextHopIlb => String.t() | nil,
          :nextHopInstance => String.t() | nil,
          :nextHopInterRegionCost => integer() | nil,
          :nextHopIp => String.t() | nil,
          :nextHopMed => integer() | nil,
          :nextHopNetwork => String.t() | nil,
          :nextHopOrigin => String.t() | nil,
          :nextHopPeering => String.t() | nil,
          :nextHopVpnTunnel => String.t() | nil,
          :priority => integer() | nil,
          :routeStatus => String.t() | nil,
          :routeType => String.t() | nil,
          :selfLink => String.t() | nil,
          :tags => list(String.t()) | nil,
          :warnings => list(GoogleApi.Compute.V1.Model.RouteWarnings.t()) | nil
        }

  field(:asPaths, as: GoogleApi.Compute.V1.Model.RouteAsPath, type: :list)
  field(:creationTimestamp)
  field(:description)
  field(:destRange)
  field(:id)
  field(:kind)
  field(:name)
  field(:network)
  field(:nextHopGateway)
  field(:nextHopHub)
  field(:nextHopIlb)
  field(:nextHopInstance)
  field(:nextHopInterRegionCost)
  field(:nextHopIp)
  field(:nextHopMed)
  field(:nextHopNetwork)
  field(:nextHopOrigin)
  field(:nextHopPeering)
  field(:nextHopVpnTunnel)
  field(:priority)
  field(:routeStatus)
  field(:routeType)
  field(:selfLink)
  field(:tags, type: :list)
  field(:warnings, as: GoogleApi.Compute.V1.Model.RouteWarnings, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.Compute.V1.Model.Route do
  def decode(value, options) do
    GoogleApi.Compute.V1.Model.Route.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Compute.V1.Model.Route do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
