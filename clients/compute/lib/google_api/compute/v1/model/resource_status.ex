# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Compute.V1.Model.ResourceStatus do
  @moduledoc """
  Contains output only fields. Use this sub-message for actual values set on Instance attributes as compared to the value requested by the user (intent) in their instance CRUD calls.

  ## Attributes

  *   `physicalHost` (*type:* `String.t`, *default:* `nil`) - [Output Only] The precise location of your instance within the zone's data center, including the block, sub-block, and host. The field is formatted as follows: blockId/subBlockId/hostId.
  *   `physicalHostTopology` (*type:* `GoogleApi.Compute.V1.Model.ResourceStatusPhysicalHostTopology.t`, *default:* `nil`) - [Output Only] A series of fields containing the global name of the Compute Engine cluster, as well as the ID of the block, sub-block, and host on which the running instance is located.
  *   `scheduling` (*type:* `GoogleApi.Compute.V1.Model.ResourceStatusScheduling.t`, *default:* `nil`) - 
  *   `upcomingMaintenance` (*type:* `GoogleApi.Compute.V1.Model.UpcomingMaintenance.t`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :physicalHost => String.t() | nil,
          :physicalHostTopology =>
            GoogleApi.Compute.V1.Model.ResourceStatusPhysicalHostTopology.t() | nil,
          :scheduling => GoogleApi.Compute.V1.Model.ResourceStatusScheduling.t() | nil,
          :upcomingMaintenance => GoogleApi.Compute.V1.Model.UpcomingMaintenance.t() | nil
        }

  field(:physicalHost)
  field(:physicalHostTopology, as: GoogleApi.Compute.V1.Model.ResourceStatusPhysicalHostTopology)
  field(:scheduling, as: GoogleApi.Compute.V1.Model.ResourceStatusScheduling)
  field(:upcomingMaintenance, as: GoogleApi.Compute.V1.Model.UpcomingMaintenance)
end

defimpl Poison.Decoder, for: GoogleApi.Compute.V1.Model.ResourceStatus do
  def decode(value, options) do
    GoogleApi.Compute.V1.Model.ResourceStatus.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Compute.V1.Model.ResourceStatus do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
