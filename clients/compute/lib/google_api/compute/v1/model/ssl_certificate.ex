# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Compute.V1.Model.SslCertificate do
  @moduledoc """
  Represents an SSL Certificate resource. Google Compute Engine has two SSL Certificate resources: * [Global](/compute/docs/reference/rest/v1/sslCertificates) * [Regional](/compute/docs/reference/rest/v1/regionSslCertificates) The sslCertificates are used by: - external HTTPS load balancers - SSL proxy load balancers The regionSslCertificates are used by internal HTTPS load balancers. Optionally, certificate file contents that you upload can contain a set of up to five PEM-encoded certificates. The API call creates an object (sslCertificate) that holds this data. You can use SSL keys and certificates to secure connections to a load balancer. For more information, read Creating and using SSL certificates, SSL certificates quotas and limits, and Troubleshooting SSL certificates.

  ## Attributes

  *   `certificate` (*type:* `String.t`, *default:* `nil`) - A value read into memory from a certificate file. The certificate file must be in PEM format. The certificate chain must be no greater than 5 certs long. The chain must include at least one intermediate cert.
  *   `creationTimestamp` (*type:* `String.t`, *default:* `nil`) - [Output Only] Creation timestamp in RFC3339 text format.
  *   `description` (*type:* `String.t`, *default:* `nil`) - An optional description of this resource. Provide this property when you create the resource.
  *   `expireTime` (*type:* `String.t`, *default:* `nil`) - [Output Only] Expire time of the certificate. RFC3339
  *   `id` (*type:* `String.t`, *default:* `nil`) - [Output Only] The unique identifier for the resource. This identifier is defined by the server.
  *   `kind` (*type:* `String.t`, *default:* `compute#sslCertificate`) - [Output Only] Type of the resource. Always compute#sslCertificate for SSL certificates.
  *   `managed` (*type:* `GoogleApi.Compute.V1.Model.SslCertificateManagedSslCertificate.t`, *default:* `nil`) - Configuration and status of a managed SSL certificate.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
  *   `privateKey` (*type:* `String.t`, *default:* `nil`) - A value read into memory from a write-only private key file. The private key file must be in PEM format. For security, only insert requests include this field.
  *   `region` (*type:* `String.t`, *default:* `nil`) - [Output Only] URL of the region where the regional SSL Certificate resides. This field is not applicable to global SSL Certificate.
  *   `selfLink` (*type:* `String.t`, *default:* `nil`) - [Output only] Server-defined URL for the resource.
  *   `selfManaged` (*type:* `GoogleApi.Compute.V1.Model.SslCertificateSelfManagedSslCertificate.t`, *default:* `nil`) - Configuration and status of a self-managed SSL certificate.
  *   `subjectAlternativeNames` (*type:* `list(String.t)`, *default:* `nil`) - [Output Only] Domains associated with the certificate via Subject Alternative Name.
  *   `type` (*type:* `String.t`, *default:* `nil`) - (Optional) Specifies the type of SSL certificate, either "SELF_MANAGED" or "MANAGED". If not specified, the certificate is self-managed and the fields certificate and private_key are used.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :certificate => String.t() | nil,
          :creationTimestamp => String.t() | nil,
          :description => String.t() | nil,
          :expireTime => String.t() | nil,
          :id => String.t() | nil,
          :kind => String.t() | nil,
          :managed => GoogleApi.Compute.V1.Model.SslCertificateManagedSslCertificate.t() | nil,
          :name => String.t() | nil,
          :privateKey => String.t() | nil,
          :region => String.t() | nil,
          :selfLink => String.t() | nil,
          :selfManaged =>
            GoogleApi.Compute.V1.Model.SslCertificateSelfManagedSslCertificate.t() | nil,
          :subjectAlternativeNames => list(String.t()) | nil,
          :type => String.t() | nil
        }

  field(:certificate)
  field(:creationTimestamp)
  field(:description)
  field(:expireTime)
  field(:id)
  field(:kind)
  field(:managed, as: GoogleApi.Compute.V1.Model.SslCertificateManagedSslCertificate)
  field(:name)
  field(:privateKey)
  field(:region)
  field(:selfLink)
  field(:selfManaged, as: GoogleApi.Compute.V1.Model.SslCertificateSelfManagedSslCertificate)
  field(:subjectAlternativeNames, type: :list)
  field(:type)
end

defimpl Poison.Decoder, for: GoogleApi.Compute.V1.Model.SslCertificate do
  def decode(value, options) do
    GoogleApi.Compute.V1.Model.SslCertificate.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Compute.V1.Model.SslCertificate do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
