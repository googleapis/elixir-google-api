# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Compute.V1.Model.Tags do
  @moduledoc """
  A set of instance tags.

  ## Attributes

  *   `fingerprint` (*type:* `String.t`, *default:* `nil`) - Specifies a fingerprint for this request, which is essentially a hash of the tags' contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update tags. You must always provide an up-to-date fingerprint hash in order to update or change tags. To see the latest fingerprint, make get() request to the instance.
  *   `items` (*type:* `list(String.t)`, *default:* `nil`) - An array of tags. Each tag must be 1-63 characters long, and comply with RFC1035.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :fingerprint => String.t() | nil,
          :items => list(String.t()) | nil
        }

  field(:fingerprint)
  field(:items, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.Compute.V1.Model.Tags do
  def decode(value, options) do
    GoogleApi.Compute.V1.Model.Tags.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Compute.V1.Model.Tags do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
