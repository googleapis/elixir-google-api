# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Compute.V1.Model.SecurityPolicy do
  @moduledoc """
  Represents a Google Cloud Armor security policy resource. Only external backend services that use load balancers can reference a security policy. For more information, see Google Cloud Armor security policy overview.

  ## Attributes

  *   `adaptiveProtectionConfig` (*type:* `GoogleApi.Compute.V1.Model.SecurityPolicyAdaptiveProtectionConfig.t`, *default:* `nil`) - 
  *   `advancedOptionsConfig` (*type:* `GoogleApi.Compute.V1.Model.SecurityPolicyAdvancedOptionsConfig.t`, *default:* `nil`) - 
  *   `creationTimestamp` (*type:* `String.t`, *default:* `nil`) - [Output Only] Creation timestamp in RFC3339 text format.
  *   `description` (*type:* `String.t`, *default:* `nil`) - An optional description of this resource. Provide this property when you create the resource.
  *   `fingerprint` (*type:* `String.t`, *default:* `nil`) - Specifies a fingerprint for this resource, which is essentially a hash of the metadata's contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update metadata. You must always provide an up-to-date fingerprint hash in order to update or change metadata, otherwise the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make get() request to the security policy.
  *   `id` (*type:* `String.t`, *default:* `nil`) - [Output Only] The unique identifier for the resource. This identifier is defined by the server.
  *   `kind` (*type:* `String.t`, *default:* `compute#securityPolicy`) - [Output only] Type of the resource. Always compute#securityPolicyfor security policies
  *   `name` (*type:* `String.t`, *default:* `nil`) - Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
  *   `recaptchaOptionsConfig` (*type:* `GoogleApi.Compute.V1.Model.SecurityPolicyRecaptchaOptionsConfig.t`, *default:* `nil`) - 
  *   `rules` (*type:* `list(GoogleApi.Compute.V1.Model.SecurityPolicyRule.t)`, *default:* `nil`) - A list of rules that belong to this policy. There must always be a default rule (rule with priority 2147483647 and match "*"). If no rules are provided when creating a security policy, a default rule with action "allow" will be added.
  *   `selfLink` (*type:* `String.t`, *default:* `nil`) - [Output Only] Server-defined URL for the resource.
  *   `type` (*type:* `String.t`, *default:* `nil`) - The type indicates the intended use of the security policy. CLOUD_ARMOR - Cloud Armor backend security policies can be configured to filter incoming HTTP requests targeting backend services. They filter requests before they hit the origin servers. CLOUD_ARMOR_EDGE - Cloud Armor edge security policies can be configured to filter incoming HTTP requests targeting backend services (including Cloud CDN-enabled) as well as backend buckets (Cloud Storage). They filter requests before the request is served from Google's cache.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :adaptiveProtectionConfig =>
            GoogleApi.Compute.V1.Model.SecurityPolicyAdaptiveProtectionConfig.t() | nil,
          :advancedOptionsConfig =>
            GoogleApi.Compute.V1.Model.SecurityPolicyAdvancedOptionsConfig.t() | nil,
          :creationTimestamp => String.t() | nil,
          :description => String.t() | nil,
          :fingerprint => String.t() | nil,
          :id => String.t() | nil,
          :kind => String.t() | nil,
          :name => String.t() | nil,
          :recaptchaOptionsConfig =>
            GoogleApi.Compute.V1.Model.SecurityPolicyRecaptchaOptionsConfig.t() | nil,
          :rules => list(GoogleApi.Compute.V1.Model.SecurityPolicyRule.t()) | nil,
          :selfLink => String.t() | nil,
          :type => String.t() | nil
        }

  field(:adaptiveProtectionConfig,
    as: GoogleApi.Compute.V1.Model.SecurityPolicyAdaptiveProtectionConfig
  )

  field(:advancedOptionsConfig, as: GoogleApi.Compute.V1.Model.SecurityPolicyAdvancedOptionsConfig)

  field(:creationTimestamp)
  field(:description)
  field(:fingerprint)
  field(:id)
  field(:kind)
  field(:name)

  field(:recaptchaOptionsConfig,
    as: GoogleApi.Compute.V1.Model.SecurityPolicyRecaptchaOptionsConfig
  )

  field(:rules, as: GoogleApi.Compute.V1.Model.SecurityPolicyRule, type: :list)
  field(:selfLink)
  field(:type)
end

defimpl Poison.Decoder, for: GoogleApi.Compute.V1.Model.SecurityPolicy do
  def decode(value, options) do
    GoogleApi.Compute.V1.Model.SecurityPolicy.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Compute.V1.Model.SecurityPolicy do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
