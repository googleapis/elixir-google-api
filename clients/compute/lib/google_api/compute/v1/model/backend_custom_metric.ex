# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Compute.V1.Model.BackendCustomMetric do
  @moduledoc """
  Custom Metrics are used for CUSTOM_METRICS balancing_mode.

  ## Attributes

  *   `dryRun` (*type:* `boolean()`, *default:* `nil`) - If true, the metric data is collected and reported to Cloud Monitoring, but is not used for load balancing.
  *   `maxUtilization` (*type:* `number()`, *default:* `nil`) - Optional parameter to define a target utilization for the Custom Metrics balancing mode. The valid range is [0.0, 1.0].
  *   `name` (*type:* `String.t`, *default:* `nil`) - Name of a custom utilization signal. The name must be 1-64 characters long and match the regular expression [a-z]([-_.a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, period, underscore, lowercase letter, or digit, except the last character, which cannot be a dash, period, or underscore. For usage guidelines, see Custom Metrics balancing mode. This field can only be used for a global or regional backend service with the loadBalancingScheme set to EXTERNAL_MANAGED, INTERNAL_MANAGED INTERNAL_SELF_MANAGED.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :dryRun => boolean() | nil,
          :maxUtilization => number() | nil,
          :name => String.t() | nil
        }

  field(:dryRun)
  field(:maxUtilization)
  field(:name)
end

defimpl Poison.Decoder, for: GoogleApi.Compute.V1.Model.BackendCustomMetric do
  def decode(value, options) do
    GoogleApi.Compute.V1.Model.BackendCustomMetric.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Compute.V1.Model.BackendCustomMetric do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
