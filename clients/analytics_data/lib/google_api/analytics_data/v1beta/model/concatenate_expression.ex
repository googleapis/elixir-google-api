# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.AnalyticsData.V1beta.Model.ConcatenateExpression do
  @moduledoc """
  Used to combine dimension values to a single dimension.

  ## Attributes

  *   `delimiter` (*type:* `String.t`, *default:* `nil`) - The delimiter placed between dimension names. Delimiters are often single characters such as "|" or "," but can be longer strings. If a dimension value contains the delimiter, both will be present in response with no distinction. For example if dimension 1 value = "US,FR", dimension 2 value = "JP", and delimiter = ",", then the response will contain "US,FR,JP".
  *   `dimensionNames` (*type:* `list(String.t)`, *default:* `nil`) - Names of dimensions. The names must refer back to names in the dimensions field of the request.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :delimiter => String.t() | nil,
          :dimensionNames => list(String.t()) | nil
        }

  field(:delimiter)
  field(:dimensionNames, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.AnalyticsData.V1beta.Model.ConcatenateExpression do
  def decode(value, options) do
    GoogleApi.AnalyticsData.V1beta.Model.ConcatenateExpression.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.AnalyticsData.V1beta.Model.ConcatenateExpression do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
