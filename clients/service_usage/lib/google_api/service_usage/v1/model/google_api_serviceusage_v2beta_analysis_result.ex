# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ServiceUsage.V1.Model.GoogleApiServiceusageV2betaAnalysisResult do
  @moduledoc """
  An analysis result including blockers and warnings.

  ## Attributes

  *   `blockers` (*type:* `list(GoogleApi.ServiceUsage.V1.Model.GoogleApiServiceusageV2betaImpact.t)`, *default:* `nil`) - Blocking information that would prevent the policy changes at runtime.
  *   `warnings` (*type:* `list(GoogleApi.ServiceUsage.V1.Model.GoogleApiServiceusageV2betaImpact.t)`, *default:* `nil`) - Warning information indicating that the policy changes might be unsafe, but will not block the changes at runtime.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :blockers =>
            list(GoogleApi.ServiceUsage.V1.Model.GoogleApiServiceusageV2betaImpact.t()) | nil,
          :warnings =>
            list(GoogleApi.ServiceUsage.V1.Model.GoogleApiServiceusageV2betaImpact.t()) | nil
        }

  field(:blockers,
    as: GoogleApi.ServiceUsage.V1.Model.GoogleApiServiceusageV2betaImpact,
    type: :list
  )

  field(:warnings,
    as: GoogleApi.ServiceUsage.V1.Model.GoogleApiServiceusageV2betaImpact,
    type: :list
  )
end

defimpl Poison.Decoder,
  for: GoogleApi.ServiceUsage.V1.Model.GoogleApiServiceusageV2betaAnalysisResult do
  def decode(value, options) do
    GoogleApi.ServiceUsage.V1.Model.GoogleApiServiceusageV2betaAnalysisResult.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ServiceUsage.V1.Model.GoogleApiServiceusageV2betaAnalysisResult do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
