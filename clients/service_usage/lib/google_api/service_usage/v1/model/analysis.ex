# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ServiceUsage.V1.Model.Analysis do
  @moduledoc """
  A message to group the analysis information.

  ## Attributes

  *   `analysis` (*type:* `GoogleApi.ServiceUsage.V1.Model.AnalysisResult.t`, *default:* `nil`) - Output only. Analysis result of updating a policy.
  *   `analysisType` (*type:* `String.t`, *default:* `nil`) - Output only. The type of analysis.
  *   `displayName` (*type:* `String.t`, *default:* `nil`) - Output only. The user friendly display name of the analysis type. E.g. service dependency analysis, service resource usage analysis, etc.
  *   `service` (*type:* `String.t`, *default:* `nil`) - The names of the service that has analysis result of warnings or blockers. Example: `services/storage.googleapis.com`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :analysis => GoogleApi.ServiceUsage.V1.Model.AnalysisResult.t() | nil,
          :analysisType => String.t() | nil,
          :displayName => String.t() | nil,
          :service => String.t() | nil
        }

  field(:analysis, as: GoogleApi.ServiceUsage.V1.Model.AnalysisResult)
  field(:analysisType)
  field(:displayName)
  field(:service)
end

defimpl Poison.Decoder, for: GoogleApi.ServiceUsage.V1.Model.Analysis do
  def decode(value, options) do
    GoogleApi.ServiceUsage.V1.Model.Analysis.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ServiceUsage.V1.Model.Analysis do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
