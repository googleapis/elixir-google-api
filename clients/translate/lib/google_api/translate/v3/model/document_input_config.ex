# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Translate.V3.Model.DocumentInputConfig do
  @moduledoc """
  A document translation request input config.

  ## Attributes

  *   `content` (*type:* `String.t`, *default:* `nil`) - Document's content represented as a stream of bytes.
  *   `gcsSource` (*type:* `GoogleApi.Translate.V3.Model.GcsSource.t`, *default:* `nil`) - Google Cloud Storage location. This must be a single file. For example: gs://example_bucket/example_file.pdf
  *   `mimeType` (*type:* `String.t`, *default:* `nil`) - Specifies the input document's mime_type. If not specified it will be determined using the file extension for gcs_source provided files. For a file provided through bytes content the mime_type must be provided. Currently supported mime types are: - application/pdf - application/vnd.openxmlformats-officedocument.wordprocessingml.document - application/vnd.openxmlformats-officedocument.presentationml.presentation - application/vnd.openxmlformats-officedocument.spreadsheetml.sheet
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :content => String.t() | nil,
          :gcsSource => GoogleApi.Translate.V3.Model.GcsSource.t() | nil,
          :mimeType => String.t() | nil
        }

  field(:content)
  field(:gcsSource, as: GoogleApi.Translate.V3.Model.GcsSource)
  field(:mimeType)
end

defimpl Poison.Decoder, for: GoogleApi.Translate.V3.Model.DocumentInputConfig do
  def decode(value, options) do
    GoogleApi.Translate.V3.Model.DocumentInputConfig.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Translate.V3.Model.DocumentInputConfig do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
