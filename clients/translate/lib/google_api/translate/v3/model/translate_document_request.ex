# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Translate.V3.Model.TranslateDocumentRequest do
  @moduledoc """
  A document translation request.

  ## Attributes

  *   `documentInputConfig` (*type:* `GoogleApi.Translate.V3.Model.DocumentInputConfig.t`, *default:* `nil`) - Required. Input configurations.
  *   `documentOutputConfig` (*type:* `GoogleApi.Translate.V3.Model.DocumentOutputConfig.t`, *default:* `nil`) - Optional. Output configurations. Defines if the output file should be stored within Cloud Storage as well as the desired output format. If not provided the translated file will only be returned through a byte-stream and its output mime type will be the same as the input file's mime type.
  *   `glossaryConfig` (*type:* `GoogleApi.Translate.V3.Model.TranslateTextGlossaryConfig.t`, *default:* `nil`) - Optional. Glossary to be applied. The glossary must be within the same region (have the same location-id) as the model, otherwise an INVALID_ARGUMENT (400) error is returned.
  *   `labels` (*type:* `map()`, *default:* `nil`) - Optional. The labels with user-defined metadata for the request. Label keys and values can be no longer than 63 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. Label values are optional. Label keys must start with a letter. See https://cloud.google.com/translate/docs/advanced/labels for more information.
  *   `model` (*type:* `String.t`, *default:* `nil`) - Optional. The `model` type requested for this translation. The format depends on model type: - AutoML Translation models: `projects/{project-number-or-id}/locations/{location-id}/models/{model-id}` - General (built-in) models: `projects/{project-number-or-id}/locations/{location-id}/models/general/nmt`, If not provided, the default Google model (NMT) will be used for translation.
  *   `sourceLanguageCode` (*type:* `String.t`, *default:* `nil`) - Optional. The BCP-47 language code of the input document if known, for example, "en-US" or "sr-Latn". Supported language codes are listed in Language Support. If the source language isn't specified, the API attempts to identify the source language automatically and returns the source language within the response. Source language must be specified if the request contains a glossary or a custom model.
  *   `targetLanguageCode` (*type:* `String.t`, *default:* `nil`) - Required. The BCP-47 language code to use for translation of the input document, set to one of the language codes listed in Language Support.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :documentInputConfig => GoogleApi.Translate.V3.Model.DocumentInputConfig.t() | nil,
          :documentOutputConfig => GoogleApi.Translate.V3.Model.DocumentOutputConfig.t() | nil,
          :glossaryConfig => GoogleApi.Translate.V3.Model.TranslateTextGlossaryConfig.t() | nil,
          :labels => map() | nil,
          :model => String.t() | nil,
          :sourceLanguageCode => String.t() | nil,
          :targetLanguageCode => String.t() | nil
        }

  field(:documentInputConfig, as: GoogleApi.Translate.V3.Model.DocumentInputConfig)
  field(:documentOutputConfig, as: GoogleApi.Translate.V3.Model.DocumentOutputConfig)
  field(:glossaryConfig, as: GoogleApi.Translate.V3.Model.TranslateTextGlossaryConfig)
  field(:labels, type: :map)
  field(:model)
  field(:sourceLanguageCode)
  field(:targetLanguageCode)
end

defimpl Poison.Decoder, for: GoogleApi.Translate.V3.Model.TranslateDocumentRequest do
  def decode(value, options) do
    GoogleApi.Translate.V3.Model.TranslateDocumentRequest.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Translate.V3.Model.TranslateDocumentRequest do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
