# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Translate.V3.Model.TranslateDocumentResponse do
  @moduledoc """
  A translated document response message.

  ## Attributes

  *   `documentTranslation` (*type:* `GoogleApi.Translate.V3.Model.DocumentTranslation.t`, *default:* `nil`) - Translated document.
  *   `glossaryConfig` (*type:* `GoogleApi.Translate.V3.Model.TranslateTextGlossaryConfig.t`, *default:* `nil`) - The `glossary_config` used for this translation.
  *   `glossaryDocumentTranslation` (*type:* `GoogleApi.Translate.V3.Model.DocumentTranslation.t`, *default:* `nil`) - The document's translation output if a glossary is provided in the request. This can be the same as [TranslateDocumentResponse.document_translation] if no glossary terms apply.
  *   `model` (*type:* `String.t`, *default:* `nil`) - Only present when 'model' is present in the request. 'model' is normalized to have a project number. For example: If the 'model' field in TranslateDocumentRequest is: `projects/{project-id}/locations/{location-id}/models/general/nmt` then `model` here would be normalized to `projects/{project-number}/locations/{location-id}/models/general/nmt`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :documentTranslation => GoogleApi.Translate.V3.Model.DocumentTranslation.t() | nil,
          :glossaryConfig => GoogleApi.Translate.V3.Model.TranslateTextGlossaryConfig.t() | nil,
          :glossaryDocumentTranslation =>
            GoogleApi.Translate.V3.Model.DocumentTranslation.t() | nil,
          :model => String.t() | nil
        }

  field(:documentTranslation, as: GoogleApi.Translate.V3.Model.DocumentTranslation)
  field(:glossaryConfig, as: GoogleApi.Translate.V3.Model.TranslateTextGlossaryConfig)
  field(:glossaryDocumentTranslation, as: GoogleApi.Translate.V3.Model.DocumentTranslation)
  field(:model)
end

defimpl Poison.Decoder, for: GoogleApi.Translate.V3.Model.TranslateDocumentResponse do
  def decode(value, options) do
    GoogleApi.Translate.V3.Model.TranslateDocumentResponse.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Translate.V3.Model.TranslateDocumentResponse do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
