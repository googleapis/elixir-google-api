# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Translate.V3.Model.DocumentTranslation do
  @moduledoc """
  A translated document message.

  ## Attributes

  *   `byteStreamOutputs` (*type:* `list(String.t)`, *default:* `nil`) - The array of translated documents. It is expected to be size 1 for now. We may produce multiple translated documents in the future for other type of file formats.
  *   `detectedLanguageCode` (*type:* `String.t`, *default:* `nil`) - The detected language for the input document. If the user did not provide the source language for the input document, this field will have the language code automatically detected. If the source language was passed, auto-detection of the language does not occur and this field is empty.
  *   `mimeType` (*type:* `String.t`, *default:* `nil`) - The translated document's mime type.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :byteStreamOutputs => list(String.t()) | nil,
          :detectedLanguageCode => String.t() | nil,
          :mimeType => String.t() | nil
        }

  field(:byteStreamOutputs, type: :list)
  field(:detectedLanguageCode)
  field(:mimeType)
end

defimpl Poison.Decoder, for: GoogleApi.Translate.V3.Model.DocumentTranslation do
  def decode(value, options) do
    GoogleApi.Translate.V3.Model.DocumentTranslation.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Translate.V3.Model.DocumentTranslation do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
