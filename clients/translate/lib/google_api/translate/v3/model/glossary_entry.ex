# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Translate.V3.Model.GlossaryEntry do
  @moduledoc """
  Represents a single entry in a glossary.

  ## Attributes

  *   `description` (*type:* `String.t`, *default:* `nil`) - Describes the glossary entry.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Identifier. The resource name of the entry. Format: "projects/*/locations/*/glossaries/*/glossaryEntries/*"
  *   `termsPair` (*type:* `GoogleApi.Translate.V3.Model.GlossaryTermsPair.t`, *default:* `nil`) - Used for an unidirectional glossary.
  *   `termsSet` (*type:* `GoogleApi.Translate.V3.Model.GlossaryTermsSet.t`, *default:* `nil`) - Used for an equivalent term sets glossary.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :description => String.t() | nil,
          :name => String.t() | nil,
          :termsPair => GoogleApi.Translate.V3.Model.GlossaryTermsPair.t() | nil,
          :termsSet => GoogleApi.Translate.V3.Model.GlossaryTermsSet.t() | nil
        }

  field(:description)
  field(:name)
  field(:termsPair, as: GoogleApi.Translate.V3.Model.GlossaryTermsPair)
  field(:termsSet, as: GoogleApi.Translate.V3.Model.GlossaryTermsSet)
end

defimpl Poison.Decoder, for: GoogleApi.Translate.V3.Model.GlossaryEntry do
  def decode(value, options) do
    GoogleApi.Translate.V3.Model.GlossaryEntry.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Translate.V3.Model.GlossaryEntry do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
