# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.FCMData.V1beta1.Model.GoogleFirebaseFcmDataV1beta1AndroidDeliveryData do
  @moduledoc """
  Message delivery data for a given date, app, and analytics label combination.

  ## Attributes

  *   `analyticsLabel` (*type:* `String.t`, *default:* `nil`) - The analytics label associated with the messages sent. All messages sent without an analytics label will be grouped together in a single entry.
  *   `appId` (*type:* `String.t`, *default:* `nil`) - The app ID to which the messages were sent.
  *   `data` (*type:* `GoogleApi.FCMData.V1beta1.Model.GoogleFirebaseFcmDataV1beta1Data.t`, *default:* `nil`) - The data for the specified appId, date, and analyticsLabel.
  *   `date` (*type:* `GoogleApi.FCMData.V1beta1.Model.GoogleTypeDate.t`, *default:* `nil`) - The date represented by this entry.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :analyticsLabel => String.t() | nil,
          :appId => String.t() | nil,
          :data => GoogleApi.FCMData.V1beta1.Model.GoogleFirebaseFcmDataV1beta1Data.t() | nil,
          :date => GoogleApi.FCMData.V1beta1.Model.GoogleTypeDate.t() | nil
        }

  field(:analyticsLabel)
  field(:appId)
  field(:data, as: GoogleApi.FCMData.V1beta1.Model.GoogleFirebaseFcmDataV1beta1Data)
  field(:date, as: GoogleApi.FCMData.V1beta1.Model.GoogleTypeDate)
end

defimpl Poison.Decoder,
  for: GoogleApi.FCMData.V1beta1.Model.GoogleFirebaseFcmDataV1beta1AndroidDeliveryData do
  def decode(value, options) do
    GoogleApi.FCMData.V1beta1.Model.GoogleFirebaseFcmDataV1beta1AndroidDeliveryData.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.FCMData.V1beta1.Model.GoogleFirebaseFcmDataV1beta1AndroidDeliveryData do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
