# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.BigtableAdmin.V2.Model.GoogleBigtableAdminV2TypeStructEncodingDelimitedBytes do
  @moduledoc """
  Fields are encoded independently and concatenated with a configurable `delimiter` in between. A struct with no fields defined is encoded as a single `delimiter`. Sorted mode: - Fields are encoded in sorted mode. - Encoded field values must not contain any bytes <= `delimiter[0]` - Element-wise order is preserved: `A < B` if `A[0] < B[0]`, or if `A[0] == B[0] && A[1] < B[1]`, etc. Strict prefixes sort first. Distinct mode: - Fields are encoded in distinct mode. - Encoded field values must not contain `delimiter[0]`.

  ## Attributes

  *   `delimiter` (*type:* `String.t`, *default:* `nil`) - Byte sequence used to delimit concatenated fields. The delimiter must contain at least 1 character and at most 50 characters.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :delimiter => String.t() | nil
        }

  field(:delimiter)
end

defimpl Poison.Decoder,
  for: GoogleApi.BigtableAdmin.V2.Model.GoogleBigtableAdminV2TypeStructEncodingDelimitedBytes do
  def decode(value, options) do
    GoogleApi.BigtableAdmin.V2.Model.GoogleBigtableAdminV2TypeStructEncodingDelimitedBytes.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.BigtableAdmin.V2.Model.GoogleBigtableAdminV2TypeStructEncodingDelimitedBytes do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
