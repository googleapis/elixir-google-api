# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Retail.V2.Model.GoogleCloudRetailV2PriceInfo do
  @moduledoc """
  The price information of a Product.

  ## Attributes

  *   `cost` (*type:* `number()`, *default:* `nil`) - The costs associated with the sale of a particular product. Used for gross profit reporting. * Profit = price - cost Google Merchant Center property [cost_of_goods_sold](https://support.google.com/merchants/answer/9017895).
  *   `currencyCode` (*type:* `String.t`, *default:* `nil`) - The 3-letter currency code defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html). If this field is an unrecognizable currency code, an INVALID_ARGUMENT error is returned. The Product.Type.VARIANT Products with the same Product.primary_product_id must share the same currency_code. Otherwise, a FAILED_PRECONDITION error is returned.
  *   `originalPrice` (*type:* `number()`, *default:* `nil`) - Price of the product without any discount. If zero, by default set to be the price.
  *   `price` (*type:* `number()`, *default:* `nil`) - Price of the product. Google Merchant Center property [price](https://support.google.com/merchants/answer/6324371). Schema.org property [Offer.priceSpecification](https://schema.org/priceSpecification).
  *   `priceEffectiveTime` (*type:* `DateTime.t`, *default:* `nil`) - The timestamp when the price starts to be effective. This can be set as a future timestamp, and the price is only used for search after price_effective_time. If so, the original_price must be set and original_price is used before price_effective_time. Do not set if price is always effective because it will cause additional latency during search.
  *   `priceExpireTime` (*type:* `DateTime.t`, *default:* `nil`) - The timestamp when the price stops to be effective. The price is used for search before price_expire_time. If this field is set, the original_price must be set and original_price is used after price_expire_time. Do not set if price is always effective because it will cause additional latency during search.
  *   `priceRange` (*type:* `GoogleApi.Retail.V2.Model.GoogleCloudRetailV2PriceInfoPriceRange.t`, *default:* `nil`) - Output only. The price range of all the child Product.Type.VARIANT Products grouped together on the Product.Type.PRIMARY Product. Only populated for Product.Type.PRIMARY Products. Note: This field is OUTPUT_ONLY for ProductService.GetProduct. Do not set this field in API requests.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :cost => number() | nil,
          :currencyCode => String.t() | nil,
          :originalPrice => number() | nil,
          :price => number() | nil,
          :priceEffectiveTime => DateTime.t() | nil,
          :priceExpireTime => DateTime.t() | nil,
          :priceRange =>
            GoogleApi.Retail.V2.Model.GoogleCloudRetailV2PriceInfoPriceRange.t() | nil
        }

  field(:cost)
  field(:currencyCode)
  field(:originalPrice)
  field(:price)
  field(:priceEffectiveTime, as: DateTime)
  field(:priceExpireTime, as: DateTime)
  field(:priceRange, as: GoogleApi.Retail.V2.Model.GoogleCloudRetailV2PriceInfoPriceRange)
end

defimpl Poison.Decoder, for: GoogleApi.Retail.V2.Model.GoogleCloudRetailV2PriceInfo do
  def decode(value, options) do
    GoogleApi.Retail.V2.Model.GoogleCloudRetailV2PriceInfo.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Retail.V2.Model.GoogleCloudRetailV2PriceInfo do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
