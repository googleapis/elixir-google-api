# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Retail.V2.Model.GoogleCloudRetailV2GenerativeQuestionsFeatureConfig do
  @moduledoc """
  Configuration for overall generative question feature state.

  ## Attributes

  *   `catalog` (*type:* `String.t`, *default:* `nil`) - Required. Resource name of the affected catalog. Format: projects/{project}/locations/{location}/catalogs/{catalog}
  *   `featureEnabled` (*type:* `boolean()`, *default:* `nil`) - Optional. Determines whether questions will be used at serving time. Note: This feature cannot be enabled until initial data requirements are satisfied.
  *   `minimumProducts` (*type:* `integer()`, *default:* `nil`) - Optional. Minimum number of products in the response to trigger follow-up questions. Value must be 0 or positive.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :catalog => String.t() | nil,
          :featureEnabled => boolean() | nil,
          :minimumProducts => integer() | nil
        }

  field(:catalog)
  field(:featureEnabled)
  field(:minimumProducts)
end

defimpl Poison.Decoder,
  for: GoogleApi.Retail.V2.Model.GoogleCloudRetailV2GenerativeQuestionsFeatureConfig do
  def decode(value, options) do
    GoogleApi.Retail.V2.Model.GoogleCloudRetailV2GenerativeQuestionsFeatureConfig.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.Retail.V2.Model.GoogleCloudRetailV2GenerativeQuestionsFeatureConfig do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
