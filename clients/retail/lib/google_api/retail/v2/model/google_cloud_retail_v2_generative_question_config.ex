# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Retail.V2.Model.GoogleCloudRetailV2GenerativeQuestionConfig do
  @moduledoc """
  Configuration for a single generated question.

  ## Attributes

  *   `allowedInConversation` (*type:* `boolean()`, *default:* `nil`) - Optional. Whether the question is asked at serving time.
  *   `catalog` (*type:* `String.t`, *default:* `nil`) - Required. Resource name of the catalog. Format: projects/{project}/locations/{location}/catalogs/{catalog}
  *   `exampleValues` (*type:* `list(String.t)`, *default:* `nil`) - Output only. Values that can be used to answer the question.
  *   `facet` (*type:* `String.t`, *default:* `nil`) - Required. The facet to which the question is associated.
  *   `finalQuestion` (*type:* `String.t`, *default:* `nil`) - Optional. The question that will be used at serving time. Question can have a max length of 300 bytes. When not populated, generated_question should be used.
  *   `frequency` (*type:* `number()`, *default:* `nil`) - Output only. The ratio of how often a question was asked.
  *   `generatedQuestion` (*type:* `String.t`, *default:* `nil`) - Output only. The LLM generated question.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :allowedInConversation => boolean() | nil,
          :catalog => String.t() | nil,
          :exampleValues => list(String.t()) | nil,
          :facet => String.t() | nil,
          :finalQuestion => String.t() | nil,
          :frequency => number() | nil,
          :generatedQuestion => String.t() | nil
        }

  field(:allowedInConversation)
  field(:catalog)
  field(:exampleValues, type: :list)
  field(:facet)
  field(:finalQuestion)
  field(:frequency)
  field(:generatedQuestion)
end

defimpl Poison.Decoder, for: GoogleApi.Retail.V2.Model.GoogleCloudRetailV2GenerativeQuestionConfig do
  def decode(value, options) do
    GoogleApi.Retail.V2.Model.GoogleCloudRetailV2GenerativeQuestionConfig.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Retail.V2.Model.GoogleCloudRetailV2GenerativeQuestionConfig do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
