# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ChromePolicy.V1.Model.GoogleChromePolicyV1PolicySchema do
  @moduledoc """
  Resource representing a policy schema. Next ID: 12

  ## Attributes

  *   `accessRestrictions` (*type:* `list(String.t)`, *default:* `nil`) - Output only. Specific access restrictions related to this policy.
  *   `additionalTargetKeyNames` (*type:* `list(GoogleApi.ChromePolicy.V1.Model.GoogleChromePolicyV1AdditionalTargetKeyName.t)`, *default:* `nil`) - Output only. Additional key names that will be used to identify the target of the policy value. When specifying a `policyTargetKey`, each of the additional keys specified here will have to be included in the `additionalTargetKeys` map.
  *   `definition` (*type:* `GoogleApi.ChromePolicy.V1.Model.Proto2FileDescriptorProto.t`, *default:* `nil`) - Schema definition using proto descriptor.
  *   `fieldDescriptions` (*type:* `list(GoogleApi.ChromePolicy.V1.Model.GoogleChromePolicyV1PolicySchemaFieldDescription.t)`, *default:* `nil`) - Output only. Detailed description of each field that is part of the schema.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Format: name=customers/{customer}/policySchemas/{schema_namespace}
  *   `notices` (*type:* `list(GoogleApi.ChromePolicy.V1.Model.GoogleChromePolicyV1PolicySchemaNoticeDescription.t)`, *default:* `nil`) - Output only. Special notice messages related to setting certain values in certain fields in the schema.
  *   `policyApiLifeycle` (*type:* `GoogleApi.ChromePolicy.V1.Model.ChromeCrosDpanelAutosettingsProtoPolicyApiLifecycle.t`, *default:* `nil`) - Output only. Current life cycle information.
  *   `policyDescription` (*type:* `String.t`, *default:* `nil`) - Output only. Description about the policy schema for user consumption.
  *   `schemaName` (*type:* `String.t`, *default:* `nil`) - Output only. The fully qualified name of the policy schema. This value is used to fill the field `policy_schema` in PolicyValue when calling BatchInheritOrgUnitPolicies or BatchModifyOrgUnitPolicies
  *   `supportUri` (*type:* `String.t`, *default:* `nil`) - Output only. URI to related support article for this schema.
  *   `validTargetResources` (*type:* `list(String.t)`, *default:* `nil`) - Output only. Information about applicable target resources for the policy.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :accessRestrictions => list(String.t()) | nil,
          :additionalTargetKeyNames =>
            list(GoogleApi.ChromePolicy.V1.Model.GoogleChromePolicyV1AdditionalTargetKeyName.t())
            | nil,
          :definition => GoogleApi.ChromePolicy.V1.Model.Proto2FileDescriptorProto.t() | nil,
          :fieldDescriptions =>
            list(
              GoogleApi.ChromePolicy.V1.Model.GoogleChromePolicyV1PolicySchemaFieldDescription.t()
            )
            | nil,
          :name => String.t() | nil,
          :notices =>
            list(
              GoogleApi.ChromePolicy.V1.Model.GoogleChromePolicyV1PolicySchemaNoticeDescription.t()
            )
            | nil,
          :policyApiLifeycle =>
            GoogleApi.ChromePolicy.V1.Model.ChromeCrosDpanelAutosettingsProtoPolicyApiLifecycle.t()
            | nil,
          :policyDescription => String.t() | nil,
          :schemaName => String.t() | nil,
          :supportUri => String.t() | nil,
          :validTargetResources => list(String.t()) | nil
        }

  field(:accessRestrictions, type: :list)

  field(:additionalTargetKeyNames,
    as: GoogleApi.ChromePolicy.V1.Model.GoogleChromePolicyV1AdditionalTargetKeyName,
    type: :list
  )

  field(:definition, as: GoogleApi.ChromePolicy.V1.Model.Proto2FileDescriptorProto)

  field(:fieldDescriptions,
    as: GoogleApi.ChromePolicy.V1.Model.GoogleChromePolicyV1PolicySchemaFieldDescription,
    type: :list
  )

  field(:name)

  field(:notices,
    as: GoogleApi.ChromePolicy.V1.Model.GoogleChromePolicyV1PolicySchemaNoticeDescription,
    type: :list
  )

  field(:policyApiLifeycle,
    as: GoogleApi.ChromePolicy.V1.Model.ChromeCrosDpanelAutosettingsProtoPolicyApiLifecycle
  )

  field(:policyDescription)
  field(:schemaName)
  field(:supportUri)
  field(:validTargetResources, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.ChromePolicy.V1.Model.GoogleChromePolicyV1PolicySchema do
  def decode(value, options) do
    GoogleApi.ChromePolicy.V1.Model.GoogleChromePolicyV1PolicySchema.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ChromePolicy.V1.Model.GoogleChromePolicyV1PolicySchema do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
