# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.AlloyDB.V1.Model.StorageDatabasecenterPartnerapiV1mainAvailabilityConfiguration do
  @moduledoc """
  Configuration for availability of database instance

  ## Attributes

  *   `automaticFailoverRoutingConfigured` (*type:* `boolean()`, *default:* `nil`) - Checks for existence of (multi-cluster) routing configuration that allows automatic failover to a different zone/region in case of an outage. Applicable to Bigtable resources.
  *   `availabilityType` (*type:* `String.t`, *default:* `nil`) - Availability type. Potential values: * `ZONAL`: The instance serves data from only one zone. Outages in that zone affect data accessibility. * `REGIONAL`: The instance can serve data from more than one zone in a region (it is highly available).
  *   `crossRegionReplicaConfigured` (*type:* `boolean()`, *default:* `nil`) - Checks for resources that are configured to have redundancy, and ongoing replication across regions
  *   `externalReplicaConfigured` (*type:* `boolean()`, *default:* `nil`) - 
  *   `promotableReplicaConfigured` (*type:* `boolean()`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :automaticFailoverRoutingConfigured => boolean() | nil,
          :availabilityType => String.t() | nil,
          :crossRegionReplicaConfigured => boolean() | nil,
          :externalReplicaConfigured => boolean() | nil,
          :promotableReplicaConfigured => boolean() | nil
        }

  field(:automaticFailoverRoutingConfigured)
  field(:availabilityType)
  field(:crossRegionReplicaConfigured)
  field(:externalReplicaConfigured)
  field(:promotableReplicaConfigured)
end

defimpl Poison.Decoder,
  for: GoogleApi.AlloyDB.V1.Model.StorageDatabasecenterPartnerapiV1mainAvailabilityConfiguration do
  def decode(value, options) do
    GoogleApi.AlloyDB.V1.Model.StorageDatabasecenterPartnerapiV1mainAvailabilityConfiguration.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.AlloyDB.V1.Model.StorageDatabasecenterPartnerapiV1mainAvailabilityConfiguration do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
