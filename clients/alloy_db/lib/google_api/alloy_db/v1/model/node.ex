# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.AlloyDB.V1.Model.Node do
  @moduledoc """
  Details of a single node in the instance. Nodes in an AlloyDB instance are ephemereal, they can change during update, failover, autohealing and resize operations.

  ## Attributes

  *   `id` (*type:* `String.t`, *default:* `nil`) - Output only. The identifier of the VM e.g. "test-read-0601-407e52be-ms3l".
  *   `ip` (*type:* `String.t`, *default:* `nil`) - Output only. The private IP address of the VM e.g. "10.57.0.34".
  *   `state` (*type:* `String.t`, *default:* `nil`) - Output only. Determined by state of the compute VM and postgres-service health. Compute VM state can have values listed in https://cloud.google.com/compute/docs/instances/instance-life-cycle and postgres-service health can have values: HEALTHY and UNHEALTHY.
  *   `zoneId` (*type:* `String.t`, *default:* `nil`) - Output only. The Compute Engine zone of the VM e.g. "us-central1-b".
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :id => String.t() | nil,
          :ip => String.t() | nil,
          :state => String.t() | nil,
          :zoneId => String.t() | nil
        }

  field(:id)
  field(:ip)
  field(:state)
  field(:zoneId)
end

defimpl Poison.Decoder, for: GoogleApi.AlloyDB.V1.Model.Node do
  def decode(value, options) do
    GoogleApi.AlloyDB.V1.Model.Node.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.AlloyDB.V1.Model.Node do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
