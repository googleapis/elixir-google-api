# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionFeatureConfig do
  @moduledoc """
  Config for suggestion features.

  ## Attributes

  *   `conversationModelConfig` (*type:* `GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2HumanAgentAssistantConfigConversationModelConfig.t`, *default:* `nil`) - Configs of custom conversation model.
  *   `conversationProcessConfig` (*type:* `GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2HumanAgentAssistantConfigConversationProcessConfig.t`, *default:* `nil`) - Configs for processing conversation.
  *   `disableAgentQueryLogging` (*type:* `boolean()`, *default:* `nil`) - Optional. Disable the logging of search queries sent by human agents. It can prevent those queries from being stored at answer records. Supported features: KNOWLEDGE_SEARCH.
  *   `enableConversationAugmentedQuery` (*type:* `boolean()`, *default:* `nil`) - Optional. Enable including conversation context during query answer generation. Supported features: KNOWLEDGE_SEARCH.
  *   `enableEventBasedSuggestion` (*type:* `boolean()`, *default:* `nil`) - Automatically iterates all participants and tries to compile suggestions. Supported features: ARTICLE_SUGGESTION, FAQ, DIALOGFLOW_ASSIST, KNOWLEDGE_ASSIST.
  *   `enableQuerySuggestionOnly` (*type:* `boolean()`, *default:* `nil`) - Optional. Enable query suggestion only. Supported features: KNOWLEDGE_ASSIST
  *   `enableQuerySuggestionWhenNoAnswer` (*type:* `boolean()`, *default:* `nil`) - Optional. Enable query suggestion even if we can't find its answer. By default, queries are suggested only if we find its answer. Supported features: KNOWLEDGE_ASSIST
  *   `queryConfig` (*type:* `GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfig.t`, *default:* `nil`) - Configs of query.
  *   `suggestionFeature` (*type:* `GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2SuggestionFeature.t`, *default:* `nil`) - The suggestion feature.
  *   `suggestionTriggerSettings` (*type:* `GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionTriggerSettings.t`, *default:* `nil`) - Settings of suggestion trigger. Currently, only ARTICLE_SUGGESTION and FAQ will use this field.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :conversationModelConfig =>
            GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2HumanAgentAssistantConfigConversationModelConfig.t()
            | nil,
          :conversationProcessConfig =>
            GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2HumanAgentAssistantConfigConversationProcessConfig.t()
            | nil,
          :disableAgentQueryLogging => boolean() | nil,
          :enableConversationAugmentedQuery => boolean() | nil,
          :enableEventBasedSuggestion => boolean() | nil,
          :enableQuerySuggestionOnly => boolean() | nil,
          :enableQuerySuggestionWhenNoAnswer => boolean() | nil,
          :queryConfig =>
            GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfig.t()
            | nil,
          :suggestionFeature =>
            GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2SuggestionFeature.t() | nil,
          :suggestionTriggerSettings =>
            GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionTriggerSettings.t()
            | nil
        }

  field(:conversationModelConfig,
    as:
      GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2HumanAgentAssistantConfigConversationModelConfig
  )

  field(:conversationProcessConfig,
    as:
      GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2HumanAgentAssistantConfigConversationProcessConfig
  )

  field(:disableAgentQueryLogging)
  field(:enableConversationAugmentedQuery)
  field(:enableEventBasedSuggestion)
  field(:enableQuerySuggestionOnly)
  field(:enableQuerySuggestionWhenNoAnswer)

  field(:queryConfig,
    as:
      GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfig
  )

  field(:suggestionFeature,
    as: GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2SuggestionFeature
  )

  field(:suggestionTriggerSettings,
    as:
      GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionTriggerSettings
  )
end

defimpl Poison.Decoder,
  for:
    GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionFeatureConfig do
  def decode(value, options) do
    GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionFeatureConfig.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for:
    GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionFeatureConfig do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
