# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2GenerateSuggestionsResponseGeneratorSuggestionAnswer do
  @moduledoc """
  A GeneratorSuggestion answer.

  ## Attributes

  *   `answerRecord` (*type:* `String.t`, *default:* `nil`) - Answer record that uniquely identifies the suggestion. This can be used to provide suggestion feedback.
  *   `generatorSuggestion` (*type:* `GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2GeneratorSuggestion.t`, *default:* `nil`) - Suggestion details.
  *   `sourceGenerator` (*type:* `String.t`, *default:* `nil`) - The name of the generator used to generate this suggestion. Format: `projects//locations//generators/`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :answerRecord => String.t() | nil,
          :generatorSuggestion =>
            GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2GeneratorSuggestion.t() | nil,
          :sourceGenerator => String.t() | nil
        }

  field(:answerRecord)

  field(:generatorSuggestion,
    as: GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2GeneratorSuggestion
  )

  field(:sourceGenerator)
end

defimpl Poison.Decoder,
  for:
    GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2GenerateSuggestionsResponseGeneratorSuggestionAnswer do
  def decode(value, options) do
    GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2GenerateSuggestionsResponseGeneratorSuggestionAnswer.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for:
    GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2GenerateSuggestionsResponseGeneratorSuggestionAnswer do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
