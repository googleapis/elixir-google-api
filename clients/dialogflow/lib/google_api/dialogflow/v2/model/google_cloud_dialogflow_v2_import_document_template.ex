# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2ImportDocumentTemplate do
  @moduledoc """
  The template used for importing documents.

  ## Attributes

  *   `knowledgeTypes` (*type:* `list(String.t)`, *default:* `nil`) - Required. The knowledge type of document content.
  *   `metadata` (*type:* `map()`, *default:* `nil`) - Metadata for the document. The metadata supports arbitrary key-value pairs. Suggested use cases include storing a document's title, an external URL distinct from the document's content_uri, etc. The max size of a `key` or a `value` of the metadata is 1024 bytes.
  *   `mimeType` (*type:* `String.t`, *default:* `nil`) - Required. The MIME type of the document.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :knowledgeTypes => list(String.t()) | nil,
          :metadata => map() | nil,
          :mimeType => String.t() | nil
        }

  field(:knowledgeTypes, type: :list)
  field(:metadata, type: :map)
  field(:mimeType)
end

defimpl Poison.Decoder,
  for: GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2ImportDocumentTemplate do
  def decode(value, options) do
    GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2ImportDocumentTemplate.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2ImportDocumentTemplate do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
