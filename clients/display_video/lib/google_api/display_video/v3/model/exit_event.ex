# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.DisplayVideo.V3.Model.ExitEvent do
  @moduledoc """
  Exit event of the creative.

  ## Attributes

  *   `name` (*type:* `String.t`, *default:* `nil`) - Optional. The name of the click tag of the exit event. The name must be unique within one creative. Leave it empty or unset for creatives containing image assets only.
  *   `reportingName` (*type:* `String.t`, *default:* `nil`) - Optional. The name used to identify this event in reports. Leave it empty or unset for creatives containing image assets only.
  *   `type` (*type:* `String.t`, *default:* `nil`) - Required. The type of the exit event.
  *   `url` (*type:* `String.t`, *default:* `nil`) - Required. The click through URL of the exit event. This is required when type is: * `EXIT_EVENT_TYPE_DEFAULT` * `EXIT_EVENT_TYPE_BACKUP`
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :name => String.t() | nil,
          :reportingName => String.t() | nil,
          :type => String.t() | nil,
          :url => String.t() | nil
        }

  field(:name)
  field(:reportingName)
  field(:type)
  field(:url)
end

defimpl Poison.Decoder, for: GoogleApi.DisplayVideo.V3.Model.ExitEvent do
  def decode(value, options) do
    GoogleApi.DisplayVideo.V3.Model.ExitEvent.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.DisplayVideo.V3.Model.ExitEvent do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
