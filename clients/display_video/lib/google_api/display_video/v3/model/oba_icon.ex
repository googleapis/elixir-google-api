# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.DisplayVideo.V3.Model.ObaIcon do
  @moduledoc """
  OBA Icon for a Creative

  ## Attributes

  *   `clickTrackingUrl` (*type:* `String.t`, *default:* `nil`) - Required. The click tracking URL of the OBA icon. Only URLs of the following domains are allowed: * `https://info.evidon.com` * `https://l.betrad.com`
  *   `dimensions` (*type:* `GoogleApi.DisplayVideo.V3.Model.Dimensions.t`, *default:* `nil`) - Optional. The dimensions of the OBA icon.
  *   `landingPageUrl` (*type:* `String.t`, *default:* `nil`) - Required. The landing page URL of the OBA icon. Only URLs of the following domains are allowed: * `https://info.evidon.com` * `https://l.betrad.com`
  *   `position` (*type:* `String.t`, *default:* `nil`) - Optional. The position of the OBA icon on the creative.
  *   `program` (*type:* `String.t`, *default:* `nil`) - Optional. The program of the OBA icon. For example: “AdChoices”.
  *   `resourceMimeType` (*type:* `String.t`, *default:* `nil`) - Optional. The MIME type of the OBA icon resource.
  *   `resourceUrl` (*type:* `String.t`, *default:* `nil`) - Optional. The URL of the OBA icon resource.
  *   `viewTrackingUrl` (*type:* `String.t`, *default:* `nil`) - Required. The view tracking URL of the OBA icon. Only URLs of the following domains are allowed: * `https://info.evidon.com` * `https://l.betrad.com`
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :clickTrackingUrl => String.t() | nil,
          :dimensions => GoogleApi.DisplayVideo.V3.Model.Dimensions.t() | nil,
          :landingPageUrl => String.t() | nil,
          :position => String.t() | nil,
          :program => String.t() | nil,
          :resourceMimeType => String.t() | nil,
          :resourceUrl => String.t() | nil,
          :viewTrackingUrl => String.t() | nil
        }

  field(:clickTrackingUrl)
  field(:dimensions, as: GoogleApi.DisplayVideo.V3.Model.Dimensions)
  field(:landingPageUrl)
  field(:position)
  field(:program)
  field(:resourceMimeType)
  field(:resourceUrl)
  field(:viewTrackingUrl)
end

defimpl Poison.Decoder, for: GoogleApi.DisplayVideo.V3.Model.ObaIcon do
  def decode(value, options) do
    GoogleApi.DisplayVideo.V3.Model.ObaIcon.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.DisplayVideo.V3.Model.ObaIcon do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
