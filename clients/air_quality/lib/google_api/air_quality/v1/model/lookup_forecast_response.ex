# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.AirQuality.V1.Model.LookupForecastResponse do
  @moduledoc """
  The response object of the air quality forecast API.

  ## Attributes

  *   `hourlyForecasts` (*type:* `list(GoogleApi.AirQuality.V1.Model.HourlyForecast.t)`, *default:* `nil`) - Optional. Contains the air quality information for each hour in the requested range. For example, if the request is for 48 hours of forecast there will be 48 elements of hourly forecasts.
  *   `nextPageToken` (*type:* `String.t`, *default:* `nil`) - Optional. The token to retrieve the next page.
  *   `regionCode` (*type:* `String.t`, *default:* `nil`) - Optional. The ISO_3166-1 alpha-2 code of the country/region corresponding to the location provided in the request. This field might be omitted from the response if the location provided in the request resides in a disputed territory.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :hourlyForecasts => list(GoogleApi.AirQuality.V1.Model.HourlyForecast.t()) | nil,
          :nextPageToken => String.t() | nil,
          :regionCode => String.t() | nil
        }

  field(:hourlyForecasts, as: GoogleApi.AirQuality.V1.Model.HourlyForecast, type: :list)
  field(:nextPageToken)
  field(:regionCode)
end

defimpl Poison.Decoder, for: GoogleApi.AirQuality.V1.Model.LookupForecastResponse do
  def decode(value, options) do
    GoogleApi.AirQuality.V1.Model.LookupForecastResponse.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.AirQuality.V1.Model.LookupForecastResponse do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
