# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudControlsPartner.V1.Model.EkmConnection do
  @moduledoc """
  Details about the EKM connection

  ## Attributes

  *   `connectionError` (*type:* `GoogleApi.CloudControlsPartner.V1.Model.ConnectionError.t`, *default:* `nil`) - The connection error that occurred if any
  *   `connectionName` (*type:* `String.t`, *default:* `nil`) - Resource name of the EKM connection in the format: projects/{project}/locations/{location}/ekmConnections/{ekm_connection}
  *   `connectionState` (*type:* `String.t`, *default:* `nil`) - Output only. The connection state
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :connectionError => GoogleApi.CloudControlsPartner.V1.Model.ConnectionError.t() | nil,
          :connectionName => String.t() | nil,
          :connectionState => String.t() | nil
        }

  field(:connectionError, as: GoogleApi.CloudControlsPartner.V1.Model.ConnectionError)
  field(:connectionName)
  field(:connectionState)
end

defimpl Poison.Decoder, for: GoogleApi.CloudControlsPartner.V1.Model.EkmConnection do
  def decode(value, options) do
    GoogleApi.CloudControlsPartner.V1.Model.EkmConnection.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudControlsPartner.V1.Model.EkmConnection do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
