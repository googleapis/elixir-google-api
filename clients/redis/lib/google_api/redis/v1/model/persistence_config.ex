# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Redis.V1.Model.PersistenceConfig do
  @moduledoc """
  Configuration of the persistence functionality.

  ## Attributes

  *   `persistenceMode` (*type:* `String.t`, *default:* `nil`) - Optional. Controls whether Persistence features are enabled. If not provided, the existing value will be used.
  *   `rdbNextSnapshotTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. The next time that a snapshot attempt is scheduled to occur.
  *   `rdbSnapshotPeriod` (*type:* `String.t`, *default:* `nil`) - Optional. Period between RDB snapshots. Snapshots will be attempted every period starting from the provided snapshot start time. For example, a start time of 01/01/2033 06:45 and SIX_HOURS snapshot period will do nothing until 01/01/2033, and then trigger snapshots every day at 06:45, 12:45, 18:45, and 00:45 the next day, and so on. If not provided, TWENTY_FOUR_HOURS will be used as default.
  *   `rdbSnapshotStartTime` (*type:* `DateTime.t`, *default:* `nil`) - Optional. Date and time that the first snapshot was/will be attempted, and to which future snapshots will be aligned. If not provided, the current time will be used.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :persistenceMode => String.t() | nil,
          :rdbNextSnapshotTime => DateTime.t() | nil,
          :rdbSnapshotPeriod => String.t() | nil,
          :rdbSnapshotStartTime => DateTime.t() | nil
        }

  field(:persistenceMode)
  field(:rdbNextSnapshotTime, as: DateTime)
  field(:rdbSnapshotPeriod)
  field(:rdbSnapshotStartTime, as: DateTime)
end

defimpl Poison.Decoder, for: GoogleApi.Redis.V1.Model.PersistenceConfig do
  def decode(value, options) do
    GoogleApi.Redis.V1.Model.PersistenceConfig.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Redis.V1.Model.PersistenceConfig do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
