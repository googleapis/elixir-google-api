# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Redis.V1.Model.ObservabilityMetricData do
  @moduledoc """


  ## Attributes

  *   `aggregationType` (*type:* `String.t`, *default:* `nil`) - Required. Type of aggregation performed on the metric.
  *   `metricType` (*type:* `String.t`, *default:* `nil`) - Required. Type of metric like CPU, Memory, etc.
  *   `observationTime` (*type:* `DateTime.t`, *default:* `nil`) - Required. The time the metric value was observed.
  *   `resourceName` (*type:* `String.t`, *default:* `nil`) - Required. Database resource name associated with the signal. Resource name to follow CAIS resource_name format as noted here go/condor-common-datamodel
  *   `value` (*type:* `GoogleApi.Redis.V1.Model.TypedValue.t`, *default:* `nil`) - Required. Value of the metric type.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :aggregationType => String.t() | nil,
          :metricType => String.t() | nil,
          :observationTime => DateTime.t() | nil,
          :resourceName => String.t() | nil,
          :value => GoogleApi.Redis.V1.Model.TypedValue.t() | nil
        }

  field(:aggregationType)
  field(:metricType)
  field(:observationTime, as: DateTime)
  field(:resourceName)
  field(:value, as: GoogleApi.Redis.V1.Model.TypedValue)
end

defimpl Poison.Decoder, for: GoogleApi.Redis.V1.Model.ObservabilityMetricData do
  def decode(value, options) do
    GoogleApi.Redis.V1.Model.ObservabilityMetricData.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Redis.V1.Model.ObservabilityMetricData do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
