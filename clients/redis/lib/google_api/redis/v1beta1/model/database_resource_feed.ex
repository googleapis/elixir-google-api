# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Redis.V1beta1.Model.DatabaseResourceFeed do
  @moduledoc """
  DatabaseResourceFeed is the top level proto to be used to ingest different database resource level events into Condor platform.

  ## Attributes

  *   `feedTimestamp` (*type:* `DateTime.t`, *default:* `nil`) - Required. Timestamp when feed is generated.
  *   `feedType` (*type:* `String.t`, *default:* `nil`) - Required. Type feed to be ingested into condor
  *   `observabilityMetricData` (*type:* `GoogleApi.Redis.V1beta1.Model.ObservabilityMetricData.t`, *default:* `nil`) - 
  *   `recommendationSignalData` (*type:* `GoogleApi.Redis.V1beta1.Model.DatabaseResourceRecommendationSignalData.t`, *default:* `nil`) - 
  *   `resourceHealthSignalData` (*type:* `GoogleApi.Redis.V1beta1.Model.DatabaseResourceHealthSignalData.t`, *default:* `nil`) - 
  *   `resourceId` (*type:* `GoogleApi.Redis.V1beta1.Model.DatabaseResourceId.t`, *default:* `nil`) - Primary key associated with the Resource. resource_id is available in individual feed level as well.
  *   `resourceMetadata` (*type:* `GoogleApi.Redis.V1beta1.Model.DatabaseResourceMetadata.t`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :feedTimestamp => DateTime.t() | nil,
          :feedType => String.t() | nil,
          :observabilityMetricData =>
            GoogleApi.Redis.V1beta1.Model.ObservabilityMetricData.t() | nil,
          :recommendationSignalData =>
            GoogleApi.Redis.V1beta1.Model.DatabaseResourceRecommendationSignalData.t() | nil,
          :resourceHealthSignalData =>
            GoogleApi.Redis.V1beta1.Model.DatabaseResourceHealthSignalData.t() | nil,
          :resourceId => GoogleApi.Redis.V1beta1.Model.DatabaseResourceId.t() | nil,
          :resourceMetadata => GoogleApi.Redis.V1beta1.Model.DatabaseResourceMetadata.t() | nil
        }

  field(:feedTimestamp, as: DateTime)
  field(:feedType)
  field(:observabilityMetricData, as: GoogleApi.Redis.V1beta1.Model.ObservabilityMetricData)

  field(:recommendationSignalData,
    as: GoogleApi.Redis.V1beta1.Model.DatabaseResourceRecommendationSignalData
  )

  field(:resourceHealthSignalData,
    as: GoogleApi.Redis.V1beta1.Model.DatabaseResourceHealthSignalData
  )

  field(:resourceId, as: GoogleApi.Redis.V1beta1.Model.DatabaseResourceId)
  field(:resourceMetadata, as: GoogleApi.Redis.V1beta1.Model.DatabaseResourceMetadata)
end

defimpl Poison.Decoder, for: GoogleApi.Redis.V1beta1.Model.DatabaseResourceFeed do
  def decode(value, options) do
    GoogleApi.Redis.V1beta1.Model.DatabaseResourceFeed.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Redis.V1beta1.Model.DatabaseResourceFeed do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
