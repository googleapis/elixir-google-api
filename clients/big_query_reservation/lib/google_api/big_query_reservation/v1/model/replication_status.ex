# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.BigQueryReservation.V1.Model.ReplicationStatus do
  @moduledoc """
  Disaster Recovery(DR) replication status of the reservation.

  ## Attributes

  *   `error` (*type:* `GoogleApi.BigQueryReservation.V1.Model.Status.t`, *default:* `nil`) - Output only. The last error encountered while trying to replicate changes from the primary to the secondary. This field is only available if the replication has not succeeded since.
  *   `lastErrorTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. The time at which the last error was encountered while trying to replicate changes from the primary to the secondary. This field is only available if the replication has not succeeded since.
  *   `lastReplicationTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. A timestamp corresponding to the last change on the primary that was successfully replicated to the secondary.
  *   `softFailoverStartTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. The time at which a soft failover for the reservation and its associated datasets was initiated. After this field is set, all subsequent changes to the reservation will be rejected unless a hard failover overrides this operation. This field will be cleared once the failover is complete.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :error => GoogleApi.BigQueryReservation.V1.Model.Status.t() | nil,
          :lastErrorTime => DateTime.t() | nil,
          :lastReplicationTime => DateTime.t() | nil,
          :softFailoverStartTime => DateTime.t() | nil
        }

  field(:error, as: GoogleApi.BigQueryReservation.V1.Model.Status)
  field(:lastErrorTime, as: DateTime)
  field(:lastReplicationTime, as: DateTime)
  field(:softFailoverStartTime, as: DateTime)
end

defimpl Poison.Decoder, for: GoogleApi.BigQueryReservation.V1.Model.ReplicationStatus do
  def decode(value, options) do
    GoogleApi.BigQueryReservation.V1.Model.ReplicationStatus.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.BigQueryReservation.V1.Model.ReplicationStatus do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
