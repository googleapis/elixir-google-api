# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1ApiProxy do
  @moduledoc """
  Metadata describing the API proxy

  ## Attributes

  *   `labels` (*type:* `map()`, *default:* `nil`) - User labels applied to this API Proxy.
  *   `latestRevisionId` (*type:* `String.t`, *default:* `nil`) - Output only. The id of the most recently created revision for this api proxy.
  *   `metaData` (*type:* `GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1EntityMetadata.t`, *default:* `nil`) - Output only. Metadata describing the API proxy.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Output only. Name of the API proxy.
  *   `revision` (*type:* `list(String.t)`, *default:* `nil`) - Output only. List of revisons defined for the API proxy.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :labels => map() | nil,
          :latestRevisionId => String.t() | nil,
          :metaData => GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1EntityMetadata.t() | nil,
          :name => String.t() | nil,
          :revision => list(String.t()) | nil
        }

  field(:labels, type: :map)
  field(:latestRevisionId)
  field(:metaData, as: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1EntityMetadata)
  field(:name)
  field(:revision, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1ApiProxy do
  def decode(value, options) do
    GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1ApiProxy.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1ApiProxy do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
