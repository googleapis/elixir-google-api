# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1RuntimeConfig do
  @moduledoc """
  Runtime configuration for the organization. Response for GetRuntimeConfig.

  ## Attributes

  *   `analyticsBucket` (*type:* `String.t`, *default:* `nil`) - Cloud Storage bucket used for uploading Analytics records.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Name of the resource in the following format: `organizations/{org}/runtimeConfig`.
  *   `tenantProjectId` (*type:* `String.t`, *default:* `nil`) - Output only. Tenant project ID associated with the Apigee organization. The tenant project is used to host Google-managed resources that are dedicated to this Apigee organization. Clients have limited access to resources within the tenant project used to support Apigee runtime instances. Access to the tenant project is managed using SetSyncAuthorization. It can be empty if the tenant project hasn't been created yet.
  *   `traceBucket` (*type:* `String.t`, *default:* `nil`) - Cloud Storage bucket used for uploading Trace records.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :analyticsBucket => String.t() | nil,
          :name => String.t() | nil,
          :tenantProjectId => String.t() | nil,
          :traceBucket => String.t() | nil
        }

  field(:analyticsBucket)
  field(:name)
  field(:tenantProjectId)
  field(:traceBucket)
end

defimpl Poison.Decoder, for: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1RuntimeConfig do
  def decode(value, options) do
    GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1RuntimeConfig.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1RuntimeConfig do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
