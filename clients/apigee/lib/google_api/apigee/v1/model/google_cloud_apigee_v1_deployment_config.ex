# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1DeploymentConfig do
  @moduledoc """
  NEXT ID: 9

  ## Attributes

  *   `attributes` (*type:* `map()`, *default:* `nil`) - Additional key-value metadata for the deployment.
  *   `basePath` (*type:* `String.t`, *default:* `nil`) - Base path where the application will be hosted. Defaults to "/".
  *   `location` (*type:* `String.t`, *default:* `nil`) - Location of the API proxy bundle as a URI.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Name of the API or shared flow revision to be deployed in the following format: `organizations/{org}/apis/{api}/revisions/{rev}` or `organizations/{org}/sharedflows/{sharedflow}/revisions/{rev}`
  *   `proxyUid` (*type:* `String.t`, *default:* `nil`) - Unique ID of the API proxy revision.
  *   `serviceAccount` (*type:* `String.t`, *default:* `nil`) - The service account identity associated with this deployment. If non-empty, will be in the following format: `projects/-/serviceAccounts/{account_email}`
  *   `uid` (*type:* `String.t`, *default:* `nil`) - Unique ID. The ID will only change if the deployment is deleted and recreated.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :attributes => map() | nil,
          :basePath => String.t() | nil,
          :location => String.t() | nil,
          :name => String.t() | nil,
          :proxyUid => String.t() | nil,
          :serviceAccount => String.t() | nil,
          :uid => String.t() | nil
        }

  field(:attributes, type: :map)
  field(:basePath)
  field(:location)
  field(:name)
  field(:proxyUid)
  field(:serviceAccount)
  field(:uid)
end

defimpl Poison.Decoder, for: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1DeploymentConfig do
  def decode(value, options) do
    GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1DeploymentConfig.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1DeploymentConfig do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
