# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1ApiDebugSession do
  @moduledoc """
  Session carries the debug session id and its creation time.

  ## Attributes

  *   `apiProxyRevisionId` (*type:* `String.t`, *default:* `nil`) - The revision ID of the deployed API proxy.
  *   `createTime` (*type:* `DateTime.t`, *default:* `nil`) - The first transaction creation timestamp in millisecond, recorded by UAP.
  *   `environmentId` (*type:* `String.t`, *default:* `nil`) - The environment ID of the deployed API proxy.
  *   `id` (*type:* `String.t`, *default:* `nil`) - The debug session ID.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :apiProxyRevisionId => String.t() | nil,
          :createTime => DateTime.t() | nil,
          :environmentId => String.t() | nil,
          :id => String.t() | nil
        }

  field(:apiProxyRevisionId)
  field(:createTime, as: DateTime)
  field(:environmentId)
  field(:id)
end

defimpl Poison.Decoder, for: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1ApiDebugSession do
  def decode(value, options) do
    GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1ApiDebugSession.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Apigee.V1.Model.GoogleCloudApigeeV1ApiDebugSession do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
