# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.File.V1.Model.PerformanceLimits do
  @moduledoc """
  The enforced performance limits, calculated from the instance's performance configuration.

  ## Attributes

  *   `maxReadIops` (*type:* `String.t`, *default:* `nil`) - Output only. The max read IOPS.
  *   `maxReadThroughputBps` (*type:* `String.t`, *default:* `nil`) - Output only. The max read throughput in bytes per second.
  *   `maxWriteIops` (*type:* `String.t`, *default:* `nil`) - Output only. The max write IOPS.
  *   `maxWriteThroughputBps` (*type:* `String.t`, *default:* `nil`) - Output only. The max write throughput in bytes per second.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :maxReadIops => String.t() | nil,
          :maxReadThroughputBps => String.t() | nil,
          :maxWriteIops => String.t() | nil,
          :maxWriteThroughputBps => String.t() | nil
        }

  field(:maxReadIops)
  field(:maxReadThroughputBps)
  field(:maxWriteIops)
  field(:maxWriteThroughputBps)
end

defimpl Poison.Decoder, for: GoogleApi.File.V1.Model.PerformanceLimits do
  def decode(value, options) do
    GoogleApi.File.V1.Model.PerformanceLimits.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.File.V1.Model.PerformanceLimits do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
