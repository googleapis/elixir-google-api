# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Integrations.V1.Model.EnterpriseCrmEventbusProtoEventExecutionSnapshot do
  @moduledoc """
  Contains the snapshot of the event execution for a given checkpoint. Next available id: 15

  ## Attributes

  *   `checkpointTaskNumber` (*type:* `String.t`, *default:* `nil`) - Indicates "right after which checkpoint task's execution" this snapshot is taken.
  *   `clientId` (*type:* `String.t`, *default:* `nil`) - Client that the execution snapshot is associated to.
  *   `conditionResults` (*type:* `list(GoogleApi.Integrations.V1.Model.EnterpriseCrmEventbusProtoConditionResult.t)`, *default:* `nil`) - All of the computed conditions that been calculated.
  *   `diffParams` (*type:* `GoogleApi.Integrations.V1.Model.EnterpriseCrmEventbusProtoEventParameters.t`, *default:* `nil`) - The parameters in Event object that differs from last snapshot.
  *   `eventExecutionInfoId` (*type:* `String.t`, *default:* `nil`) - Points to the event execution info this snapshot belongs to.
  *   `eventExecutionSnapshotId` (*type:* `String.t`, *default:* `nil`) - Auto-generated. Used as primary key for EventExecutionSnapshots table.
  *   `eventExecutionSnapshotMetadata` (*type:* `GoogleApi.Integrations.V1.Model.EnterpriseCrmEventbusProtoEventExecutionSnapshotEventExecutionSnapshotMetadata.t`, *default:* `nil`) - 
  *   `eventParams` (*type:* `GoogleApi.Integrations.V1.Model.EnterpriseCrmEventbusProtoEventParameters.t`, *default:* `nil`) - The parameters in Event object.
  *   `exceedMaxSize` (*type:* `boolean()`, *default:* `nil`) - indicate whether snapshot exceeded maximum size before clean up
  *   `snapshotTime` (*type:* `String.t`, *default:* `nil`) - Indicates when this snapshot is taken.
  *   `taskExecutionDetails` (*type:* `list(GoogleApi.Integrations.V1.Model.EnterpriseCrmEventbusProtoTaskExecutionDetails.t)`, *default:* `nil`) - All of the task execution details at the given point of time.
  *   `taskName` (*type:* `String.t`, *default:* `nil`) - The task name associated with this snapshot. Could be empty.
  *   `workflowName` (*type:* `String.t`, *default:* `nil`) - Name of the workflow this event execution snapshot belongs to.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :checkpointTaskNumber => String.t() | nil,
          :clientId => String.t() | nil,
          :conditionResults =>
            list(GoogleApi.Integrations.V1.Model.EnterpriseCrmEventbusProtoConditionResult.t())
            | nil,
          :diffParams =>
            GoogleApi.Integrations.V1.Model.EnterpriseCrmEventbusProtoEventParameters.t() | nil,
          :eventExecutionInfoId => String.t() | nil,
          :eventExecutionSnapshotId => String.t() | nil,
          :eventExecutionSnapshotMetadata =>
            GoogleApi.Integrations.V1.Model.EnterpriseCrmEventbusProtoEventExecutionSnapshotEventExecutionSnapshotMetadata.t()
            | nil,
          :eventParams =>
            GoogleApi.Integrations.V1.Model.EnterpriseCrmEventbusProtoEventParameters.t() | nil,
          :exceedMaxSize => boolean() | nil,
          :snapshotTime => String.t() | nil,
          :taskExecutionDetails =>
            list(
              GoogleApi.Integrations.V1.Model.EnterpriseCrmEventbusProtoTaskExecutionDetails.t()
            )
            | nil,
          :taskName => String.t() | nil,
          :workflowName => String.t() | nil
        }

  field(:checkpointTaskNumber)
  field(:clientId)

  field(:conditionResults,
    as: GoogleApi.Integrations.V1.Model.EnterpriseCrmEventbusProtoConditionResult,
    type: :list
  )

  field(:diffParams, as: GoogleApi.Integrations.V1.Model.EnterpriseCrmEventbusProtoEventParameters)

  field(:eventExecutionInfoId)
  field(:eventExecutionSnapshotId)

  field(:eventExecutionSnapshotMetadata,
    as:
      GoogleApi.Integrations.V1.Model.EnterpriseCrmEventbusProtoEventExecutionSnapshotEventExecutionSnapshotMetadata
  )

  field(:eventParams,
    as: GoogleApi.Integrations.V1.Model.EnterpriseCrmEventbusProtoEventParameters
  )

  field(:exceedMaxSize)
  field(:snapshotTime)

  field(:taskExecutionDetails,
    as: GoogleApi.Integrations.V1.Model.EnterpriseCrmEventbusProtoTaskExecutionDetails,
    type: :list
  )

  field(:taskName)
  field(:workflowName)
end

defimpl Poison.Decoder,
  for: GoogleApi.Integrations.V1.Model.EnterpriseCrmEventbusProtoEventExecutionSnapshot do
  def decode(value, options) do
    GoogleApi.Integrations.V1.Model.EnterpriseCrmEventbusProtoEventExecutionSnapshot.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.Integrations.V1.Model.EnterpriseCrmEventbusProtoEventExecutionSnapshot do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
