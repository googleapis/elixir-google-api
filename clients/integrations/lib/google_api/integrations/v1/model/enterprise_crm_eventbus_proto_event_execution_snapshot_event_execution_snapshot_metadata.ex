# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Integrations.V1.Model.EnterpriseCrmEventbusProtoEventExecutionSnapshotEventExecutionSnapshotMetadata do
  @moduledoc """


  ## Attributes

  *   `ancestorIterationNumbers` (*type:* `list(String.t)`, *default:* `nil`) - Ancestor iteration number for the task(it will only be non-empty if the task is under 'private workflow')
  *   `ancestorTaskNumbers` (*type:* `list(String.t)`, *default:* `nil`) - Ancestor task number for the task(it will only be non-empty if the task is under 'private workflow')
  *   `eventAttemptNum` (*type:* `integer()`, *default:* `nil`) - the event attempt number this snapshot belongs to.
  *   `integrationName` (*type:* `String.t`, *default:* `nil`) - The direct integration which the event execution snapshots belongs to
  *   `taskAttemptNum` (*type:* `integer()`, *default:* `nil`) - the task attempt number this snapshot belongs to. Could be empty.
  *   `taskLabel` (*type:* `String.t`, *default:* `nil`) - the task label associated with this snapshot. Could be empty.
  *   `taskName` (*type:* `String.t`, *default:* `nil`) - the task name associated with this snapshot. Could be empty.
  *   `taskNumber` (*type:* `String.t`, *default:* `nil`) - The task number associated with this snapshot. Could be empty.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :ancestorIterationNumbers => list(String.t()) | nil,
          :ancestorTaskNumbers => list(String.t()) | nil,
          :eventAttemptNum => integer() | nil,
          :integrationName => String.t() | nil,
          :taskAttemptNum => integer() | nil,
          :taskLabel => String.t() | nil,
          :taskName => String.t() | nil,
          :taskNumber => String.t() | nil
        }

  field(:ancestorIterationNumbers, type: :list)
  field(:ancestorTaskNumbers, type: :list)
  field(:eventAttemptNum)
  field(:integrationName)
  field(:taskAttemptNum)
  field(:taskLabel)
  field(:taskName)
  field(:taskNumber)
end

defimpl Poison.Decoder,
  for:
    GoogleApi.Integrations.V1.Model.EnterpriseCrmEventbusProtoEventExecutionSnapshotEventExecutionSnapshotMetadata do
  def decode(value, options) do
    GoogleApi.Integrations.V1.Model.EnterpriseCrmEventbusProtoEventExecutionSnapshotEventExecutionSnapshotMetadata.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for:
    GoogleApi.Integrations.V1.Model.EnterpriseCrmEventbusProtoEventExecutionSnapshotEventExecutionSnapshotMetadata do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
