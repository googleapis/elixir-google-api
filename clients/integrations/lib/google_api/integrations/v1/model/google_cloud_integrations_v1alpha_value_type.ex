# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Integrations.V1.Model.GoogleCloudIntegrationsV1alphaValueType do
  @moduledoc """
  The type of the parameter.

  ## Attributes

  *   `booleanArray` (*type:* `GoogleApi.Integrations.V1.Model.GoogleCloudIntegrationsV1alphaBooleanParameterArray.t`, *default:* `nil`) - Boolean Array.
  *   `booleanValue` (*type:* `boolean()`, *default:* `nil`) - Boolean.
  *   `doubleArray` (*type:* `GoogleApi.Integrations.V1.Model.GoogleCloudIntegrationsV1alphaDoubleParameterArray.t`, *default:* `nil`) - Double Number Array.
  *   `doubleValue` (*type:* `float()`, *default:* `nil`) - Double Number.
  *   `intArray` (*type:* `GoogleApi.Integrations.V1.Model.GoogleCloudIntegrationsV1alphaIntParameterArray.t`, *default:* `nil`) - Integer Array.
  *   `intValue` (*type:* `String.t`, *default:* `nil`) - Integer.
  *   `jsonValue` (*type:* `String.t`, *default:* `nil`) - Json.
  *   `stringArray` (*type:* `GoogleApi.Integrations.V1.Model.GoogleCloudIntegrationsV1alphaStringParameterArray.t`, *default:* `nil`) - String Array.
  *   `stringValue` (*type:* `String.t`, *default:* `nil`) - String.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :booleanArray =>
            GoogleApi.Integrations.V1.Model.GoogleCloudIntegrationsV1alphaBooleanParameterArray.t()
            | nil,
          :booleanValue => boolean() | nil,
          :doubleArray =>
            GoogleApi.Integrations.V1.Model.GoogleCloudIntegrationsV1alphaDoubleParameterArray.t()
            | nil,
          :doubleValue => float() | nil,
          :intArray =>
            GoogleApi.Integrations.V1.Model.GoogleCloudIntegrationsV1alphaIntParameterArray.t()
            | nil,
          :intValue => String.t() | nil,
          :jsonValue => String.t() | nil,
          :stringArray =>
            GoogleApi.Integrations.V1.Model.GoogleCloudIntegrationsV1alphaStringParameterArray.t()
            | nil,
          :stringValue => String.t() | nil
        }

  field(:booleanArray,
    as: GoogleApi.Integrations.V1.Model.GoogleCloudIntegrationsV1alphaBooleanParameterArray
  )

  field(:booleanValue)

  field(:doubleArray,
    as: GoogleApi.Integrations.V1.Model.GoogleCloudIntegrationsV1alphaDoubleParameterArray
  )

  field(:doubleValue)

  field(:intArray,
    as: GoogleApi.Integrations.V1.Model.GoogleCloudIntegrationsV1alphaIntParameterArray
  )

  field(:intValue)
  field(:jsonValue)

  field(:stringArray,
    as: GoogleApi.Integrations.V1.Model.GoogleCloudIntegrationsV1alphaStringParameterArray
  )

  field(:stringValue)
end

defimpl Poison.Decoder,
  for: GoogleApi.Integrations.V1.Model.GoogleCloudIntegrationsV1alphaValueType do
  def decode(value, options) do
    GoogleApi.Integrations.V1.Model.GoogleCloudIntegrationsV1alphaValueType.decode(value, options)
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.Integrations.V1.Model.GoogleCloudIntegrationsV1alphaValueType do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
