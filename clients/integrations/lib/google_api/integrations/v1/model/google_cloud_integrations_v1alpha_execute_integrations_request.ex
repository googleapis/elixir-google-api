# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Integrations.V1.Model.GoogleCloudIntegrationsV1alphaExecuteIntegrationsRequest do
  @moduledoc """
  The request for executing an integration.

  ## Attributes

  *   `doNotPropagateError` (*type:* `boolean()`, *default:* `nil`) - Optional. Flag to determine how to should propagate errors. If this flag is set to be true, it will not throw an exception. Instead, it will return a {@link ExecuteIntegrationsResponse} with an execution id and error messages as PostWithTriggerIdExecutionException in {@link EventParameters}. The flag is set to be false by default.
  *   `executionId` (*type:* `String.t`, *default:* `nil`) - Optional. The id of the ON_HOLD execution to be resumed.
  *   `inputParameters` (*type:* `%{optional(String.t) => GoogleApi.Integrations.V1.Model.GoogleCloudIntegrationsV1alphaValueType.t}`, *default:* `nil`) - Optional. Input parameters used by integration execution.
  *   `parameterEntries` (*type:* `list(GoogleApi.Integrations.V1.Model.EnterpriseCrmFrontendsEventbusProtoParameterEntry.t)`, *default:* `nil`) - Optional. Parameters are a part of Event and can be used to communicate between different tasks that are part of the same integration execution.
  *   `parameters` (*type:* `GoogleApi.Integrations.V1.Model.EnterpriseCrmFrontendsEventbusProtoEventParameters.t`, *default:* `nil`) - Optional. Passed in as parameters to each integration execution. Redacted
  *   `requestId` (*type:* `String.t`, *default:* `nil`) - Optional. This is used to de-dup incoming request: if the duplicate request was detected, the response from the previous execution is returned.
  *   `triggerId` (*type:* `String.t`, *default:* `nil`) - Required. Matched against all {@link TriggerConfig}s across all integrations. i.e. TriggerConfig.trigger_id.equals(trigger_id). The trigger_id is in the format of `api_trigger/TRIGGER_NAME`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :doNotPropagateError => boolean() | nil,
          :executionId => String.t() | nil,
          :inputParameters =>
            %{
              optional(String.t()) =>
                GoogleApi.Integrations.V1.Model.GoogleCloudIntegrationsV1alphaValueType.t()
            }
            | nil,
          :parameterEntries =>
            list(
              GoogleApi.Integrations.V1.Model.EnterpriseCrmFrontendsEventbusProtoParameterEntry.t()
            )
            | nil,
          :parameters =>
            GoogleApi.Integrations.V1.Model.EnterpriseCrmFrontendsEventbusProtoEventParameters.t()
            | nil,
          :requestId => String.t() | nil,
          :triggerId => String.t() | nil
        }

  field(:doNotPropagateError)
  field(:executionId)

  field(:inputParameters,
    as: GoogleApi.Integrations.V1.Model.GoogleCloudIntegrationsV1alphaValueType,
    type: :map
  )

  field(:parameterEntries,
    as: GoogleApi.Integrations.V1.Model.EnterpriseCrmFrontendsEventbusProtoParameterEntry,
    type: :list
  )

  field(:parameters,
    as: GoogleApi.Integrations.V1.Model.EnterpriseCrmFrontendsEventbusProtoEventParameters
  )

  field(:requestId)
  field(:triggerId)
end

defimpl Poison.Decoder,
  for: GoogleApi.Integrations.V1.Model.GoogleCloudIntegrationsV1alphaExecuteIntegrationsRequest do
  def decode(value, options) do
    GoogleApi.Integrations.V1.Model.GoogleCloudIntegrationsV1alphaExecuteIntegrationsRequest.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.Integrations.V1.Model.GoogleCloudIntegrationsV1alphaExecuteIntegrationsRequest do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
