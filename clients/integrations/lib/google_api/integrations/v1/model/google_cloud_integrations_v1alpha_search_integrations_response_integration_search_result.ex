# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Integrations.V1.Model.GoogleCloudIntegrationsV1alphaSearchIntegrationsResponseIntegrationSearchResult do
  @moduledoc """
  The integration search result with integration level information.

  ## Attributes

  *   `createTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. The create time of the integration version.
  *   `creator` (*type:* `String.t`, *default:* `nil`) - The creator of the integration version.
  *   `description` (*type:* `String.t`, *default:* `nil`) - The description of the integration version.
  *   `id` (*type:* `String.t`, *default:* `nil`) - The integration id.
  *   `name` (*type:* `String.t`, *default:* `nil`) - The integration document metadata.
  *   `region` (*type:* `String.t`, *default:* `nil`) - The region of the integration version.
  *   `status` (*type:* `String.t`, *default:* `nil`) - Output only. The status of the integration version.
  *   `version` (*type:* `String.t`, *default:* `nil`) - The version of the integration version.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :createTime => DateTime.t() | nil,
          :creator => String.t() | nil,
          :description => String.t() | nil,
          :id => String.t() | nil,
          :name => String.t() | nil,
          :region => String.t() | nil,
          :status => String.t() | nil,
          :version => String.t() | nil
        }

  field(:createTime, as: DateTime)
  field(:creator)
  field(:description)
  field(:id)
  field(:name)
  field(:region)
  field(:status)
  field(:version)
end

defimpl Poison.Decoder,
  for:
    GoogleApi.Integrations.V1.Model.GoogleCloudIntegrationsV1alphaSearchIntegrationsResponseIntegrationSearchResult do
  def decode(value, options) do
    GoogleApi.Integrations.V1.Model.GoogleCloudIntegrationsV1alphaSearchIntegrationsResponseIntegrationSearchResult.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for:
    GoogleApi.Integrations.V1.Model.GoogleCloudIntegrationsV1alphaSearchIntegrationsResponseIntegrationSearchResult do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
