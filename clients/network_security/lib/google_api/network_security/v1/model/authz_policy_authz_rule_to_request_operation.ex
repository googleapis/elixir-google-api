# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.NetworkSecurity.V1.Model.AuthzPolicyAuthzRuleToRequestOperation do
  @moduledoc """
  Describes properties of one or more targets of a request.

  ## Attributes

  *   `headerSet` (*type:* `GoogleApi.NetworkSecurity.V1.Model.AuthzPolicyAuthzRuleToRequestOperationHeaderSet.t`, *default:* `nil`) - Optional. A list of headers to match against in http header.
  *   `hosts` (*type:* `list(GoogleApi.NetworkSecurity.V1.Model.AuthzPolicyAuthzRuleStringMatch.t)`, *default:* `nil`) - Optional. A list of HTTP Hosts to match against. The match can be one of exact, prefix, suffix, or contains (substring match). Matches are always case sensitive unless the ignoreCase is set. Limited to 5 matches.
  *   `methods` (*type:* `list(String.t)`, *default:* `nil`) - Optional. A list of HTTP methods to match against. Each entry must be a valid HTTP method name (GET, PUT, POST, HEAD, PATCH, DELETE, OPTIONS). It only allows exact match and is always case sensitive.
  *   `paths` (*type:* `list(GoogleApi.NetworkSecurity.V1.Model.AuthzPolicyAuthzRuleStringMatch.t)`, *default:* `nil`) - Optional. A list of paths to match against. The match can be one of exact, prefix, suffix, or contains (substring match). Matches are always case sensitive unless the ignoreCase is set. Limited to 5 matches. Note that this path match includes the query parameters. For gRPC services, this should be a fully-qualified name of the form /package.service/method.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :headerSet =>
            GoogleApi.NetworkSecurity.V1.Model.AuthzPolicyAuthzRuleToRequestOperationHeaderSet.t()
            | nil,
          :hosts =>
            list(GoogleApi.NetworkSecurity.V1.Model.AuthzPolicyAuthzRuleStringMatch.t()) | nil,
          :methods => list(String.t()) | nil,
          :paths =>
            list(GoogleApi.NetworkSecurity.V1.Model.AuthzPolicyAuthzRuleStringMatch.t()) | nil
        }

  field(:headerSet,
    as: GoogleApi.NetworkSecurity.V1.Model.AuthzPolicyAuthzRuleToRequestOperationHeaderSet
  )

  field(:hosts,
    as: GoogleApi.NetworkSecurity.V1.Model.AuthzPolicyAuthzRuleStringMatch,
    type: :list
  )

  field(:methods, type: :list)

  field(:paths,
    as: GoogleApi.NetworkSecurity.V1.Model.AuthzPolicyAuthzRuleStringMatch,
    type: :list
  )
end

defimpl Poison.Decoder,
  for: GoogleApi.NetworkSecurity.V1.Model.AuthzPolicyAuthzRuleToRequestOperation do
  def decode(value, options) do
    GoogleApi.NetworkSecurity.V1.Model.AuthzPolicyAuthzRuleToRequestOperation.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.NetworkSecurity.V1.Model.AuthzPolicyAuthzRuleToRequestOperation do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
