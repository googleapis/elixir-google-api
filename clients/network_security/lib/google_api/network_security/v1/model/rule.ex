# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.NetworkSecurity.V1.Model.Rule do
  @moduledoc """
  Specification of rules.

  ## Attributes

  *   `destinations` (*type:* `list(GoogleApi.NetworkSecurity.V1.Model.Destination.t)`, *default:* `nil`) - Optional. List of attributes for the traffic destination. All of the destinations must match. A destination is a match if a request matches all the specified hosts, ports, methods and headers. If not set, the action specified in the 'action' field will be applied without any rule checks for the destination.
  *   `sources` (*type:* `list(GoogleApi.NetworkSecurity.V1.Model.Source.t)`, *default:* `nil`) - Optional. List of attributes for the traffic source. All of the sources must match. A source is a match if both principals and ip_blocks match. If not set, the action specified in the 'action' field will be applied without any rule checks for the source.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :destinations => list(GoogleApi.NetworkSecurity.V1.Model.Destination.t()) | nil,
          :sources => list(GoogleApi.NetworkSecurity.V1.Model.Source.t()) | nil
        }

  field(:destinations, as: GoogleApi.NetworkSecurity.V1.Model.Destination, type: :list)
  field(:sources, as: GoogleApi.NetworkSecurity.V1.Model.Source, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.NetworkSecurity.V1.Model.Rule do
  def decode(value, options) do
    GoogleApi.NetworkSecurity.V1.Model.Rule.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.NetworkSecurity.V1.Model.Rule do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
