# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.NetworkSecurity.V1.Model.AuthzPolicyAuthzRuleToRequestOperationHeaderSet do
  @moduledoc """
  Describes a set of HTTP headers to match against.

  ## Attributes

  *   `headers` (*type:* `list(GoogleApi.NetworkSecurity.V1.Model.AuthzPolicyAuthzRuleHeaderMatch.t)`, *default:* `nil`) - Required. A list of headers to match against in http header. The match can be one of exact, prefix, suffix, or contains (substring match). The match follows AND semantics which means all the headers must match. Matches are always case sensitive unless the ignoreCase is set. Limited to 5 matches.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :headers =>
            list(GoogleApi.NetworkSecurity.V1.Model.AuthzPolicyAuthzRuleHeaderMatch.t()) | nil
        }

  field(:headers,
    as: GoogleApi.NetworkSecurity.V1.Model.AuthzPolicyAuthzRuleHeaderMatch,
    type: :list
  )
end

defimpl Poison.Decoder,
  for: GoogleApi.NetworkSecurity.V1.Model.AuthzPolicyAuthzRuleToRequestOperationHeaderSet do
  def decode(value, options) do
    GoogleApi.NetworkSecurity.V1.Model.AuthzPolicyAuthzRuleToRequestOperationHeaderSet.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.NetworkSecurity.V1.Model.AuthzPolicyAuthzRuleToRequestOperationHeaderSet do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
