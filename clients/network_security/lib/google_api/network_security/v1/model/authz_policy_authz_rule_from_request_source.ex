# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.NetworkSecurity.V1.Model.AuthzPolicyAuthzRuleFromRequestSource do
  @moduledoc """
  Describes the properties of a single source.

  ## Attributes

  *   `principals` (*type:* `list(GoogleApi.NetworkSecurity.V1.Model.AuthzPolicyAuthzRuleStringMatch.t)`, *default:* `nil`) - Optional. A list of identities derived from the client's certificate. This field will not match on a request unless mutual TLS is enabled for the Forwarding rule or Gateway. Each identity is a string whose value is matched against the URI SAN, or DNS SAN or the subject field in the client's certificate. The match can be exact, prefix, suffix or a substring match. One of exact, prefix, suffix or contains must be specified. Limited to 5 principals.
  *   `resources` (*type:* `list(GoogleApi.NetworkSecurity.V1.Model.AuthzPolicyAuthzRuleRequestResource.t)`, *default:* `nil`) - Optional. A list of resources to match against the resource of the source VM of a request. Limited to 5 resources.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :principals =>
            list(GoogleApi.NetworkSecurity.V1.Model.AuthzPolicyAuthzRuleStringMatch.t()) | nil,
          :resources =>
            list(GoogleApi.NetworkSecurity.V1.Model.AuthzPolicyAuthzRuleRequestResource.t()) | nil
        }

  field(:principals,
    as: GoogleApi.NetworkSecurity.V1.Model.AuthzPolicyAuthzRuleStringMatch,
    type: :list
  )

  field(:resources,
    as: GoogleApi.NetworkSecurity.V1.Model.AuthzPolicyAuthzRuleRequestResource,
    type: :list
  )
end

defimpl Poison.Decoder,
  for: GoogleApi.NetworkSecurity.V1.Model.AuthzPolicyAuthzRuleFromRequestSource do
  def decode(value, options) do
    GoogleApi.NetworkSecurity.V1.Model.AuthzPolicyAuthzRuleFromRequestSource.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.NetworkSecurity.V1.Model.AuthzPolicyAuthzRuleFromRequestSource do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
