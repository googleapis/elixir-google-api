# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.NetworkSecurity.V1.Model.AuthzPolicyAuthzRule do
  @moduledoc """
  Conditions to match against the incoming request.

  ## Attributes

  *   `from` (*type:* `GoogleApi.NetworkSecurity.V1.Model.AuthzPolicyAuthzRuleFrom.t`, *default:* `nil`) - Optional. Describes properties of one or more sources of a request.
  *   `to` (*type:* `GoogleApi.NetworkSecurity.V1.Model.AuthzPolicyAuthzRuleTo.t`, *default:* `nil`) - Optional. Describes properties of one or more targets of a request.
  *   `when` (*type:* `String.t`, *default:* `nil`) - Optional. CEL expression that describes the conditions to be satisfied for the action. The result of the CEL expression is ANDed with the from and to. Refer to the CEL language reference for a list of available attributes.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :from => GoogleApi.NetworkSecurity.V1.Model.AuthzPolicyAuthzRuleFrom.t() | nil,
          :to => GoogleApi.NetworkSecurity.V1.Model.AuthzPolicyAuthzRuleTo.t() | nil,
          :when => String.t() | nil
        }

  field(:from, as: GoogleApi.NetworkSecurity.V1.Model.AuthzPolicyAuthzRuleFrom)
  field(:to, as: GoogleApi.NetworkSecurity.V1.Model.AuthzPolicyAuthzRuleTo)
  field(:when)
end

defimpl Poison.Decoder, for: GoogleApi.NetworkSecurity.V1.Model.AuthzPolicyAuthzRule do
  def decode(value, options) do
    GoogleApi.NetworkSecurity.V1.Model.AuthzPolicyAuthzRule.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.NetworkSecurity.V1.Model.AuthzPolicyAuthzRule do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
