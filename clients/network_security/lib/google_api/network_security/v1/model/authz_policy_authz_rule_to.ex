# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.NetworkSecurity.V1.Model.AuthzPolicyAuthzRuleTo do
  @moduledoc """
  Describes properties of one or more targets of a request.

  ## Attributes

  *   `notOperations` (*type:* `list(GoogleApi.NetworkSecurity.V1.Model.AuthzPolicyAuthzRuleToRequestOperation.t)`, *default:* `nil`) - Optional. Describes the negated properties of the targets of a request. Matches requests for operations that do not match the criteria specified in this field. At least one of operations or notOperations must be specified.
  *   `operations` (*type:* `list(GoogleApi.NetworkSecurity.V1.Model.AuthzPolicyAuthzRuleToRequestOperation.t)`, *default:* `nil`) - Optional. Describes properties of one or more targets of a request. At least one of operations or notOperations must be specified. Limited to 5 operations. A match occurs when ANY operation (in operations or notOperations) matches. Within an operation, the match follows AND semantics across fields and OR semantics within a field, i.e. a match occurs when ANY path matches AND ANY header matches and ANY method matches.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :notOperations =>
            list(GoogleApi.NetworkSecurity.V1.Model.AuthzPolicyAuthzRuleToRequestOperation.t())
            | nil,
          :operations =>
            list(GoogleApi.NetworkSecurity.V1.Model.AuthzPolicyAuthzRuleToRequestOperation.t())
            | nil
        }

  field(:notOperations,
    as: GoogleApi.NetworkSecurity.V1.Model.AuthzPolicyAuthzRuleToRequestOperation,
    type: :list
  )

  field(:operations,
    as: GoogleApi.NetworkSecurity.V1.Model.AuthzPolicyAuthzRuleToRequestOperation,
    type: :list
  )
end

defimpl Poison.Decoder, for: GoogleApi.NetworkSecurity.V1.Model.AuthzPolicyAuthzRuleTo do
  def decode(value, options) do
    GoogleApi.NetworkSecurity.V1.Model.AuthzPolicyAuthzRuleTo.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.NetworkSecurity.V1.Model.AuthzPolicyAuthzRuleTo do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
