# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.NetworkSecurity.V1.Model.AuthzPolicyCustomProvider do
  @moduledoc """
  Allows delegating authorization decisions to Cloud IAP or to Service Extensions.

  ## Attributes

  *   `authzExtension` (*type:* `GoogleApi.NetworkSecurity.V1.Model.AuthzPolicyCustomProviderAuthzExtension.t`, *default:* `nil`) - Optional. Delegate authorization decision to user authored Service Extension. Only one of cloudIap or authzExtension can be specified.
  *   `cloudIap` (*type:* `GoogleApi.NetworkSecurity.V1.Model.AuthzPolicyCustomProviderCloudIap.t`, *default:* `nil`) - Optional. Delegates authorization decisions to Cloud IAP. Applicable only for managed load balancers. Enabling Cloud IAP at the AuthzPolicy level is not compatible with Cloud IAP settings in the BackendService. Enabling IAP in both places will result in request failure. Ensure that IAP is enabled in either the AuthzPolicy or the BackendService but not in both places.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :authzExtension =>
            GoogleApi.NetworkSecurity.V1.Model.AuthzPolicyCustomProviderAuthzExtension.t() | nil,
          :cloudIap =>
            GoogleApi.NetworkSecurity.V1.Model.AuthzPolicyCustomProviderCloudIap.t() | nil
        }

  field(:authzExtension,
    as: GoogleApi.NetworkSecurity.V1.Model.AuthzPolicyCustomProviderAuthzExtension
  )

  field(:cloudIap, as: GoogleApi.NetworkSecurity.V1.Model.AuthzPolicyCustomProviderCloudIap)
end

defimpl Poison.Decoder, for: GoogleApi.NetworkSecurity.V1.Model.AuthzPolicyCustomProvider do
  def decode(value, options) do
    GoogleApi.NetworkSecurity.V1.Model.AuthzPolicyCustomProvider.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.NetworkSecurity.V1.Model.AuthzPolicyCustomProvider do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
