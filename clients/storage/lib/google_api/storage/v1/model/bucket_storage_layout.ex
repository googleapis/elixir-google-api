# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Storage.V1.Model.BucketStorageLayout do
  @moduledoc """
  The storage layout configuration of a bucket.

  ## Attributes

  *   `bucket` (*type:* `String.t`, *default:* `nil`) - The name of the bucket.
  *   `customPlacementConfig` (*type:* `GoogleApi.Storage.V1.Model.BucketStorageLayoutCustomPlacementConfig.t`, *default:* `nil`) - The bucket's custom placement configuration for Custom Dual Regions.
  *   `hierarchicalNamespace` (*type:* `GoogleApi.Storage.V1.Model.BucketStorageLayoutHierarchicalNamespace.t`, *default:* `nil`) - The bucket's hierarchical namespace configuration.
  *   `kind` (*type:* `String.t`, *default:* `storage#storageLayout`) - The kind of item this is. For storage layout, this is always storage#storageLayout.
  *   `location` (*type:* `String.t`, *default:* `nil`) - The location of the bucket.
  *   `locationType` (*type:* `String.t`, *default:* `nil`) - The type of the bucket location.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :bucket => String.t() | nil,
          :customPlacementConfig =>
            GoogleApi.Storage.V1.Model.BucketStorageLayoutCustomPlacementConfig.t() | nil,
          :hierarchicalNamespace =>
            GoogleApi.Storage.V1.Model.BucketStorageLayoutHierarchicalNamespace.t() | nil,
          :kind => String.t() | nil,
          :location => String.t() | nil,
          :locationType => String.t() | nil
        }

  field(:bucket)

  field(:customPlacementConfig,
    as: GoogleApi.Storage.V1.Model.BucketStorageLayoutCustomPlacementConfig
  )

  field(:hierarchicalNamespace,
    as: GoogleApi.Storage.V1.Model.BucketStorageLayoutHierarchicalNamespace
  )

  field(:kind)
  field(:location)
  field(:locationType)
end

defimpl Poison.Decoder, for: GoogleApi.Storage.V1.Model.BucketStorageLayout do
  def decode(value, options) do
    GoogleApi.Storage.V1.Model.BucketStorageLayout.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Storage.V1.Model.BucketStorageLayout do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
