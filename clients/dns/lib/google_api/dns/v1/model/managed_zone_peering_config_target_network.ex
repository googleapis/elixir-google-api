# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.DNS.V1.Model.ManagedZonePeeringConfigTargetNetwork do
  @moduledoc """


  ## Attributes

  *   `deactivateTime` (*type:* `String.t`, *default:* `nil`) - The time at which the zone was deactivated, in RFC 3339 date-time format. An empty string indicates that the peering connection is active. The producer network can deactivate a zone. The zone is automatically deactivated if the producer network that the zone targeted is deleted. Output only.
  *   `kind` (*type:* `String.t`, *default:* `dns#managedZonePeeringConfigTargetNetwork`) - 
  *   `networkUrl` (*type:* `String.t`, *default:* `nil`) - The fully qualified URL of the VPC network to forward queries to. This should be formatted like `https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}`
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :deactivateTime => String.t() | nil,
          :kind => String.t() | nil,
          :networkUrl => String.t() | nil
        }

  field(:deactivateTime)
  field(:kind)
  field(:networkUrl)
end

defimpl Poison.Decoder, for: GoogleApi.DNS.V1.Model.ManagedZonePeeringConfigTargetNetwork do
  def decode(value, options) do
    GoogleApi.DNS.V1.Model.ManagedZonePeeringConfigTargetNetwork.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.DNS.V1.Model.ManagedZonePeeringConfigTargetNetwork do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
