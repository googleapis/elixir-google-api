# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Datastream.V1.Model.DiscoverConnectionProfileResponse do
  @moduledoc """
  Response from a discover request.

  ## Attributes

  *   `mongodbCluster` (*type:* `GoogleApi.Datastream.V1.Model.MongodbCluster.t`, *default:* `nil`) - Enriched MongoDB cluster.
  *   `mysqlRdbms` (*type:* `GoogleApi.Datastream.V1.Model.MysqlRdbms.t`, *default:* `nil`) - Enriched MySQL RDBMS object.
  *   `oracleRdbms` (*type:* `GoogleApi.Datastream.V1.Model.OracleRdbms.t`, *default:* `nil`) - Enriched Oracle RDBMS object.
  *   `postgresqlRdbms` (*type:* `GoogleApi.Datastream.V1.Model.PostgresqlRdbms.t`, *default:* `nil`) - Enriched PostgreSQL RDBMS object.
  *   `salesforceOrg` (*type:* `GoogleApi.Datastream.V1.Model.SalesforceOrg.t`, *default:* `nil`) - Enriched Salesforce organization.
  *   `sqlServerRdbms` (*type:* `GoogleApi.Datastream.V1.Model.SqlServerRdbms.t`, *default:* `nil`) - Enriched SQLServer RDBMS object.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :mongodbCluster => GoogleApi.Datastream.V1.Model.MongodbCluster.t() | nil,
          :mysqlRdbms => GoogleApi.Datastream.V1.Model.MysqlRdbms.t() | nil,
          :oracleRdbms => GoogleApi.Datastream.V1.Model.OracleRdbms.t() | nil,
          :postgresqlRdbms => GoogleApi.Datastream.V1.Model.PostgresqlRdbms.t() | nil,
          :salesforceOrg => GoogleApi.Datastream.V1.Model.SalesforceOrg.t() | nil,
          :sqlServerRdbms => GoogleApi.Datastream.V1.Model.SqlServerRdbms.t() | nil
        }

  field(:mongodbCluster, as: GoogleApi.Datastream.V1.Model.MongodbCluster)
  field(:mysqlRdbms, as: GoogleApi.Datastream.V1.Model.MysqlRdbms)
  field(:oracleRdbms, as: GoogleApi.Datastream.V1.Model.OracleRdbms)
  field(:postgresqlRdbms, as: GoogleApi.Datastream.V1.Model.PostgresqlRdbms)
  field(:salesforceOrg, as: GoogleApi.Datastream.V1.Model.SalesforceOrg)
  field(:sqlServerRdbms, as: GoogleApi.Datastream.V1.Model.SqlServerRdbms)
end

defimpl Poison.Decoder, for: GoogleApi.Datastream.V1.Model.DiscoverConnectionProfileResponse do
  def decode(value, options) do
    GoogleApi.Datastream.V1.Model.DiscoverConnectionProfileResponse.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Datastream.V1.Model.DiscoverConnectionProfileResponse do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
