# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Datastream.V1.Model.BackfillAllStrategy do
  @moduledoc """
  Backfill strategy to automatically backfill the Stream's objects. Specific objects can be excluded.

  ## Attributes

  *   `mongodbExcludedObjects` (*type:* `GoogleApi.Datastream.V1.Model.MongodbCluster.t`, *default:* `nil`) - MongoDB data source objects to avoid backfilling
  *   `mysqlExcludedObjects` (*type:* `GoogleApi.Datastream.V1.Model.MysqlRdbms.t`, *default:* `nil`) - MySQL data source objects to avoid backfilling.
  *   `oracleExcludedObjects` (*type:* `GoogleApi.Datastream.V1.Model.OracleRdbms.t`, *default:* `nil`) - Oracle data source objects to avoid backfilling.
  *   `postgresqlExcludedObjects` (*type:* `GoogleApi.Datastream.V1.Model.PostgresqlRdbms.t`, *default:* `nil`) - PostgreSQL data source objects to avoid backfilling.
  *   `salesforceExcludedObjects` (*type:* `GoogleApi.Datastream.V1.Model.SalesforceOrg.t`, *default:* `nil`) - Salesforce data source objects to avoid backfilling
  *   `sqlServerExcludedObjects` (*type:* `GoogleApi.Datastream.V1.Model.SqlServerRdbms.t`, *default:* `nil`) - SQLServer data source objects to avoid backfilling
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :mongodbExcludedObjects => GoogleApi.Datastream.V1.Model.MongodbCluster.t() | nil,
          :mysqlExcludedObjects => GoogleApi.Datastream.V1.Model.MysqlRdbms.t() | nil,
          :oracleExcludedObjects => GoogleApi.Datastream.V1.Model.OracleRdbms.t() | nil,
          :postgresqlExcludedObjects => GoogleApi.Datastream.V1.Model.PostgresqlRdbms.t() | nil,
          :salesforceExcludedObjects => GoogleApi.Datastream.V1.Model.SalesforceOrg.t() | nil,
          :sqlServerExcludedObjects => GoogleApi.Datastream.V1.Model.SqlServerRdbms.t() | nil
        }

  field(:mongodbExcludedObjects, as: GoogleApi.Datastream.V1.Model.MongodbCluster)
  field(:mysqlExcludedObjects, as: GoogleApi.Datastream.V1.Model.MysqlRdbms)
  field(:oracleExcludedObjects, as: GoogleApi.Datastream.V1.Model.OracleRdbms)
  field(:postgresqlExcludedObjects, as: GoogleApi.Datastream.V1.Model.PostgresqlRdbms)
  field(:salesforceExcludedObjects, as: GoogleApi.Datastream.V1.Model.SalesforceOrg)
  field(:sqlServerExcludedObjects, as: GoogleApi.Datastream.V1.Model.SqlServerRdbms)
end

defimpl Poison.Decoder, for: GoogleApi.Datastream.V1.Model.BackfillAllStrategy do
  def decode(value, options) do
    GoogleApi.Datastream.V1.Model.BackfillAllStrategy.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Datastream.V1.Model.BackfillAllStrategy do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
