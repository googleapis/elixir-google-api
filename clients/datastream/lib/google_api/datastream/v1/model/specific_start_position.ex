# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Datastream.V1.Model.SpecificStartPosition do
  @moduledoc """
  CDC strategy to start replicating from a specific position in the source.

  ## Attributes

  *   `mysqlLogPosition` (*type:* `GoogleApi.Datastream.V1.Model.MysqlLogPosition.t`, *default:* `nil`) - MySQL specific log position to start replicating from.
  *   `oracleScnPosition` (*type:* `GoogleApi.Datastream.V1.Model.OracleScnPosition.t`, *default:* `nil`) - Oracle SCN to start replicating from.
  *   `sqlServerLsnPosition` (*type:* `GoogleApi.Datastream.V1.Model.SqlServerLsnPosition.t`, *default:* `nil`) - SqlServer LSN to start replicating from.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :mysqlLogPosition => GoogleApi.Datastream.V1.Model.MysqlLogPosition.t() | nil,
          :oracleScnPosition => GoogleApi.Datastream.V1.Model.OracleScnPosition.t() | nil,
          :sqlServerLsnPosition => GoogleApi.Datastream.V1.Model.SqlServerLsnPosition.t() | nil
        }

  field(:mysqlLogPosition, as: GoogleApi.Datastream.V1.Model.MysqlLogPosition)
  field(:oracleScnPosition, as: GoogleApi.Datastream.V1.Model.OracleScnPosition)
  field(:sqlServerLsnPosition, as: GoogleApi.Datastream.V1.Model.SqlServerLsnPosition)
end

defimpl Poison.Decoder, for: GoogleApi.Datastream.V1.Model.SpecificStartPosition do
  def decode(value, options) do
    GoogleApi.Datastream.V1.Model.SpecificStartPosition.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Datastream.V1.Model.SpecificStartPosition do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
