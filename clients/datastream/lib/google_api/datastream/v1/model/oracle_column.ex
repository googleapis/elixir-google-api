# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Datastream.V1.Model.OracleColumn do
  @moduledoc """
  Oracle Column.

  ## Attributes

  *   `column` (*type:* `String.t`, *default:* `nil`) - Column name.
  *   `dataType` (*type:* `String.t`, *default:* `nil`) - The Oracle data type.
  *   `encoding` (*type:* `String.t`, *default:* `nil`) - Column encoding.
  *   `length` (*type:* `integer()`, *default:* `nil`) - Column length.
  *   `nullable` (*type:* `boolean()`, *default:* `nil`) - Whether or not the column can accept a null value.
  *   `ordinalPosition` (*type:* `integer()`, *default:* `nil`) - The ordinal position of the column in the table.
  *   `precision` (*type:* `integer()`, *default:* `nil`) - Column precision.
  *   `primaryKey` (*type:* `boolean()`, *default:* `nil`) - Whether or not the column represents a primary key.
  *   `scale` (*type:* `integer()`, *default:* `nil`) - Column scale.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :column => String.t() | nil,
          :dataType => String.t() | nil,
          :encoding => String.t() | nil,
          :length => integer() | nil,
          :nullable => boolean() | nil,
          :ordinalPosition => integer() | nil,
          :precision => integer() | nil,
          :primaryKey => boolean() | nil,
          :scale => integer() | nil
        }

  field(:column)
  field(:dataType)
  field(:encoding)
  field(:length)
  field(:nullable)
  field(:ordinalPosition)
  field(:precision)
  field(:primaryKey)
  field(:scale)
end

defimpl Poison.Decoder, for: GoogleApi.Datastream.V1.Model.OracleColumn do
  def decode(value, options) do
    GoogleApi.Datastream.V1.Model.OracleColumn.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Datastream.V1.Model.OracleColumn do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
