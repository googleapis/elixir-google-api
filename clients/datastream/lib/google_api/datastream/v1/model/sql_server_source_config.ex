# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Datastream.V1.Model.SqlServerSourceConfig do
  @moduledoc """
  SQLServer data source configuration

  ## Attributes

  *   `changeTables` (*type:* `GoogleApi.Datastream.V1.Model.SqlServerChangeTables.t`, *default:* `nil`) - CDC reader reads from change tables.
  *   `excludeObjects` (*type:* `GoogleApi.Datastream.V1.Model.SqlServerRdbms.t`, *default:* `nil`) - SQLServer objects to exclude from the stream.
  *   `includeObjects` (*type:* `GoogleApi.Datastream.V1.Model.SqlServerRdbms.t`, *default:* `nil`) - SQLServer objects to include in the stream.
  *   `maxConcurrentBackfillTasks` (*type:* `integer()`, *default:* `nil`) - Max concurrent backfill tasks.
  *   `maxConcurrentCdcTasks` (*type:* `integer()`, *default:* `nil`) - Max concurrent CDC tasks.
  *   `transactionLogs` (*type:* `GoogleApi.Datastream.V1.Model.SqlServerTransactionLogs.t`, *default:* `nil`) - CDC reader reads from transaction logs.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :changeTables => GoogleApi.Datastream.V1.Model.SqlServerChangeTables.t() | nil,
          :excludeObjects => GoogleApi.Datastream.V1.Model.SqlServerRdbms.t() | nil,
          :includeObjects => GoogleApi.Datastream.V1.Model.SqlServerRdbms.t() | nil,
          :maxConcurrentBackfillTasks => integer() | nil,
          :maxConcurrentCdcTasks => integer() | nil,
          :transactionLogs => GoogleApi.Datastream.V1.Model.SqlServerTransactionLogs.t() | nil
        }

  field(:changeTables, as: GoogleApi.Datastream.V1.Model.SqlServerChangeTables)
  field(:excludeObjects, as: GoogleApi.Datastream.V1.Model.SqlServerRdbms)
  field(:includeObjects, as: GoogleApi.Datastream.V1.Model.SqlServerRdbms)
  field(:maxConcurrentBackfillTasks)
  field(:maxConcurrentCdcTasks)
  field(:transactionLogs, as: GoogleApi.Datastream.V1.Model.SqlServerTransactionLogs)
end

defimpl Poison.Decoder, for: GoogleApi.Datastream.V1.Model.SqlServerSourceConfig do
  def decode(value, options) do
    GoogleApi.Datastream.V1.Model.SqlServerSourceConfig.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Datastream.V1.Model.SqlServerSourceConfig do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
