# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudChannel.V1.Model.GoogleCloudChannelV1TransferableSku do
  @moduledoc """
  TransferableSku represents information a reseller needs to view existing provisioned services for a customer that they do not own. Read-only.

  ## Attributes

  *   `legacySku` (*type:* `GoogleApi.CloudChannel.V1.Model.GoogleCloudChannelV1Sku.t`, *default:* `nil`) - Optional. The customer to transfer has an entitlement with the populated legacy SKU.
  *   `sku` (*type:* `GoogleApi.CloudChannel.V1.Model.GoogleCloudChannelV1Sku.t`, *default:* `nil`) - The SKU pertaining to the provisioning resource as specified in the Offer.
  *   `transferEligibility` (*type:* `GoogleApi.CloudChannel.V1.Model.GoogleCloudChannelV1TransferEligibility.t`, *default:* `nil`) - Describes the transfer eligibility of a SKU.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :legacySku => GoogleApi.CloudChannel.V1.Model.GoogleCloudChannelV1Sku.t() | nil,
          :sku => GoogleApi.CloudChannel.V1.Model.GoogleCloudChannelV1Sku.t() | nil,
          :transferEligibility =>
            GoogleApi.CloudChannel.V1.Model.GoogleCloudChannelV1TransferEligibility.t() | nil
        }

  field(:legacySku, as: GoogleApi.CloudChannel.V1.Model.GoogleCloudChannelV1Sku)
  field(:sku, as: GoogleApi.CloudChannel.V1.Model.GoogleCloudChannelV1Sku)

  field(:transferEligibility,
    as: GoogleApi.CloudChannel.V1.Model.GoogleCloudChannelV1TransferEligibility
  )
end

defimpl Poison.Decoder, for: GoogleApi.CloudChannel.V1.Model.GoogleCloudChannelV1TransferableSku do
  def decode(value, options) do
    GoogleApi.CloudChannel.V1.Model.GoogleCloudChannelV1TransferableSku.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudChannel.V1.Model.GoogleCloudChannelV1TransferableSku do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
