# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudChannel.V1.Model.GoogleCloudChannelV1CloudIdentityCustomerAccount do
  @moduledoc """
  Entity representing a Cloud Identity account that may be associated with a Channel Services API partner.

  ## Attributes

  *   `channelPartnerCloudIdentityId` (*type:* `String.t`, *default:* `nil`) - If existing = true, and is 2-tier customer, the channel partner of the customer.
  *   `customerCloudIdentityId` (*type:* `String.t`, *default:* `nil`) - If existing = true, the Cloud Identity ID of the customer.
  *   `customerName` (*type:* `String.t`, *default:* `nil`) - If owned = true, the name of the customer that owns the Cloud Identity account. Customer_name uses the format: accounts/{account_id}/customers/{customer_id}
  *   `customerType` (*type:* `String.t`, *default:* `nil`) - If existing = true, the type of the customer.
  *   `existing` (*type:* `boolean()`, *default:* `nil`) - Returns true if a Cloud Identity account exists for a specific domain.
  *   `owned` (*type:* `boolean()`, *default:* `nil`) - Returns true if the Cloud Identity account is associated with a customer of the Channel Services partner.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :channelPartnerCloudIdentityId => String.t() | nil,
          :customerCloudIdentityId => String.t() | nil,
          :customerName => String.t() | nil,
          :customerType => String.t() | nil,
          :existing => boolean() | nil,
          :owned => boolean() | nil
        }

  field(:channelPartnerCloudIdentityId)
  field(:customerCloudIdentityId)
  field(:customerName)
  field(:customerType)
  field(:existing)
  field(:owned)
end

defimpl Poison.Decoder,
  for: GoogleApi.CloudChannel.V1.Model.GoogleCloudChannelV1CloudIdentityCustomerAccount do
  def decode(value, options) do
    GoogleApi.CloudChannel.V1.Model.GoogleCloudChannelV1CloudIdentityCustomerAccount.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.CloudChannel.V1.Model.GoogleCloudChannelV1CloudIdentityCustomerAccount do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
