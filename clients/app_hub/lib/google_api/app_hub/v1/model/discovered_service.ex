# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.AppHub.V1.Model.DiscoveredService do
  @moduledoc """
  DiscoveredService is a network or API interface that exposes some functionality to clients for consumption over the network. A discovered service can be registered to a App Hub service.

  ## Attributes

  *   `name` (*type:* `String.t`, *default:* `nil`) - Identifier. The resource name of the discovered service. Format: `"projects/{host-project-id}/locations/{location}/discoveredServices/{uuid}"`
  *   `serviceProperties` (*type:* `GoogleApi.AppHub.V1.Model.ServiceProperties.t`, *default:* `nil`) - Output only. Properties of an underlying compute resource that can comprise a Service. These are immutable.
  *   `serviceReference` (*type:* `GoogleApi.AppHub.V1.Model.ServiceReference.t`, *default:* `nil`) - Output only. Reference to an underlying networking resource that can comprise a Service. These are immutable.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :name => String.t() | nil,
          :serviceProperties => GoogleApi.AppHub.V1.Model.ServiceProperties.t() | nil,
          :serviceReference => GoogleApi.AppHub.V1.Model.ServiceReference.t() | nil
        }

  field(:name)
  field(:serviceProperties, as: GoogleApi.AppHub.V1.Model.ServiceProperties)
  field(:serviceReference, as: GoogleApi.AppHub.V1.Model.ServiceReference)
end

defimpl Poison.Decoder, for: GoogleApi.AppHub.V1.Model.DiscoveredService do
  def decode(value, options) do
    GoogleApi.AppHub.V1.Model.DiscoveredService.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.AppHub.V1.Model.DiscoveredService do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
