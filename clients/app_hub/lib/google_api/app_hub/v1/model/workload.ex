# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.AppHub.V1.Model.Workload do
  @moduledoc """
  Workload is an App Hub data model that contains a discovered workload, which represents a binary deployment (such as managed instance groups (MIGs) and GKE deployments) that performs the smallest logical subset of business functionality.

  ## Attributes

  *   `attributes` (*type:* `GoogleApi.AppHub.V1.Model.Attributes.t`, *default:* `nil`) - Optional. Consumer provided attributes.
  *   `createTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. Create time.
  *   `description` (*type:* `String.t`, *default:* `nil`) - Optional. User-defined description of a Workload. Can have a maximum length of 2048 characters.
  *   `discoveredWorkload` (*type:* `String.t`, *default:* `nil`) - Required. Immutable. The resource name of the original discovered workload.
  *   `displayName` (*type:* `String.t`, *default:* `nil`) - Optional. User-defined name for the Workload. Can have a maximum length of 63 characters.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Identifier. The resource name of the Workload. Format: `"projects/{host-project-id}/locations/{location}/applications/{application-id}/workloads/{workload-id}"`
  *   `state` (*type:* `String.t`, *default:* `nil`) - Output only. Workload state.
  *   `uid` (*type:* `String.t`, *default:* `nil`) - Output only. A universally unique identifier (UUID) for the `Workload` in the UUID4 format.
  *   `updateTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. Update time.
  *   `workloadProperties` (*type:* `GoogleApi.AppHub.V1.Model.WorkloadProperties.t`, *default:* `nil`) - Output only. Properties of an underlying compute resource represented by the Workload. These are immutable.
  *   `workloadReference` (*type:* `GoogleApi.AppHub.V1.Model.WorkloadReference.t`, *default:* `nil`) - Output only. Reference of an underlying compute resource represented by the Workload. These are immutable.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :attributes => GoogleApi.AppHub.V1.Model.Attributes.t() | nil,
          :createTime => DateTime.t() | nil,
          :description => String.t() | nil,
          :discoveredWorkload => String.t() | nil,
          :displayName => String.t() | nil,
          :name => String.t() | nil,
          :state => String.t() | nil,
          :uid => String.t() | nil,
          :updateTime => DateTime.t() | nil,
          :workloadProperties => GoogleApi.AppHub.V1.Model.WorkloadProperties.t() | nil,
          :workloadReference => GoogleApi.AppHub.V1.Model.WorkloadReference.t() | nil
        }

  field(:attributes, as: GoogleApi.AppHub.V1.Model.Attributes)
  field(:createTime, as: DateTime)
  field(:description)
  field(:discoveredWorkload)
  field(:displayName)
  field(:name)
  field(:state)
  field(:uid)
  field(:updateTime, as: DateTime)
  field(:workloadProperties, as: GoogleApi.AppHub.V1.Model.WorkloadProperties)
  field(:workloadReference, as: GoogleApi.AppHub.V1.Model.WorkloadReference)
end

defimpl Poison.Decoder, for: GoogleApi.AppHub.V1.Model.Workload do
  def decode(value, options) do
    GoogleApi.AppHub.V1.Model.Workload.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.AppHub.V1.Model.Workload do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
