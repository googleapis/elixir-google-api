# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.AppHub.V1.Model.ServiceProjectAttachment do
  @moduledoc """
  ServiceProjectAttachment represents an attachment from a service project to a host project. Service projects contain the underlying cloud infrastructure resources, and expose these resources to the host project through a ServiceProjectAttachment. With the attachments, the host project can provide an aggregated view of resources across all service projects.

  ## Attributes

  *   `createTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. Create time.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Identifier. The resource name of a ServiceProjectAttachment. Format: `"projects/{host-project-id}/locations/global/serviceProjectAttachments/{service-project-id}."`
  *   `serviceProject` (*type:* `String.t`, *default:* `nil`) - Required. Immutable. Service project name in the format: `"projects/abc"` or `"projects/123"`. As input, project name with either project id or number are accepted. As output, this field will contain project number.
  *   `state` (*type:* `String.t`, *default:* `nil`) - Output only. ServiceProjectAttachment state.
  *   `uid` (*type:* `String.t`, *default:* `nil`) - Output only. A globally unique identifier (in UUID4 format) for the `ServiceProjectAttachment`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :createTime => DateTime.t() | nil,
          :name => String.t() | nil,
          :serviceProject => String.t() | nil,
          :state => String.t() | nil,
          :uid => String.t() | nil
        }

  field(:createTime, as: DateTime)
  field(:name)
  field(:serviceProject)
  field(:state)
  field(:uid)
end

defimpl Poison.Decoder, for: GoogleApi.AppHub.V1.Model.ServiceProjectAttachment do
  def decode(value, options) do
    GoogleApi.AppHub.V1.Model.ServiceProjectAttachment.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.AppHub.V1.Model.ServiceProjectAttachment do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
