# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.PageSpeedOnline.V5.Model.MetricSavings do
  @moduledoc """
  The metric savings of the audit.

  ## Attributes

  *   `CLS` (*type:* `float()`, *default:* `nil`) - Optional. Optional numeric value representing the audit's savings for the CLS metric.
  *   `FCP` (*type:* `float()`, *default:* `nil`) - Optional. Optional numeric value representing the audit's savings for the FCP metric.
  *   `INP` (*type:* `float()`, *default:* `nil`) - Optional. Optional numeric value representing the audit's savings for the INP metric.
  *   `LCP` (*type:* `float()`, *default:* `nil`) - Optional. Optional numeric value representing the audit's savings for the LCP metric.
  *   `TBT` (*type:* `float()`, *default:* `nil`) - Optional. Optional numeric value representing the audit's savings for the TBT metric.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :CLS => float() | nil,
          :FCP => float() | nil,
          :INP => float() | nil,
          :LCP => float() | nil,
          :TBT => float() | nil
        }

  field(:CLS)
  field(:FCP)
  field(:INP)
  field(:LCP)
  field(:TBT)
end

defimpl Poison.Decoder, for: GoogleApi.PageSpeedOnline.V5.Model.MetricSavings do
  def decode(value, options) do
    GoogleApi.PageSpeedOnline.V5.Model.MetricSavings.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.PageSpeedOnline.V5.Model.MetricSavings do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
