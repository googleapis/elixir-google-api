# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.BigQuery.V2.Model.ExternalCatalogTableOptions do
  @moduledoc """
  Metadata about open source compatible table. The fields contained in these options correspond to Hive metastore's table-level properties.

  ## Attributes

  *   `connectionId` (*type:* `String.t`, *default:* `nil`) - Optional. A connection ID that specifies the credentials to be used to read external storage, such as Azure Blob, Cloud Storage, or Amazon S3. This connection is needed to read the open source table from BigQuery. The connection_id format must be either `..` or `projects//locations//connections/`.
  *   `parameters` (*type:* `map()`, *default:* `nil`) - Optional. A map of the key-value pairs defining the parameters and properties of the open source table. Corresponds with Hive metastore table parameters. Maximum size of 4MiB.
  *   `storageDescriptor` (*type:* `GoogleApi.BigQuery.V2.Model.StorageDescriptor.t`, *default:* `nil`) - Optional. A storage descriptor containing information about the physical storage of this table.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :connectionId => String.t() | nil,
          :parameters => map() | nil,
          :storageDescriptor => GoogleApi.BigQuery.V2.Model.StorageDescriptor.t() | nil
        }

  field(:connectionId)
  field(:parameters, type: :map)
  field(:storageDescriptor, as: GoogleApi.BigQuery.V2.Model.StorageDescriptor)
end

defimpl Poison.Decoder, for: GoogleApi.BigQuery.V2.Model.ExternalCatalogTableOptions do
  def decode(value, options) do
    GoogleApi.BigQuery.V2.Model.ExternalCatalogTableOptions.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.BigQuery.V2.Model.ExternalCatalogTableOptions do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
