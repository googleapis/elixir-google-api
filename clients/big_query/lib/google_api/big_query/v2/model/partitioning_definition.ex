# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.BigQuery.V2.Model.PartitioningDefinition do
  @moduledoc """
  The partitioning information, which includes managed table, external table and metastore partitioned table partition information.

  ## Attributes

  *   `partitionedColumn` (*type:* `list(GoogleApi.BigQuery.V2.Model.PartitionedColumn.t)`, *default:* `nil`) - Optional. Details about each partitioning column. This field is output only for all partitioning types other than metastore partitioned tables. BigQuery native tables only support 1 partitioning column. Other table types may support 0, 1 or more partitioning columns. For metastore partitioned tables, the order must match the definition order in the Hive Metastore, where it must match the physical layout of the table. For example, CREATE TABLE a_table(id BIGINT, name STRING) PARTITIONED BY (city STRING, state STRING). In this case the values must be ['city', 'state'] in that order.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :partitionedColumn => list(GoogleApi.BigQuery.V2.Model.PartitionedColumn.t()) | nil
        }

  field(:partitionedColumn, as: GoogleApi.BigQuery.V2.Model.PartitionedColumn, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.BigQuery.V2.Model.PartitioningDefinition do
  def decode(value, options) do
    GoogleApi.BigQuery.V2.Model.PartitioningDefinition.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.BigQuery.V2.Model.PartitioningDefinition do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
