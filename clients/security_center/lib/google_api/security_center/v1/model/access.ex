# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.SecurityCenter.V1.Model.Access do
  @moduledoc """
  Represents an access event.

  ## Attributes

  *   `callerIp` (*type:* `String.t`, *default:* `nil`) - Caller's IP address, such as "1.1.1.1".
  *   `callerIpGeo` (*type:* `GoogleApi.SecurityCenter.V1.Model.Geolocation.t`, *default:* `nil`) - The caller IP's geolocation, which identifies where the call came from.
  *   `methodName` (*type:* `String.t`, *default:* `nil`) - The method that the service account called, e.g. "SetIamPolicy".
  *   `principalEmail` (*type:* `String.t`, *default:* `nil`) - Associated email, such as "foo@google.com".
  *   `serviceName` (*type:* `String.t`, *default:* `nil`) - This is the API service that the service account made a call to, e.g. "iam.googleapis.com"
  *   `userAgentFamily` (*type:* `String.t`, *default:* `nil`) - What kind of user agent is associated, e.g. operating system shells, embedded or stand-alone applications, etc.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :callerIp => String.t() | nil,
          :callerIpGeo => GoogleApi.SecurityCenter.V1.Model.Geolocation.t() | nil,
          :methodName => String.t() | nil,
          :principalEmail => String.t() | nil,
          :serviceName => String.t() | nil,
          :userAgentFamily => String.t() | nil
        }

  field(:callerIp)
  field(:callerIpGeo, as: GoogleApi.SecurityCenter.V1.Model.Geolocation)
  field(:methodName)
  field(:principalEmail)
  field(:serviceName)
  field(:userAgentFamily)
end

defimpl Poison.Decoder, for: GoogleApi.SecurityCenter.V1.Model.Access do
  def decode(value, options) do
    GoogleApi.SecurityCenter.V1.Model.Access.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.SecurityCenter.V1.Model.Access do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
