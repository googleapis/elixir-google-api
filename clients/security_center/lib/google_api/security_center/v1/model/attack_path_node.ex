# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.SecurityCenter.V1.Model.AttackPathNode do
  @moduledoc """
  Represents one point that an attacker passes through in this attack path.

  ## Attributes

  *   `associatedFindings` (*type:* `list(GoogleApi.SecurityCenter.V1.Model.PathNodeAssociatedFinding.t)`, *default:* `nil`) - The findings associated with this node in the attack path.
  *   `attackSteps` (*type:* `list(GoogleApi.SecurityCenter.V1.Model.AttackStepNode.t)`, *default:* `nil`) - A list of attack step nodes that exist in this attack path node.
  *   `displayName` (*type:* `String.t`, *default:* `nil`) - Human-readable name of this resource.
  *   `resource` (*type:* `String.t`, *default:* `nil`) - The name of the resource at this point in the attack path. The format of the name follows the Cloud Asset Inventory [resource name format](https://cloud.google.com/asset-inventory/docs/resource-name-format)
  *   `resourceType` (*type:* `String.t`, *default:* `nil`) - The [supported resource type](https://cloud.google.com/asset-inventory/docs/supported-asset-types)
  *   `uuid` (*type:* `String.t`, *default:* `nil`) - Unique id of the attack path node.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :associatedFindings =>
            list(GoogleApi.SecurityCenter.V1.Model.PathNodeAssociatedFinding.t()) | nil,
          :attackSteps => list(GoogleApi.SecurityCenter.V1.Model.AttackStepNode.t()) | nil,
          :displayName => String.t() | nil,
          :resource => String.t() | nil,
          :resourceType => String.t() | nil,
          :uuid => String.t() | nil
        }

  field(:associatedFindings,
    as: GoogleApi.SecurityCenter.V1.Model.PathNodeAssociatedFinding,
    type: :list
  )

  field(:attackSteps, as: GoogleApi.SecurityCenter.V1.Model.AttackStepNode, type: :list)
  field(:displayName)
  field(:resource)
  field(:resourceType)
  field(:uuid)
end

defimpl Poison.Decoder, for: GoogleApi.SecurityCenter.V1.Model.AttackPathNode do
  def decode(value, options) do
    GoogleApi.SecurityCenter.V1.Model.AttackPathNode.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.SecurityCenter.V1.Model.AttackPathNode do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
