# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CivicInfo.V2.Model.GeocodingSummary do
  @moduledoc """
  Detailed summary of the result from geocoding an address

  ## Attributes

  *   `addressUnderstood` (*type:* `boolean()`, *default:* `nil`) - Represents the best estimate of whether or not the input address was fully understood and the address is correctly componentized. Mirrors the same-name field in geostore.staging.AddressLinkupScoringProto.
  *   `featureId` (*type:* `GoogleApi.CivicInfo.V2.Model.FeatureIdProto.t`, *default:* `nil`) - The ID of the FeatureProto returned by the geocoder
  *   `featureType` (*type:* `String.t`, *default:* `nil`) - The feature type for the FeatureProto returned by the geocoder
  *   `positionPrecisionMeters` (*type:* `float()`, *default:* `nil`) - Precision of the center point (lat/long) of the geocoded FeatureProto
  *   `queryString` (*type:* `String.t`, *default:* `nil`) - The query sent to the geocoder
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :addressUnderstood => boolean() | nil,
          :featureId => GoogleApi.CivicInfo.V2.Model.FeatureIdProto.t() | nil,
          :featureType => String.t() | nil,
          :positionPrecisionMeters => float() | nil,
          :queryString => String.t() | nil
        }

  field(:addressUnderstood)
  field(:featureId, as: GoogleApi.CivicInfo.V2.Model.FeatureIdProto)
  field(:featureType)
  field(:positionPrecisionMeters)
  field(:queryString)
end

defimpl Poison.Decoder, for: GoogleApi.CivicInfo.V2.Model.GeocodingSummary do
  def decode(value, options) do
    GoogleApi.CivicInfo.V2.Model.GeocodingSummary.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CivicInfo.V2.Model.GeocodingSummary do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
