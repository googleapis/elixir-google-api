# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.IAP.V1.Model.NextStateOfTags do
  @moduledoc """
  Used for calculating the next state of tags on the resource being passed for the CheckCustomConstraints RPC call. The detail evaluation of each field is described in go/op-create-update-time-tags and go/tags-in-orgpolicy-requests.

  ## Attributes

  *   `tagsFullState` (*type:* `GoogleApi.IAP.V1.Model.TagsFullState.t`, *default:* `nil`) - 
  *   `tagsFullStateForChildResource` (*type:* `GoogleApi.IAP.V1.Model.TagsFullStateForChildResource.t`, *default:* `nil`) - 
  *   `tagsPartialState` (*type:* `GoogleApi.IAP.V1.Model.TagsPartialState.t`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :tagsFullState => GoogleApi.IAP.V1.Model.TagsFullState.t() | nil,
          :tagsFullStateForChildResource =>
            GoogleApi.IAP.V1.Model.TagsFullStateForChildResource.t() | nil,
          :tagsPartialState => GoogleApi.IAP.V1.Model.TagsPartialState.t() | nil
        }

  field(:tagsFullState, as: GoogleApi.IAP.V1.Model.TagsFullState)
  field(:tagsFullStateForChildResource, as: GoogleApi.IAP.V1.Model.TagsFullStateForChildResource)
  field(:tagsPartialState, as: GoogleApi.IAP.V1.Model.TagsPartialState)
end

defimpl Poison.Decoder, for: GoogleApi.IAP.V1.Model.NextStateOfTags do
  def decode(value, options) do
    GoogleApi.IAP.V1.Model.NextStateOfTags.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.IAP.V1.Model.NextStateOfTags do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
