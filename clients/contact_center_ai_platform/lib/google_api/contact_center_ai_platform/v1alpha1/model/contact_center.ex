# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContactCenterAIPlatform.V1alpha1.Model.ContactCenter do
  @moduledoc """
  Message describing ContactCenter object Next ID: 24

  ## Attributes

  *   `adminUser` (*type:* `GoogleApi.ContactCenterAIPlatform.V1alpha1.Model.AdminUser.t`, *default:* `nil`) - Optional. Info about the first admin user, such as given name and family name.
  *   `ccaipManagedUsers` (*type:* `boolean()`, *default:* `nil`) - Optional. Whether to enable users to be created in the CCAIP-instance concurrently to having users in Cloud identity
  *   `createTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. [Output only] Create time stamp
  *   `critical` (*type:* `GoogleApi.ContactCenterAIPlatform.V1alpha1.Model.Critical.t`, *default:* `nil`) - Optional. Critical release channel.
  *   `customerDomainPrefix` (*type:* `String.t`, *default:* `nil`) - Required. Immutable. At least 2 and max 16 char long, must conform to [RFC 1035](https://www.ietf.org/rfc/rfc1035.txt).
  *   `displayName` (*type:* `String.t`, *default:* `nil`) - Required. A user friendly name for the ContactCenter.
  *   `early` (*type:* `GoogleApi.ContactCenterAIPlatform.V1alpha1.Model.Early.t`, *default:* `nil`) - Optional. Early release channel.
  *   `instanceConfig` (*type:* `GoogleApi.ContactCenterAIPlatform.V1alpha1.Model.InstanceConfig.t`, *default:* `nil`) - The configuration of this instance, it is currently immutable once created.
  *   `kmsKey` (*type:* `String.t`, *default:* `nil`) - Immutable. The KMS key name to encrypt the user input (`ContactCenter`).
  *   `labels` (*type:* `map()`, *default:* `nil`) - Labels as key value pairs
  *   `name` (*type:* `String.t`, *default:* `nil`) - name of resource
  *   `normal` (*type:* `GoogleApi.ContactCenterAIPlatform.V1alpha1.Model.Normal.t`, *default:* `nil`) - Optional. Normal release channel.
  *   `privateAccess` (*type:* `GoogleApi.ContactCenterAIPlatform.V1alpha1.Model.PrivateAccess.t`, *default:* `nil`) - Optional. VPC-SC related networking configuration.
  *   `privateComponents` (*type:* `list(String.t)`, *default:* `nil`) - Output only. TODO(b/283407860) Deprecate this field.
  *   `samlParams` (*type:* `GoogleApi.ContactCenterAIPlatform.V1alpha1.Model.SAMLParams.t`, *default:* `nil`) - Optional. Params that sets up Google as IdP.
  *   `state` (*type:* `String.t`, *default:* `nil`) - Output only. The state of this contact center.
  *   `updateTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. [Output only] Update time stamp
  *   `uris` (*type:* `GoogleApi.ContactCenterAIPlatform.V1alpha1.Model.URIs.t`, *default:* `nil`) - Output only. URIs to access the deployed ContactCenters.
  *   `userEmail` (*type:* `String.t`, *default:* `nil`) - Optional. Email address of the first admin user.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :adminUser => GoogleApi.ContactCenterAIPlatform.V1alpha1.Model.AdminUser.t() | nil,
          :ccaipManagedUsers => boolean() | nil,
          :createTime => DateTime.t() | nil,
          :critical => GoogleApi.ContactCenterAIPlatform.V1alpha1.Model.Critical.t() | nil,
          :customerDomainPrefix => String.t() | nil,
          :displayName => String.t() | nil,
          :early => GoogleApi.ContactCenterAIPlatform.V1alpha1.Model.Early.t() | nil,
          :instanceConfig =>
            GoogleApi.ContactCenterAIPlatform.V1alpha1.Model.InstanceConfig.t() | nil,
          :kmsKey => String.t() | nil,
          :labels => map() | nil,
          :name => String.t() | nil,
          :normal => GoogleApi.ContactCenterAIPlatform.V1alpha1.Model.Normal.t() | nil,
          :privateAccess =>
            GoogleApi.ContactCenterAIPlatform.V1alpha1.Model.PrivateAccess.t() | nil,
          :privateComponents => list(String.t()) | nil,
          :samlParams => GoogleApi.ContactCenterAIPlatform.V1alpha1.Model.SAMLParams.t() | nil,
          :state => String.t() | nil,
          :updateTime => DateTime.t() | nil,
          :uris => GoogleApi.ContactCenterAIPlatform.V1alpha1.Model.URIs.t() | nil,
          :userEmail => String.t() | nil
        }

  field(:adminUser, as: GoogleApi.ContactCenterAIPlatform.V1alpha1.Model.AdminUser)
  field(:ccaipManagedUsers)
  field(:createTime, as: DateTime)
  field(:critical, as: GoogleApi.ContactCenterAIPlatform.V1alpha1.Model.Critical)
  field(:customerDomainPrefix)
  field(:displayName)
  field(:early, as: GoogleApi.ContactCenterAIPlatform.V1alpha1.Model.Early)
  field(:instanceConfig, as: GoogleApi.ContactCenterAIPlatform.V1alpha1.Model.InstanceConfig)
  field(:kmsKey)
  field(:labels, type: :map)
  field(:name)
  field(:normal, as: GoogleApi.ContactCenterAIPlatform.V1alpha1.Model.Normal)
  field(:privateAccess, as: GoogleApi.ContactCenterAIPlatform.V1alpha1.Model.PrivateAccess)
  field(:privateComponents, type: :list)
  field(:samlParams, as: GoogleApi.ContactCenterAIPlatform.V1alpha1.Model.SAMLParams)
  field(:state)
  field(:updateTime, as: DateTime)
  field(:uris, as: GoogleApi.ContactCenterAIPlatform.V1alpha1.Model.URIs)
  field(:userEmail)
end

defimpl Poison.Decoder, for: GoogleApi.ContactCenterAIPlatform.V1alpha1.Model.ContactCenter do
  def decode(value, options) do
    GoogleApi.ContactCenterAIPlatform.V1alpha1.Model.ContactCenter.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContactCenterAIPlatform.V1alpha1.Model.ContactCenter do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
