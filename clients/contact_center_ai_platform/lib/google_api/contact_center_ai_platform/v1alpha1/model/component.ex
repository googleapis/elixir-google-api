# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContactCenterAIPlatform.V1alpha1.Model.Component do
  @moduledoc """
  Defines a logical CCAIP component that e.g. “EMAIL”, "CRM". For more information see go/ccaip-private-path-v2. Each logical component is associated with a list of service attachments.

  ## Attributes

  *   `name` (*type:* `String.t`, *default:* `nil`) - Name of the component.
  *   `serviceAttachmentNames` (*type:* `list(String.t)`, *default:* `nil`) - Associated service attachments. The service attachment names that will be used for sending private traffic to the CCAIP tenant project. Example service attachment name: "projects/${TENANT_PROJECT_ID}/regions/${REGION}/serviceAttachments/ingress-default".
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :name => String.t() | nil,
          :serviceAttachmentNames => list(String.t()) | nil
        }

  field(:name)
  field(:serviceAttachmentNames, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.ContactCenterAIPlatform.V1alpha1.Model.Component do
  def decode(value, options) do
    GoogleApi.ContactCenterAIPlatform.V1alpha1.Model.Component.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.ContactCenterAIPlatform.V1alpha1.Model.Component do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
