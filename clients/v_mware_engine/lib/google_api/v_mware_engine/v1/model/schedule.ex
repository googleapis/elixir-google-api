# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.VMwareEngine.V1.Model.Schedule do
  @moduledoc """
  Schedule for the upgrade.

  ## Attributes

  *   `constraints` (*type:* `GoogleApi.VMwareEngine.V1.Model.Constraints.t`, *default:* `nil`) - Output only. Output Only. Constraints applied to the schedule. These constraints should be applicable at the time of any rescheduling.
  *   `editWindow` (*type:* `GoogleApi.VMwareEngine.V1.Model.Interval.t`, *default:* `nil`) - Output only. Output Only. The schedule is open for edits during this time interval or window.
  *   `lastEditor` (*type:* `String.t`, *default:* `nil`) - Output only. Output Only. Indicates who most recently edited the upgrade schedule. The value is updated whenever the upgrade is rescheduled.
  *   `startTime` (*type:* `DateTime.t`, *default:* `nil`) - Required. The scheduled start time for the upgrade.
  *   `weeklyWindows` (*type:* `list(GoogleApi.VMwareEngine.V1.Model.TimeWindow.t)`, *default:* `nil`) - Required. Weekly time windows for upgrade activities. The server performs upgrade activities during these time windows to minimize disruptions.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :constraints => GoogleApi.VMwareEngine.V1.Model.Constraints.t() | nil,
          :editWindow => GoogleApi.VMwareEngine.V1.Model.Interval.t() | nil,
          :lastEditor => String.t() | nil,
          :startTime => DateTime.t() | nil,
          :weeklyWindows => list(GoogleApi.VMwareEngine.V1.Model.TimeWindow.t()) | nil
        }

  field(:constraints, as: GoogleApi.VMwareEngine.V1.Model.Constraints)
  field(:editWindow, as: GoogleApi.VMwareEngine.V1.Model.Interval)
  field(:lastEditor)
  field(:startTime, as: DateTime)
  field(:weeklyWindows, as: GoogleApi.VMwareEngine.V1.Model.TimeWindow, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.VMwareEngine.V1.Model.Schedule do
  def decode(value, options) do
    GoogleApi.VMwareEngine.V1.Model.Schedule.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.VMwareEngine.V1.Model.Schedule do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
