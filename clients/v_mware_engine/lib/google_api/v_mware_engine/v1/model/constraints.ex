# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.VMwareEngine.V1.Model.Constraints do
  @moduledoc """
  Constraints to be applied while editing a schedule. These constraints ensure that `Upgrade` specific requirements are met.

  ## Attributes

  *   `minHoursDay` (*type:* `integer()`, *default:* `nil`) - Output only. Minimum number of hours must be allotted for the upgrade activities for each selected day. This is a minimum; the upgrade schedule can allot more hours for the given day.
  *   `minHoursWeek` (*type:* `integer()`, *default:* `nil`) - Output only. The minimum number of weekly hours must be allotted for the upgrade activities. This is just a minimum; the schedule can assign more weekly hours.
  *   `rescheduleDateRange` (*type:* `GoogleApi.VMwareEngine.V1.Model.Interval.t`, *default:* `nil`) - Output only. Output Only. The user can only reschedule an upgrade that starts within this range.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :minHoursDay => integer() | nil,
          :minHoursWeek => integer() | nil,
          :rescheduleDateRange => GoogleApi.VMwareEngine.V1.Model.Interval.t() | nil
        }

  field(:minHoursDay)
  field(:minHoursWeek)
  field(:rescheduleDateRange, as: GoogleApi.VMwareEngine.V1.Model.Interval)
end

defimpl Poison.Decoder, for: GoogleApi.VMwareEngine.V1.Model.Constraints do
  def decode(value, options) do
    GoogleApi.VMwareEngine.V1.Model.Constraints.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.VMwareEngine.V1.Model.Constraints do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
