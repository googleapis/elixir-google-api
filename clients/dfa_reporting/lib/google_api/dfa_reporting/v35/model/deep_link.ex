# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.DFAReporting.V35.Model.DeepLink do
  @moduledoc """
  Contains information about a landing page deep link.

  ## Attributes

  *   `appUrl` (*type:* `String.t`, *default:* `nil`) - The URL of the mobile app being linked to.
  *   `fallbackUrl` (*type:* `String.t`, *default:* `nil`) - The fallback URL. This URL will be served to users who do not have the mobile app installed.
  *   `kind` (*type:* `String.t`, *default:* `nil`) - Identifies what kind of resource this is. Value: the fixed string "dfareporting#deepLink".
  *   `mobileApp` (*type:* `GoogleApi.DFAReporting.V35.Model.MobileApp.t`, *default:* `nil`) - The mobile app targeted by this deep link.
  *   `remarketingListIds` (*type:* `list(String.t)`, *default:* `nil`) - Ads served to users on these remarketing lists will use this deep link. Applicable when mobileApp.directory is APPLE_APP_STORE.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :appUrl => String.t() | nil,
          :fallbackUrl => String.t() | nil,
          :kind => String.t() | nil,
          :mobileApp => GoogleApi.DFAReporting.V35.Model.MobileApp.t() | nil,
          :remarketingListIds => list(String.t()) | nil
        }

  field(:appUrl)
  field(:fallbackUrl)
  field(:kind)
  field(:mobileApp, as: GoogleApi.DFAReporting.V35.Model.MobileApp)
  field(:remarketingListIds, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.DFAReporting.V35.Model.DeepLink do
  def decode(value, options) do
    GoogleApi.DFAReporting.V35.Model.DeepLink.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.DFAReporting.V35.Model.DeepLink do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
