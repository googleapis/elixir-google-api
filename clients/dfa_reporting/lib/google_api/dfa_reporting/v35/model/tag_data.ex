# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.DFAReporting.V35.Model.TagData do
  @moduledoc """
  Placement Tag Data

  ## Attributes

  *   `adId` (*type:* `String.t`, *default:* `nil`) - Ad associated with this placement tag. Applicable only when format is PLACEMENT_TAG_TRACKING.
  *   `clickTag` (*type:* `String.t`, *default:* `nil`) - Tag string to record a click.
  *   `creativeId` (*type:* `String.t`, *default:* `nil`) - Creative associated with this placement tag. Applicable only when format is PLACEMENT_TAG_TRACKING.
  *   `format` (*type:* `String.t`, *default:* `nil`) - TagData tag format of this tag.
  *   `impressionTag` (*type:* `String.t`, *default:* `nil`) - Tag string for serving an ad.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :adId => String.t() | nil,
          :clickTag => String.t() | nil,
          :creativeId => String.t() | nil,
          :format => String.t() | nil,
          :impressionTag => String.t() | nil
        }

  field(:adId)
  field(:clickTag)
  field(:creativeId)
  field(:format)
  field(:impressionTag)
end

defimpl Poison.Decoder, for: GoogleApi.DFAReporting.V35.Model.TagData do
  def decode(value, options) do
    GoogleApi.DFAReporting.V35.Model.TagData.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.DFAReporting.V35.Model.TagData do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
