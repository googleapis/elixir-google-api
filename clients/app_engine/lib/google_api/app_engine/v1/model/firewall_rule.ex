# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.AppEngine.V1.Model.FirewallRule do
  @moduledoc """
  A single firewall rule that is evaluated against incoming traffic and provides an action to take on matched requests.

  ## Attributes

  *   `action` (*type:* `String.t`, *default:* `nil`) - The action to take on matched requests.
  *   `description` (*type:* `String.t`, *default:* `nil`) - An optional string description of this rule. This field has a maximum length of 400 characters.
  *   `priority` (*type:* `integer()`, *default:* `nil`) - A positive integer between 1, Int32.MaxValue-1 that defines the order of rule evaluation. Rules with the lowest priority are evaluated first.A default rule at priority Int32.MaxValue matches all IPv4 and IPv6 traffic when no previous rule matches. Only the action of this rule can be modified by the user.
  *   `sourceRange` (*type:* `String.t`, *default:* `nil`) - IP address or range, defined using CIDR notation, of requests that this rule applies to. You can use the wildcard character "*" to match all IPs equivalent to "0/0" and "::/0" together. Examples: 192.168.1.1 or 192.168.0.0/16 or 2001:db8::/32 or 2001:0db8:0000:0042:0000:8a2e:0370:7334. Truncation will be silently performed on addresses which are not properly truncated. For example, 1.2.3.4/24 is accepted as the same address as 1.2.3.0/24. Similarly, for IPv6, 2001:db8::1/32 is accepted as the same address as 2001:db8::/32.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :action => String.t() | nil,
          :description => String.t() | nil,
          :priority => integer() | nil,
          :sourceRange => String.t() | nil
        }

  field(:action)
  field(:description)
  field(:priority)
  field(:sourceRange)
end

defimpl Poison.Decoder, for: GoogleApi.AppEngine.V1.Model.FirewallRule do
  def decode(value, options) do
    GoogleApi.AppEngine.V1.Model.FirewallRule.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.AppEngine.V1.Model.FirewallRule do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
