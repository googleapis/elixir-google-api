# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.NetworkManagement.V1beta1.Model.RedisInstanceInfo do
  @moduledoc """
  For display only. Metadata associated with a Cloud Redis Instance.

  ## Attributes

  *   `displayName` (*type:* `String.t`, *default:* `nil`) - Name of a Cloud Redis Instance.
  *   `networkUri` (*type:* `String.t`, *default:* `nil`) - URI of a Cloud Redis Instance network.
  *   `primaryEndpointIp` (*type:* `String.t`, *default:* `nil`) - Primary endpoint IP address of a Cloud Redis Instance.
  *   `readEndpointIp` (*type:* `String.t`, *default:* `nil`) - Read endpoint IP address of a Cloud Redis Instance (if applicable).
  *   `region` (*type:* `String.t`, *default:* `nil`) - Region in which the Cloud Redis Instance is defined.
  *   `uri` (*type:* `String.t`, *default:* `nil`) - URI of a Cloud Redis Instance.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :displayName => String.t() | nil,
          :networkUri => String.t() | nil,
          :primaryEndpointIp => String.t() | nil,
          :readEndpointIp => String.t() | nil,
          :region => String.t() | nil,
          :uri => String.t() | nil
        }

  field(:displayName)
  field(:networkUri)
  field(:primaryEndpointIp)
  field(:readEndpointIp)
  field(:region)
  field(:uri)
end

defimpl Poison.Decoder, for: GoogleApi.NetworkManagement.V1beta1.Model.RedisInstanceInfo do
  def decode(value, options) do
    GoogleApi.NetworkManagement.V1beta1.Model.RedisInstanceInfo.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.NetworkManagement.V1beta1.Model.RedisInstanceInfo do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
