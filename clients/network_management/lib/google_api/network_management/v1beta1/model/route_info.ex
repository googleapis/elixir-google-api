# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.NetworkManagement.V1beta1.Model.RouteInfo do
  @moduledoc """
  For display only. Metadata associated with a Compute Engine route.

  ## Attributes

  *   `advertisedRouteNextHopUri` (*type:* `String.t`, *default:* `nil`) - For advertised routes, the URI of their next hop, i.e. the URI of the hybrid endpoint (VPN tunnel, Interconnect attachment, NCC router appliance) the advertised prefix is advertised through, or URI of the source peered network.
  *   `advertisedRouteSourceRouterUri` (*type:* `String.t`, *default:* `nil`) - For advertised dynamic routes, the URI of the Cloud Router that advertised the corresponding IP prefix.
  *   `destIpRange` (*type:* `String.t`, *default:* `nil`) - Destination IP range of the route.
  *   `destPortRanges` (*type:* `list(String.t)`, *default:* `nil`) - Destination port ranges of the route. Policy based routes only.
  *   `displayName` (*type:* `String.t`, *default:* `nil`) - Name of a route.
  *   `instanceTags` (*type:* `list(String.t)`, *default:* `nil`) - Instance tags of the route.
  *   `nccHubUri` (*type:* `String.t`, *default:* `nil`) - URI of a NCC Hub. NCC_HUB routes only.
  *   `nccSpokeUri` (*type:* `String.t`, *default:* `nil`) - URI of a NCC Spoke. NCC_HUB routes only.
  *   `networkUri` (*type:* `String.t`, *default:* `nil`) - URI of a Compute Engine network. NETWORK routes only.
  *   `nextHop` (*type:* `String.t`, *default:* `nil`) - Next hop of the route.
  *   `nextHopType` (*type:* `String.t`, *default:* `nil`) - Type of next hop.
  *   `priority` (*type:* `integer()`, *default:* `nil`) - Priority of the route.
  *   `protocols` (*type:* `list(String.t)`, *default:* `nil`) - Protocols of the route. Policy based routes only.
  *   `region` (*type:* `String.t`, *default:* `nil`) - Region of the route (if applicable).
  *   `routeScope` (*type:* `String.t`, *default:* `nil`) - Indicates where route is applicable.
  *   `routeType` (*type:* `String.t`, *default:* `nil`) - Type of route.
  *   `srcIpRange` (*type:* `String.t`, *default:* `nil`) - Source IP address range of the route. Policy based routes only.
  *   `srcPortRanges` (*type:* `list(String.t)`, *default:* `nil`) - Source port ranges of the route. Policy based routes only.
  *   `uri` (*type:* `String.t`, *default:* `nil`) - URI of a route (if applicable).
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :advertisedRouteNextHopUri => String.t() | nil,
          :advertisedRouteSourceRouterUri => String.t() | nil,
          :destIpRange => String.t() | nil,
          :destPortRanges => list(String.t()) | nil,
          :displayName => String.t() | nil,
          :instanceTags => list(String.t()) | nil,
          :nccHubUri => String.t() | nil,
          :nccSpokeUri => String.t() | nil,
          :networkUri => String.t() | nil,
          :nextHop => String.t() | nil,
          :nextHopType => String.t() | nil,
          :priority => integer() | nil,
          :protocols => list(String.t()) | nil,
          :region => String.t() | nil,
          :routeScope => String.t() | nil,
          :routeType => String.t() | nil,
          :srcIpRange => String.t() | nil,
          :srcPortRanges => list(String.t()) | nil,
          :uri => String.t() | nil
        }

  field(:advertisedRouteNextHopUri)
  field(:advertisedRouteSourceRouterUri)
  field(:destIpRange)
  field(:destPortRanges, type: :list)
  field(:displayName)
  field(:instanceTags, type: :list)
  field(:nccHubUri)
  field(:nccSpokeUri)
  field(:networkUri)
  field(:nextHop)
  field(:nextHopType)
  field(:priority)
  field(:protocols, type: :list)
  field(:region)
  field(:routeScope)
  field(:routeType)
  field(:srcIpRange)
  field(:srcPortRanges, type: :list)
  field(:uri)
end

defimpl Poison.Decoder, for: GoogleApi.NetworkManagement.V1beta1.Model.RouteInfo do
  def decode(value, options) do
    GoogleApi.NetworkManagement.V1beta1.Model.RouteInfo.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.NetworkManagement.V1beta1.Model.RouteInfo do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
