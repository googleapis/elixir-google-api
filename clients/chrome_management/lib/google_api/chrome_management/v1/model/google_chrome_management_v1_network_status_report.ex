# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ChromeManagement.V1.Model.GoogleChromeManagementV1NetworkStatusReport do
  @moduledoc """
  State of visible/configured networks.

  ## Attributes

  *   `gatewayIpAddress` (*type:* `String.t`, *default:* `nil`) - Output only. Gateway IP address.
  *   `lanIpAddress` (*type:* `String.t`, *default:* `nil`) - Output only. LAN IP address.
  *   `reportTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. Time at which the network state was reported.
  *   `sampleFrequency` (*type:* `String.t`, *default:* `nil`) - Output only. Frequency the report is sampled.
  *   `signalStrengthDbm` (*type:* `integer()`, *default:* `nil`) - Output only. Signal strength for wireless networks measured in decibels.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :gatewayIpAddress => String.t() | nil,
          :lanIpAddress => String.t() | nil,
          :reportTime => DateTime.t() | nil,
          :sampleFrequency => String.t() | nil,
          :signalStrengthDbm => integer() | nil
        }

  field(:gatewayIpAddress)
  field(:lanIpAddress)
  field(:reportTime, as: DateTime)
  field(:sampleFrequency)
  field(:signalStrengthDbm)
end

defimpl Poison.Decoder,
  for: GoogleApi.ChromeManagement.V1.Model.GoogleChromeManagementV1NetworkStatusReport do
  def decode(value, options) do
    GoogleApi.ChromeManagement.V1.Model.GoogleChromeManagementV1NetworkStatusReport.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.ChromeManagement.V1.Model.GoogleChromeManagementV1NetworkStatusReport do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
