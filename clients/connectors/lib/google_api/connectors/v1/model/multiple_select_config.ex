# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Connectors.V1.Model.MultipleSelectConfig do
  @moduledoc """
  MultipleSelectConfig represents the multiple options for a config variable.

  ## Attributes

  *   `allowCustomValues` (*type:* `boolean()`, *default:* `nil`) - Optional. Allow custom values.
  *   `multipleSelectOptions` (*type:* `list(GoogleApi.Connectors.V1.Model.MultipleSelectOption.t)`, *default:* `nil`) - Required. Multiple select options.
  *   `valueSeparator` (*type:* `String.t`, *default:* `nil`) - Required. Value separator. Only "," can be used for OAuth auth code flow scope field.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :allowCustomValues => boolean() | nil,
          :multipleSelectOptions =>
            list(GoogleApi.Connectors.V1.Model.MultipleSelectOption.t()) | nil,
          :valueSeparator => String.t() | nil
        }

  field(:allowCustomValues)

  field(:multipleSelectOptions,
    as: GoogleApi.Connectors.V1.Model.MultipleSelectOption,
    type: :list
  )

  field(:valueSeparator)
end

defimpl Poison.Decoder, for: GoogleApi.Connectors.V1.Model.MultipleSelectConfig do
  def decode(value, options) do
    GoogleApi.Connectors.V1.Model.MultipleSelectConfig.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Connectors.V1.Model.MultipleSelectConfig do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
