# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Connectors.V1.Model.PublishStatus do
  @moduledoc """
  Publish status of a custom connector.

  ## Attributes

  *   `publishState` (*type:* `String.t`, *default:* `nil`) - Output only. Publish state of the custom connector.
  *   `publishTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. Publish time.
  *   `publishedAs` (*type:* `String.t`, *default:* `nil`) - Output only. Partner connector name. Will be set on the custom connector. Format: providers/partner/connectors//versions/
  *   `publishedSource` (*type:* `String.t`, *default:* `nil`) - Output only. Custom connector name. Will be set on the partner connector. Format: providers/customconnectors/connectors//versions/
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :publishState => String.t() | nil,
          :publishTime => DateTime.t() | nil,
          :publishedAs => String.t() | nil,
          :publishedSource => String.t() | nil
        }

  field(:publishState)
  field(:publishTime, as: DateTime)
  field(:publishedAs)
  field(:publishedSource)
end

defimpl Poison.Decoder, for: GoogleApi.Connectors.V1.Model.PublishStatus do
  def decode(value, options) do
    GoogleApi.Connectors.V1.Model.PublishStatus.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Connectors.V1.Model.PublishStatus do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
