# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Connectors.V1.Model.Connection do
  @moduledoc """
  Connection represents an instance of connector.

  ## Attributes

  *   `authConfig` (*type:* `GoogleApi.Connectors.V1.Model.AuthConfig.t`, *default:* `nil`) - Optional. Configuration for establishing the connection's authentication with an external system.
  *   `configVariables` (*type:* `list(GoogleApi.Connectors.V1.Model.ConfigVariable.t)`, *default:* `nil`) - Optional. Configuration for configuring the connection with an external system.
  *   `connectorVersion` (*type:* `String.t`, *default:* `nil`) - Required. Connector version on which the connection is created. The format is: projects/*/locations/global/providers/*/connectors/*/versions/*
  *   `createTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. Created time.
  *   `description` (*type:* `String.t`, *default:* `nil`) - Optional. Description of the resource.
  *   `egressBackends` (*type:* `list(String.t)`, *default:* `nil`) - Output only. Outbound domains/hosts needs to be allowlisted.
  *   `envoyImageLocation` (*type:* `String.t`, *default:* `nil`) - Output only. GCR location where the envoy image is stored. formatted like: gcr.io/{bucketName}/{imageName}
  *   `imageLocation` (*type:* `String.t`, *default:* `nil`) - Output only. GCR location where the runtime image is stored. formatted like: gcr.io/{bucketName}/{imageName}
  *   `labels` (*type:* `map()`, *default:* `nil`) - Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources
  *   `lockConfig` (*type:* `GoogleApi.Connectors.V1.Model.LockConfig.t`, *default:* `nil`) - Optional. Configuration that indicates whether or not the Connection can be edited.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Output only. Resource name of the Connection. Format: projects/{project}/locations/{location}/connections/{connection}
  *   `serviceAccount` (*type:* `String.t`, *default:* `nil`) - Optional. Service account needed for runtime plane to access GCP resources.
  *   `serviceDirectory` (*type:* `String.t`, *default:* `nil`) - Output only. The name of the Service Directory service name. Used for Private Harpoon to resolve the ILB address. e.g. "projects/cloud-connectors-e2e-testing/locations/us-central1/namespaces/istio-system/services/istio-ingressgateway-connectors"
  *   `status` (*type:* `GoogleApi.Connectors.V1.Model.ConnectionStatus.t`, *default:* `nil`) - Output only. Current status of the connection.
  *   `suspended` (*type:* `boolean()`, *default:* `nil`) - Optional. Suspended indicates if a user has suspended a connection or not.
  *   `updateTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. Updated time.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :authConfig => GoogleApi.Connectors.V1.Model.AuthConfig.t() | nil,
          :configVariables => list(GoogleApi.Connectors.V1.Model.ConfigVariable.t()) | nil,
          :connectorVersion => String.t() | nil,
          :createTime => DateTime.t() | nil,
          :description => String.t() | nil,
          :egressBackends => list(String.t()) | nil,
          :envoyImageLocation => String.t() | nil,
          :imageLocation => String.t() | nil,
          :labels => map() | nil,
          :lockConfig => GoogleApi.Connectors.V1.Model.LockConfig.t() | nil,
          :name => String.t() | nil,
          :serviceAccount => String.t() | nil,
          :serviceDirectory => String.t() | nil,
          :status => GoogleApi.Connectors.V1.Model.ConnectionStatus.t() | nil,
          :suspended => boolean() | nil,
          :updateTime => DateTime.t() | nil
        }

  field(:authConfig, as: GoogleApi.Connectors.V1.Model.AuthConfig)
  field(:configVariables, as: GoogleApi.Connectors.V1.Model.ConfigVariable, type: :list)
  field(:connectorVersion)
  field(:createTime, as: DateTime)
  field(:description)
  field(:egressBackends, type: :list)
  field(:envoyImageLocation)
  field(:imageLocation)
  field(:labels, type: :map)
  field(:lockConfig, as: GoogleApi.Connectors.V1.Model.LockConfig)
  field(:name)
  field(:serviceAccount)
  field(:serviceDirectory)
  field(:status, as: GoogleApi.Connectors.V1.Model.ConnectionStatus)
  field(:suspended)
  field(:updateTime, as: DateTime)
end

defimpl Poison.Decoder, for: GoogleApi.Connectors.V1.Model.Connection do
  def decode(value, options) do
    GoogleApi.Connectors.V1.Model.Connection.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Connectors.V1.Model.Connection do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
