# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudSearch.V1.Model.Id do
  @moduledoc """
  Identifies a particular object, including both Users and DirEntries. This Id is unique across the entire server instance, such as the production or qa instance.

  ## Attributes

  *   `creatorUserId` (*type:* `String.t`, *default:* `nil`) - The User account in which the DirEntry was originally created. If name_space==GAIA, then it's the gaia_id of the user this id is referring to.
  *   `localId` (*type:* `String.t`, *default:* `nil`) - The local identifier for the DirEntry (local to the creator's account). local_id + app_name is guaranteed to be unique within the creator account, but not across all User accounts. The string is case sensitive. Ignore if name_space==GAIA. NB For name_space==COSMO, all local_id's should be defined in google3/java/com/google/storage/cosmo/server/api/SpecialObjectIds.java as they have a special predefined meaning. See cosmo.client.CosmoIdFactory.createObjectId(long,String) for IMPORTANT recommendations when generating IDs.
  *   `nameSpace` (*type:* `integer()`, *default:* `nil`) - The name space in which this id is unique (typically the application that created it). Values should be drawn from the above enum, but for experimentation, use values greater than 1000.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :creatorUserId => String.t() | nil,
          :localId => String.t() | nil,
          :nameSpace => integer() | nil
        }

  field(:creatorUserId)
  field(:localId)
  field(:nameSpace)
end

defimpl Poison.Decoder, for: GoogleApi.CloudSearch.V1.Model.Id do
  def decode(value, options) do
    GoogleApi.CloudSearch.V1.Model.Id.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudSearch.V1.Model.Id do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
