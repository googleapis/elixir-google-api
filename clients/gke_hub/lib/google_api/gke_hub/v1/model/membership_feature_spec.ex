# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.GKEHub.V1.Model.MembershipFeatureSpec do
  @moduledoc """
  MembershipFeatureSpec contains configuration information for a single Membership.

  ## Attributes

  *   `configmanagement` (*type:* `GoogleApi.GKEHub.V1.Model.ConfigManagementMembershipSpec.t`, *default:* `nil`) - Config Management-specific spec.
  *   `fleetobservability` (*type:* `GoogleApi.GKEHub.V1.Model.FleetObservabilityMembershipSpec.t`, *default:* `nil`) - Fleet observability membership spec
  *   `identityservice` (*type:* `GoogleApi.GKEHub.V1.Model.IdentityServiceMembershipSpec.t`, *default:* `nil`) - Identity Service-specific spec.
  *   `mesh` (*type:* `GoogleApi.GKEHub.V1.Model.ServiceMeshMembershipSpec.t`, *default:* `nil`) - Anthos Service Mesh-specific spec
  *   `origin` (*type:* `GoogleApi.GKEHub.V1.Model.Origin.t`, *default:* `nil`) - Whether this per-Membership spec was inherited from a fleet-level default. This field can be updated by users by either overriding a Membership config (updated to USER implicitly) or setting to FLEET explicitly.
  *   `policycontroller` (*type:* `GoogleApi.GKEHub.V1.Model.PolicyControllerMembershipSpec.t`, *default:* `nil`) - Policy Controller spec.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :configmanagement => GoogleApi.GKEHub.V1.Model.ConfigManagementMembershipSpec.t() | nil,
          :fleetobservability =>
            GoogleApi.GKEHub.V1.Model.FleetObservabilityMembershipSpec.t() | nil,
          :identityservice => GoogleApi.GKEHub.V1.Model.IdentityServiceMembershipSpec.t() | nil,
          :mesh => GoogleApi.GKEHub.V1.Model.ServiceMeshMembershipSpec.t() | nil,
          :origin => GoogleApi.GKEHub.V1.Model.Origin.t() | nil,
          :policycontroller => GoogleApi.GKEHub.V1.Model.PolicyControllerMembershipSpec.t() | nil
        }

  field(:configmanagement, as: GoogleApi.GKEHub.V1.Model.ConfigManagementMembershipSpec)
  field(:fleetobservability, as: GoogleApi.GKEHub.V1.Model.FleetObservabilityMembershipSpec)
  field(:identityservice, as: GoogleApi.GKEHub.V1.Model.IdentityServiceMembershipSpec)
  field(:mesh, as: GoogleApi.GKEHub.V1.Model.ServiceMeshMembershipSpec)
  field(:origin, as: GoogleApi.GKEHub.V1.Model.Origin)
  field(:policycontroller, as: GoogleApi.GKEHub.V1.Model.PolicyControllerMembershipSpec)
end

defimpl Poison.Decoder, for: GoogleApi.GKEHub.V1.Model.MembershipFeatureSpec do
  def decode(value, options) do
    GoogleApi.GKEHub.V1.Model.MembershipFeatureSpec.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.GKEHub.V1.Model.MembershipFeatureSpec do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
