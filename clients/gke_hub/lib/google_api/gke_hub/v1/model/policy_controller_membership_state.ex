# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.GKEHub.V1.Model.PolicyControllerMembershipState do
  @moduledoc """
  **Policy Controller**: State for a single cluster.

  ## Attributes

  *   `clusterName` (*type:* `String.t`, *default:* `nil`) - The user-defined name for the cluster used by ClusterSelectors to group clusters together. This should match Membership's membership_name, unless the user installed PC on the cluster manually prior to enabling the PC hub feature. Unique within a Policy Controller installation.
  *   `membershipSpec` (*type:* `GoogleApi.GKEHub.V1.Model.PolicyControllerMembershipSpec.t`, *default:* `nil`) - Membership configuration in the cluster. This represents the actual state in the cluster, while the MembershipSpec in the FeatureSpec represents the intended state
  *   `policyControllerHubState` (*type:* `GoogleApi.GKEHub.V1.Model.PolicyControllerPolicyControllerHubState.t`, *default:* `nil`) - Policy Controller state observed by the Policy Controller Hub
  *   `state` (*type:* `String.t`, *default:* `nil`) - The lifecycle state Policy Controller is in.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :clusterName => String.t() | nil,
          :membershipSpec => GoogleApi.GKEHub.V1.Model.PolicyControllerMembershipSpec.t() | nil,
          :policyControllerHubState =>
            GoogleApi.GKEHub.V1.Model.PolicyControllerPolicyControllerHubState.t() | nil,
          :state => String.t() | nil
        }

  field(:clusterName)
  field(:membershipSpec, as: GoogleApi.GKEHub.V1.Model.PolicyControllerMembershipSpec)

  field(:policyControllerHubState,
    as: GoogleApi.GKEHub.V1.Model.PolicyControllerPolicyControllerHubState
  )

  field(:state)
end

defimpl Poison.Decoder, for: GoogleApi.GKEHub.V1.Model.PolicyControllerMembershipState do
  def decode(value, options) do
    GoogleApi.GKEHub.V1.Model.PolicyControllerMembershipState.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.GKEHub.V1.Model.PolicyControllerMembershipState do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
