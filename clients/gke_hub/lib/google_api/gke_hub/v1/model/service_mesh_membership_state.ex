# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.GKEHub.V1.Model.ServiceMeshMembershipState do
  @moduledoc """
  **Service Mesh**: State for a single Membership, as analyzed by the Service Mesh Hub Controller.

  ## Attributes

  *   `conditions` (*type:* `list(GoogleApi.GKEHub.V1.Model.ServiceMeshCondition.t)`, *default:* `nil`) - Output only. List of conditions reported for this membership.
  *   `controlPlaneManagement` (*type:* `GoogleApi.GKEHub.V1.Model.ServiceMeshControlPlaneManagement.t`, *default:* `nil`) - Output only. Status of control plane management
  *   `dataPlaneManagement` (*type:* `GoogleApi.GKEHub.V1.Model.ServiceMeshDataPlaneManagement.t`, *default:* `nil`) - Output only. Status of data plane management.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :conditions => list(GoogleApi.GKEHub.V1.Model.ServiceMeshCondition.t()) | nil,
          :controlPlaneManagement =>
            GoogleApi.GKEHub.V1.Model.ServiceMeshControlPlaneManagement.t() | nil,
          :dataPlaneManagement =>
            GoogleApi.GKEHub.V1.Model.ServiceMeshDataPlaneManagement.t() | nil
        }

  field(:conditions, as: GoogleApi.GKEHub.V1.Model.ServiceMeshCondition, type: :list)
  field(:controlPlaneManagement, as: GoogleApi.GKEHub.V1.Model.ServiceMeshControlPlaneManagement)
  field(:dataPlaneManagement, as: GoogleApi.GKEHub.V1.Model.ServiceMeshDataPlaneManagement)
end

defimpl Poison.Decoder, for: GoogleApi.GKEHub.V1.Model.ServiceMeshMembershipState do
  def decode(value, options) do
    GoogleApi.GKEHub.V1.Model.ServiceMeshMembershipState.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.GKEHub.V1.Model.ServiceMeshMembershipState do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
