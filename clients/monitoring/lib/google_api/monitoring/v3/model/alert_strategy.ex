# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Monitoring.V3.Model.AlertStrategy do
  @moduledoc """
  Control over how the notification channels in notification_channels are notified when this alert fires.

  ## Attributes

  *   `autoClose` (*type:* `String.t`, *default:* `nil`) - If an alert policy that was active has no data for this long, any open incidents will close
  *   `notificationRateLimit` (*type:* `GoogleApi.Monitoring.V3.Model.NotificationRateLimit.t`, *default:* `nil`) - Required for alert policies with a LogMatch condition.This limit is not implemented for alert policies that are not log-based.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :autoClose => String.t() | nil,
          :notificationRateLimit => GoogleApi.Monitoring.V3.Model.NotificationRateLimit.t() | nil
        }

  field(:autoClose)
  field(:notificationRateLimit, as: GoogleApi.Monitoring.V3.Model.NotificationRateLimit)
end

defimpl Poison.Decoder, for: GoogleApi.Monitoring.V3.Model.AlertStrategy do
  def decode(value, options) do
    GoogleApi.Monitoring.V3.Model.AlertStrategy.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Monitoring.V3.Model.AlertStrategy do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
