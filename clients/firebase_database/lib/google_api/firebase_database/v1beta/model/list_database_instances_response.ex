# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.FirebaseDatabase.V1beta.Model.ListDatabaseInstancesResponse do
  @moduledoc """
  The response from the ListDatabaseInstances method.

  ## Attributes

  *   `instances` (*type:* `list(GoogleApi.FirebaseDatabase.V1beta.Model.DatabaseInstance.t)`, *default:* `nil`) - List of each DatabaseInstance that is in the parent Firebase project.
  *   `nextPageToken` (*type:* `String.t`, *default:* `nil`) - If the result list is too large to fit in a single response, then a token is returned. If the string is empty, then this response is the last page of results. This token can be used in a subsequent call to `ListDatabaseInstances` to find the next group of database instances. Page tokens are short-lived and should not be persisted.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :instances => list(GoogleApi.FirebaseDatabase.V1beta.Model.DatabaseInstance.t()) | nil,
          :nextPageToken => String.t() | nil
        }

  field(:instances, as: GoogleApi.FirebaseDatabase.V1beta.Model.DatabaseInstance, type: :list)
  field(:nextPageToken)
end

defimpl Poison.Decoder, for: GoogleApi.FirebaseDatabase.V1beta.Model.ListDatabaseInstancesResponse do
  def decode(value, options) do
    GoogleApi.FirebaseDatabase.V1beta.Model.ListDatabaseInstancesResponse.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.FirebaseDatabase.V1beta.Model.ListDatabaseInstancesResponse do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
