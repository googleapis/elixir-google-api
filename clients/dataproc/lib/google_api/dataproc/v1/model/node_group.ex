# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Dataproc.V1.Model.NodeGroup do
  @moduledoc """
  Dataproc Node Group. The Dataproc NodeGroup resource is not related to the Dataproc NodeGroupAffinity resource.

  ## Attributes

  *   `labels` (*type:* `map()`, *default:* `nil`) - Optional. Node group labels. Label keys must consist of from 1 to 63 characters and conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values can be empty. If specified, they must consist of from 1 to 63 characters and conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). The node group must have no more than 32 labels.
  *   `name` (*type:* `String.t`, *default:* `nil`) - The Node group resource name (https://aip.dev/122).
  *   `nodeGroupConfig` (*type:* `GoogleApi.Dataproc.V1.Model.InstanceGroupConfig.t`, *default:* `nil`) - Optional. The node group instance group configuration.
  *   `roles` (*type:* `list(String.t)`, *default:* `nil`) - Required. Node group roles.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :labels => map() | nil,
          :name => String.t() | nil,
          :nodeGroupConfig => GoogleApi.Dataproc.V1.Model.InstanceGroupConfig.t() | nil,
          :roles => list(String.t()) | nil
        }

  field(:labels, type: :map)
  field(:name)
  field(:nodeGroupConfig, as: GoogleApi.Dataproc.V1.Model.InstanceGroupConfig)
  field(:roles, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.Dataproc.V1.Model.NodeGroup do
  def decode(value, options) do
    GoogleApi.Dataproc.V1.Model.NodeGroup.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Dataproc.V1.Model.NodeGroup do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
