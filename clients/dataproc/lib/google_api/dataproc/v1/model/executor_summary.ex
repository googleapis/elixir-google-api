# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Dataproc.V1.Model.ExecutorSummary do
  @moduledoc """
  Details about executors used by the application.

  ## Attributes

  *   `activeTasks` (*type:* `integer()`, *default:* `nil`) - 
  *   `addTime` (*type:* `DateTime.t`, *default:* `nil`) - 
  *   `attributes` (*type:* `map()`, *default:* `nil`) - 
  *   `completedTasks` (*type:* `integer()`, *default:* `nil`) - 
  *   `diskUsed` (*type:* `String.t`, *default:* `nil`) - 
  *   `excludedInStages` (*type:* `list(String.t)`, *default:* `nil`) - 
  *   `executorId` (*type:* `String.t`, *default:* `nil`) - 
  *   `executorLogs` (*type:* `map()`, *default:* `nil`) - 
  *   `failedTasks` (*type:* `integer()`, *default:* `nil`) - 
  *   `hostPort` (*type:* `String.t`, *default:* `nil`) - 
  *   `isActive` (*type:* `boolean()`, *default:* `nil`) - 
  *   `isExcluded` (*type:* `boolean()`, *default:* `nil`) - 
  *   `maxMemory` (*type:* `String.t`, *default:* `nil`) - 
  *   `maxTasks` (*type:* `integer()`, *default:* `nil`) - 
  *   `memoryMetrics` (*type:* `GoogleApi.Dataproc.V1.Model.MemoryMetrics.t`, *default:* `nil`) - 
  *   `memoryUsed` (*type:* `String.t`, *default:* `nil`) - 
  *   `peakMemoryMetrics` (*type:* `GoogleApi.Dataproc.V1.Model.ExecutorMetrics.t`, *default:* `nil`) - 
  *   `rddBlocks` (*type:* `integer()`, *default:* `nil`) - 
  *   `removeReason` (*type:* `String.t`, *default:* `nil`) - 
  *   `removeTime` (*type:* `DateTime.t`, *default:* `nil`) - 
  *   `resourceProfileId` (*type:* `integer()`, *default:* `nil`) - 
  *   `resources` (*type:* `%{optional(String.t) => GoogleApi.Dataproc.V1.Model.ResourceInformation.t}`, *default:* `nil`) - 
  *   `totalCores` (*type:* `integer()`, *default:* `nil`) - 
  *   `totalDurationMillis` (*type:* `String.t`, *default:* `nil`) - 
  *   `totalGcTimeMillis` (*type:* `String.t`, *default:* `nil`) - 
  *   `totalInputBytes` (*type:* `String.t`, *default:* `nil`) - 
  *   `totalShuffleRead` (*type:* `String.t`, *default:* `nil`) - 
  *   `totalShuffleWrite` (*type:* `String.t`, *default:* `nil`) - 
  *   `totalTasks` (*type:* `integer()`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :activeTasks => integer() | nil,
          :addTime => DateTime.t() | nil,
          :attributes => map() | nil,
          :completedTasks => integer() | nil,
          :diskUsed => String.t() | nil,
          :excludedInStages => list(String.t()) | nil,
          :executorId => String.t() | nil,
          :executorLogs => map() | nil,
          :failedTasks => integer() | nil,
          :hostPort => String.t() | nil,
          :isActive => boolean() | nil,
          :isExcluded => boolean() | nil,
          :maxMemory => String.t() | nil,
          :maxTasks => integer() | nil,
          :memoryMetrics => GoogleApi.Dataproc.V1.Model.MemoryMetrics.t() | nil,
          :memoryUsed => String.t() | nil,
          :peakMemoryMetrics => GoogleApi.Dataproc.V1.Model.ExecutorMetrics.t() | nil,
          :rddBlocks => integer() | nil,
          :removeReason => String.t() | nil,
          :removeTime => DateTime.t() | nil,
          :resourceProfileId => integer() | nil,
          :resources =>
            %{optional(String.t()) => GoogleApi.Dataproc.V1.Model.ResourceInformation.t()} | nil,
          :totalCores => integer() | nil,
          :totalDurationMillis => String.t() | nil,
          :totalGcTimeMillis => String.t() | nil,
          :totalInputBytes => String.t() | nil,
          :totalShuffleRead => String.t() | nil,
          :totalShuffleWrite => String.t() | nil,
          :totalTasks => integer() | nil
        }

  field(:activeTasks)
  field(:addTime, as: DateTime)
  field(:attributes, type: :map)
  field(:completedTasks)
  field(:diskUsed)
  field(:excludedInStages, type: :list)
  field(:executorId)
  field(:executorLogs, type: :map)
  field(:failedTasks)
  field(:hostPort)
  field(:isActive)
  field(:isExcluded)
  field(:maxMemory)
  field(:maxTasks)
  field(:memoryMetrics, as: GoogleApi.Dataproc.V1.Model.MemoryMetrics)
  field(:memoryUsed)
  field(:peakMemoryMetrics, as: GoogleApi.Dataproc.V1.Model.ExecutorMetrics)
  field(:rddBlocks)
  field(:removeReason)
  field(:removeTime, as: DateTime)
  field(:resourceProfileId)
  field(:resources, as: GoogleApi.Dataproc.V1.Model.ResourceInformation, type: :map)
  field(:totalCores)
  field(:totalDurationMillis)
  field(:totalGcTimeMillis)
  field(:totalInputBytes)
  field(:totalShuffleRead)
  field(:totalShuffleWrite)
  field(:totalTasks)
end

defimpl Poison.Decoder, for: GoogleApi.Dataproc.V1.Model.ExecutorSummary do
  def decode(value, options) do
    GoogleApi.Dataproc.V1.Model.ExecutorSummary.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Dataproc.V1.Model.ExecutorSummary do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
