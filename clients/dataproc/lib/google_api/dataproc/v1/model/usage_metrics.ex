# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Dataproc.V1.Model.UsageMetrics do
  @moduledoc """
  Usage metrics represent approximate total resources consumed by a workload.

  ## Attributes

  *   `acceleratorType` (*type:* `String.t`, *default:* `nil`) - Optional. Accelerator type being used, if any
  *   `milliAcceleratorSeconds` (*type:* `String.t`, *default:* `nil`) - Optional. Accelerator usage in (milliAccelerator x seconds) (see Dataproc Serverless pricing (https://cloud.google.com/dataproc-serverless/pricing)).
  *   `milliDcuSeconds` (*type:* `String.t`, *default:* `nil`) - Optional. DCU (Dataproc Compute Units) usage in (milliDCU x seconds) (see Dataproc Serverless pricing (https://cloud.google.com/dataproc-serverless/pricing)).
  *   `milliSlotSeconds` (*type:* `String.t`, *default:* `nil`) - Optional. Slot usage in (milliSlot x seconds).
  *   `shuffleStorageGbSeconds` (*type:* `String.t`, *default:* `nil`) - Optional. Shuffle storage usage in (GB x seconds) (see Dataproc Serverless pricing (https://cloud.google.com/dataproc-serverless/pricing)).
  *   `updateTime` (*type:* `DateTime.t`, *default:* `nil`) - Optional. The timestamp of the usage metrics.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :acceleratorType => String.t() | nil,
          :milliAcceleratorSeconds => String.t() | nil,
          :milliDcuSeconds => String.t() | nil,
          :milliSlotSeconds => String.t() | nil,
          :shuffleStorageGbSeconds => String.t() | nil,
          :updateTime => DateTime.t() | nil
        }

  field(:acceleratorType)
  field(:milliAcceleratorSeconds)
  field(:milliDcuSeconds)
  field(:milliSlotSeconds)
  field(:shuffleStorageGbSeconds)
  field(:updateTime, as: DateTime)
end

defimpl Poison.Decoder, for: GoogleApi.Dataproc.V1.Model.UsageMetrics do
  def decode(value, options) do
    GoogleApi.Dataproc.V1.Model.UsageMetrics.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Dataproc.V1.Model.UsageMetrics do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
