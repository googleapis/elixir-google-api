# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Dataproc.V1.Model.ShufflePushReadQuantileMetrics do
  @moduledoc """


  ## Attributes

  *   `corruptMergedBlockChunks` (*type:* `GoogleApi.Dataproc.V1.Model.Quantiles.t`, *default:* `nil`) - 
  *   `localMergedBlocksFetched` (*type:* `GoogleApi.Dataproc.V1.Model.Quantiles.t`, *default:* `nil`) - 
  *   `localMergedBytesRead` (*type:* `GoogleApi.Dataproc.V1.Model.Quantiles.t`, *default:* `nil`) - 
  *   `localMergedChunksFetched` (*type:* `GoogleApi.Dataproc.V1.Model.Quantiles.t`, *default:* `nil`) - 
  *   `mergedFetchFallbackCount` (*type:* `GoogleApi.Dataproc.V1.Model.Quantiles.t`, *default:* `nil`) - 
  *   `remoteMergedBlocksFetched` (*type:* `GoogleApi.Dataproc.V1.Model.Quantiles.t`, *default:* `nil`) - 
  *   `remoteMergedBytesRead` (*type:* `GoogleApi.Dataproc.V1.Model.Quantiles.t`, *default:* `nil`) - 
  *   `remoteMergedChunksFetched` (*type:* `GoogleApi.Dataproc.V1.Model.Quantiles.t`, *default:* `nil`) - 
  *   `remoteMergedReqsDuration` (*type:* `GoogleApi.Dataproc.V1.Model.Quantiles.t`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :corruptMergedBlockChunks => GoogleApi.Dataproc.V1.Model.Quantiles.t() | nil,
          :localMergedBlocksFetched => GoogleApi.Dataproc.V1.Model.Quantiles.t() | nil,
          :localMergedBytesRead => GoogleApi.Dataproc.V1.Model.Quantiles.t() | nil,
          :localMergedChunksFetched => GoogleApi.Dataproc.V1.Model.Quantiles.t() | nil,
          :mergedFetchFallbackCount => GoogleApi.Dataproc.V1.Model.Quantiles.t() | nil,
          :remoteMergedBlocksFetched => GoogleApi.Dataproc.V1.Model.Quantiles.t() | nil,
          :remoteMergedBytesRead => GoogleApi.Dataproc.V1.Model.Quantiles.t() | nil,
          :remoteMergedChunksFetched => GoogleApi.Dataproc.V1.Model.Quantiles.t() | nil,
          :remoteMergedReqsDuration => GoogleApi.Dataproc.V1.Model.Quantiles.t() | nil
        }

  field(:corruptMergedBlockChunks, as: GoogleApi.Dataproc.V1.Model.Quantiles)
  field(:localMergedBlocksFetched, as: GoogleApi.Dataproc.V1.Model.Quantiles)
  field(:localMergedBytesRead, as: GoogleApi.Dataproc.V1.Model.Quantiles)
  field(:localMergedChunksFetched, as: GoogleApi.Dataproc.V1.Model.Quantiles)
  field(:mergedFetchFallbackCount, as: GoogleApi.Dataproc.V1.Model.Quantiles)
  field(:remoteMergedBlocksFetched, as: GoogleApi.Dataproc.V1.Model.Quantiles)
  field(:remoteMergedBytesRead, as: GoogleApi.Dataproc.V1.Model.Quantiles)
  field(:remoteMergedChunksFetched, as: GoogleApi.Dataproc.V1.Model.Quantiles)
  field(:remoteMergedReqsDuration, as: GoogleApi.Dataproc.V1.Model.Quantiles)
end

defimpl Poison.Decoder, for: GoogleApi.Dataproc.V1.Model.ShufflePushReadQuantileMetrics do
  def decode(value, options) do
    GoogleApi.Dataproc.V1.Model.ShufflePushReadQuantileMetrics.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Dataproc.V1.Model.ShufflePushReadQuantileMetrics do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
