# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Dataproc.V1.Model.StreamBlockData do
  @moduledoc """
  Stream Block Data.

  ## Attributes

  *   `deserialized` (*type:* `boolean()`, *default:* `nil`) - 
  *   `diskSize` (*type:* `String.t`, *default:* `nil`) - 
  *   `executorId` (*type:* `String.t`, *default:* `nil`) - 
  *   `hostPort` (*type:* `String.t`, *default:* `nil`) - 
  *   `memSize` (*type:* `String.t`, *default:* `nil`) - 
  *   `name` (*type:* `String.t`, *default:* `nil`) - 
  *   `storageLevel` (*type:* `String.t`, *default:* `nil`) - 
  *   `useDisk` (*type:* `boolean()`, *default:* `nil`) - 
  *   `useMemory` (*type:* `boolean()`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :deserialized => boolean() | nil,
          :diskSize => String.t() | nil,
          :executorId => String.t() | nil,
          :hostPort => String.t() | nil,
          :memSize => String.t() | nil,
          :name => String.t() | nil,
          :storageLevel => String.t() | nil,
          :useDisk => boolean() | nil,
          :useMemory => boolean() | nil
        }

  field(:deserialized)
  field(:diskSize)
  field(:executorId)
  field(:hostPort)
  field(:memSize)
  field(:name)
  field(:storageLevel)
  field(:useDisk)
  field(:useMemory)
end

defimpl Poison.Decoder, for: GoogleApi.Dataproc.V1.Model.StreamBlockData do
  def decode(value, options) do
    GoogleApi.Dataproc.V1.Model.StreamBlockData.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Dataproc.V1.Model.StreamBlockData do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
