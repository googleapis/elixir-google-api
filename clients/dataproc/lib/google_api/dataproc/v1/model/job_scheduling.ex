# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Dataproc.V1.Model.JobScheduling do
  @moduledoc """
  Job scheduling options.

  ## Attributes

  *   `maxFailuresPerHour` (*type:* `integer()`, *default:* `nil`) - Optional. Maximum number of times per hour a driver may be restarted as a result of driver exiting with non-zero code before job is reported failed.A job may be reported as thrashing if driver exits with non-zero code 4 times within 10 minute window.Maximum value is 10.Note: Currently, this restartable job option is not supported in Dataproc workflow template (https://cloud.google.com/dataproc/docs/concepts/workflows/using-workflows#adding_jobs_to_a_template) jobs.
  *   `maxFailuresTotal` (*type:* `integer()`, *default:* `nil`) - Optional. Maximum number of times in total a driver may be restarted as a result of driver exiting with non-zero code before job is reported failed. Maximum value is 240.Note: Currently, this restartable job option is not supported in Dataproc workflow template (https://cloud.google.com/dataproc/docs/concepts/workflows/using-workflows#adding_jobs_to_a_template) jobs.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :maxFailuresPerHour => integer() | nil,
          :maxFailuresTotal => integer() | nil
        }

  field(:maxFailuresPerHour)
  field(:maxFailuresTotal)
end

defimpl Poison.Decoder, for: GoogleApi.Dataproc.V1.Model.JobScheduling do
  def decode(value, options) do
    GoogleApi.Dataproc.V1.Model.JobScheduling.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Dataproc.V1.Model.JobScheduling do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
