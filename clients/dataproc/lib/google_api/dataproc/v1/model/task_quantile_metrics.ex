# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Dataproc.V1.Model.TaskQuantileMetrics do
  @moduledoc """


  ## Attributes

  *   `diskBytesSpilled` (*type:* `GoogleApi.Dataproc.V1.Model.Quantiles.t`, *default:* `nil`) - 
  *   `durationMillis` (*type:* `GoogleApi.Dataproc.V1.Model.Quantiles.t`, *default:* `nil`) - 
  *   `executorCpuTimeNanos` (*type:* `GoogleApi.Dataproc.V1.Model.Quantiles.t`, *default:* `nil`) - 
  *   `executorDeserializeCpuTimeNanos` (*type:* `GoogleApi.Dataproc.V1.Model.Quantiles.t`, *default:* `nil`) - 
  *   `executorDeserializeTimeMillis` (*type:* `GoogleApi.Dataproc.V1.Model.Quantiles.t`, *default:* `nil`) - 
  *   `executorRunTimeMillis` (*type:* `GoogleApi.Dataproc.V1.Model.Quantiles.t`, *default:* `nil`) - 
  *   `gettingResultTimeMillis` (*type:* `GoogleApi.Dataproc.V1.Model.Quantiles.t`, *default:* `nil`) - 
  *   `inputMetrics` (*type:* `GoogleApi.Dataproc.V1.Model.InputQuantileMetrics.t`, *default:* `nil`) - 
  *   `jvmGcTimeMillis` (*type:* `GoogleApi.Dataproc.V1.Model.Quantiles.t`, *default:* `nil`) - 
  *   `memoryBytesSpilled` (*type:* `GoogleApi.Dataproc.V1.Model.Quantiles.t`, *default:* `nil`) - 
  *   `outputMetrics` (*type:* `GoogleApi.Dataproc.V1.Model.OutputQuantileMetrics.t`, *default:* `nil`) - 
  *   `peakExecutionMemoryBytes` (*type:* `GoogleApi.Dataproc.V1.Model.Quantiles.t`, *default:* `nil`) - 
  *   `resultSerializationTimeMillis` (*type:* `GoogleApi.Dataproc.V1.Model.Quantiles.t`, *default:* `nil`) - 
  *   `resultSize` (*type:* `GoogleApi.Dataproc.V1.Model.Quantiles.t`, *default:* `nil`) - 
  *   `schedulerDelayMillis` (*type:* `GoogleApi.Dataproc.V1.Model.Quantiles.t`, *default:* `nil`) - 
  *   `shuffleReadMetrics` (*type:* `GoogleApi.Dataproc.V1.Model.ShuffleReadQuantileMetrics.t`, *default:* `nil`) - 
  *   `shuffleWriteMetrics` (*type:* `GoogleApi.Dataproc.V1.Model.ShuffleWriteQuantileMetrics.t`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :diskBytesSpilled => GoogleApi.Dataproc.V1.Model.Quantiles.t() | nil,
          :durationMillis => GoogleApi.Dataproc.V1.Model.Quantiles.t() | nil,
          :executorCpuTimeNanos => GoogleApi.Dataproc.V1.Model.Quantiles.t() | nil,
          :executorDeserializeCpuTimeNanos => GoogleApi.Dataproc.V1.Model.Quantiles.t() | nil,
          :executorDeserializeTimeMillis => GoogleApi.Dataproc.V1.Model.Quantiles.t() | nil,
          :executorRunTimeMillis => GoogleApi.Dataproc.V1.Model.Quantiles.t() | nil,
          :gettingResultTimeMillis => GoogleApi.Dataproc.V1.Model.Quantiles.t() | nil,
          :inputMetrics => GoogleApi.Dataproc.V1.Model.InputQuantileMetrics.t() | nil,
          :jvmGcTimeMillis => GoogleApi.Dataproc.V1.Model.Quantiles.t() | nil,
          :memoryBytesSpilled => GoogleApi.Dataproc.V1.Model.Quantiles.t() | nil,
          :outputMetrics => GoogleApi.Dataproc.V1.Model.OutputQuantileMetrics.t() | nil,
          :peakExecutionMemoryBytes => GoogleApi.Dataproc.V1.Model.Quantiles.t() | nil,
          :resultSerializationTimeMillis => GoogleApi.Dataproc.V1.Model.Quantiles.t() | nil,
          :resultSize => GoogleApi.Dataproc.V1.Model.Quantiles.t() | nil,
          :schedulerDelayMillis => GoogleApi.Dataproc.V1.Model.Quantiles.t() | nil,
          :shuffleReadMetrics => GoogleApi.Dataproc.V1.Model.ShuffleReadQuantileMetrics.t() | nil,
          :shuffleWriteMetrics =>
            GoogleApi.Dataproc.V1.Model.ShuffleWriteQuantileMetrics.t() | nil
        }

  field(:diskBytesSpilled, as: GoogleApi.Dataproc.V1.Model.Quantiles)
  field(:durationMillis, as: GoogleApi.Dataproc.V1.Model.Quantiles)
  field(:executorCpuTimeNanos, as: GoogleApi.Dataproc.V1.Model.Quantiles)
  field(:executorDeserializeCpuTimeNanos, as: GoogleApi.Dataproc.V1.Model.Quantiles)
  field(:executorDeserializeTimeMillis, as: GoogleApi.Dataproc.V1.Model.Quantiles)
  field(:executorRunTimeMillis, as: GoogleApi.Dataproc.V1.Model.Quantiles)
  field(:gettingResultTimeMillis, as: GoogleApi.Dataproc.V1.Model.Quantiles)
  field(:inputMetrics, as: GoogleApi.Dataproc.V1.Model.InputQuantileMetrics)
  field(:jvmGcTimeMillis, as: GoogleApi.Dataproc.V1.Model.Quantiles)
  field(:memoryBytesSpilled, as: GoogleApi.Dataproc.V1.Model.Quantiles)
  field(:outputMetrics, as: GoogleApi.Dataproc.V1.Model.OutputQuantileMetrics)
  field(:peakExecutionMemoryBytes, as: GoogleApi.Dataproc.V1.Model.Quantiles)
  field(:resultSerializationTimeMillis, as: GoogleApi.Dataproc.V1.Model.Quantiles)
  field(:resultSize, as: GoogleApi.Dataproc.V1.Model.Quantiles)
  field(:schedulerDelayMillis, as: GoogleApi.Dataproc.V1.Model.Quantiles)
  field(:shuffleReadMetrics, as: GoogleApi.Dataproc.V1.Model.ShuffleReadQuantileMetrics)
  field(:shuffleWriteMetrics, as: GoogleApi.Dataproc.V1.Model.ShuffleWriteQuantileMetrics)
end

defimpl Poison.Decoder, for: GoogleApi.Dataproc.V1.Model.TaskQuantileMetrics do
  def decode(value, options) do
    GoogleApi.Dataproc.V1.Model.TaskQuantileMetrics.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Dataproc.V1.Model.TaskQuantileMetrics do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
