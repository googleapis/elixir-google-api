# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Dataproc.V1.Model.ApplicationInfo do
  @moduledoc """
  High level information corresponding to an application.

  ## Attributes

  *   `applicationContextIngestionStatus` (*type:* `String.t`, *default:* `nil`) - 
  *   `applicationId` (*type:* `String.t`, *default:* `nil`) - 
  *   `attempts` (*type:* `list(GoogleApi.Dataproc.V1.Model.ApplicationAttemptInfo.t)`, *default:* `nil`) - 
  *   `coresGranted` (*type:* `integer()`, *default:* `nil`) - 
  *   `coresPerExecutor` (*type:* `integer()`, *default:* `nil`) - 
  *   `maxCores` (*type:* `integer()`, *default:* `nil`) - 
  *   `memoryPerExecutorMb` (*type:* `integer()`, *default:* `nil`) - 
  *   `name` (*type:* `String.t`, *default:* `nil`) - 
  *   `quantileDataStatus` (*type:* `String.t`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :applicationContextIngestionStatus => String.t() | nil,
          :applicationId => String.t() | nil,
          :attempts => list(GoogleApi.Dataproc.V1.Model.ApplicationAttemptInfo.t()) | nil,
          :coresGranted => integer() | nil,
          :coresPerExecutor => integer() | nil,
          :maxCores => integer() | nil,
          :memoryPerExecutorMb => integer() | nil,
          :name => String.t() | nil,
          :quantileDataStatus => String.t() | nil
        }

  field(:applicationContextIngestionStatus)
  field(:applicationId)
  field(:attempts, as: GoogleApi.Dataproc.V1.Model.ApplicationAttemptInfo, type: :list)
  field(:coresGranted)
  field(:coresPerExecutor)
  field(:maxCores)
  field(:memoryPerExecutorMb)
  field(:name)
  field(:quantileDataStatus)
end

defimpl Poison.Decoder, for: GoogleApi.Dataproc.V1.Model.ApplicationInfo do
  def decode(value, options) do
    GoogleApi.Dataproc.V1.Model.ApplicationInfo.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Dataproc.V1.Model.ApplicationInfo do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
