# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Dataproc.V1.Model.JobsSummary do
  @moduledoc """
  Data related to Jobs page summary

  ## Attributes

  *   `activeJobs` (*type:* `integer()`, *default:* `nil`) - Number of active jobs
  *   `applicationId` (*type:* `String.t`, *default:* `nil`) - Spark Application Id
  *   `attempts` (*type:* `list(GoogleApi.Dataproc.V1.Model.ApplicationAttemptInfo.t)`, *default:* `nil`) - Attempts info
  *   `completedJobs` (*type:* `integer()`, *default:* `nil`) - Number of completed jobs
  *   `failedJobs` (*type:* `integer()`, *default:* `nil`) - Number of failed jobs
  *   `schedulingMode` (*type:* `String.t`, *default:* `nil`) - Spark Scheduling mode
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :activeJobs => integer() | nil,
          :applicationId => String.t() | nil,
          :attempts => list(GoogleApi.Dataproc.V1.Model.ApplicationAttemptInfo.t()) | nil,
          :completedJobs => integer() | nil,
          :failedJobs => integer() | nil,
          :schedulingMode => String.t() | nil
        }

  field(:activeJobs)
  field(:applicationId)
  field(:attempts, as: GoogleApi.Dataproc.V1.Model.ApplicationAttemptInfo, type: :list)
  field(:completedJobs)
  field(:failedJobs)
  field(:schedulingMode)
end

defimpl Poison.Decoder, for: GoogleApi.Dataproc.V1.Model.JobsSummary do
  def decode(value, options) do
    GoogleApi.Dataproc.V1.Model.JobsSummary.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Dataproc.V1.Model.JobsSummary do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
