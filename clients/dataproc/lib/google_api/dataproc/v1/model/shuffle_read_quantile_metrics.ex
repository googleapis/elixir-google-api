# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Dataproc.V1.Model.ShuffleReadQuantileMetrics do
  @moduledoc """


  ## Attributes

  *   `fetchWaitTimeMillis` (*type:* `GoogleApi.Dataproc.V1.Model.Quantiles.t`, *default:* `nil`) - 
  *   `localBlocksFetched` (*type:* `GoogleApi.Dataproc.V1.Model.Quantiles.t`, *default:* `nil`) - 
  *   `readBytes` (*type:* `GoogleApi.Dataproc.V1.Model.Quantiles.t`, *default:* `nil`) - 
  *   `readRecords` (*type:* `GoogleApi.Dataproc.V1.Model.Quantiles.t`, *default:* `nil`) - 
  *   `remoteBlocksFetched` (*type:* `GoogleApi.Dataproc.V1.Model.Quantiles.t`, *default:* `nil`) - 
  *   `remoteBytesRead` (*type:* `GoogleApi.Dataproc.V1.Model.Quantiles.t`, *default:* `nil`) - 
  *   `remoteBytesReadToDisk` (*type:* `GoogleApi.Dataproc.V1.Model.Quantiles.t`, *default:* `nil`) - 
  *   `remoteReqsDuration` (*type:* `GoogleApi.Dataproc.V1.Model.Quantiles.t`, *default:* `nil`) - 
  *   `shufflePushReadMetrics` (*type:* `GoogleApi.Dataproc.V1.Model.ShufflePushReadQuantileMetrics.t`, *default:* `nil`) - 
  *   `totalBlocksFetched` (*type:* `GoogleApi.Dataproc.V1.Model.Quantiles.t`, *default:* `nil`) - 
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :fetchWaitTimeMillis => GoogleApi.Dataproc.V1.Model.Quantiles.t() | nil,
          :localBlocksFetched => GoogleApi.Dataproc.V1.Model.Quantiles.t() | nil,
          :readBytes => GoogleApi.Dataproc.V1.Model.Quantiles.t() | nil,
          :readRecords => GoogleApi.Dataproc.V1.Model.Quantiles.t() | nil,
          :remoteBlocksFetched => GoogleApi.Dataproc.V1.Model.Quantiles.t() | nil,
          :remoteBytesRead => GoogleApi.Dataproc.V1.Model.Quantiles.t() | nil,
          :remoteBytesReadToDisk => GoogleApi.Dataproc.V1.Model.Quantiles.t() | nil,
          :remoteReqsDuration => GoogleApi.Dataproc.V1.Model.Quantiles.t() | nil,
          :shufflePushReadMetrics =>
            GoogleApi.Dataproc.V1.Model.ShufflePushReadQuantileMetrics.t() | nil,
          :totalBlocksFetched => GoogleApi.Dataproc.V1.Model.Quantiles.t() | nil
        }

  field(:fetchWaitTimeMillis, as: GoogleApi.Dataproc.V1.Model.Quantiles)
  field(:localBlocksFetched, as: GoogleApi.Dataproc.V1.Model.Quantiles)
  field(:readBytes, as: GoogleApi.Dataproc.V1.Model.Quantiles)
  field(:readRecords, as: GoogleApi.Dataproc.V1.Model.Quantiles)
  field(:remoteBlocksFetched, as: GoogleApi.Dataproc.V1.Model.Quantiles)
  field(:remoteBytesRead, as: GoogleApi.Dataproc.V1.Model.Quantiles)
  field(:remoteBytesReadToDisk, as: GoogleApi.Dataproc.V1.Model.Quantiles)
  field(:remoteReqsDuration, as: GoogleApi.Dataproc.V1.Model.Quantiles)
  field(:shufflePushReadMetrics, as: GoogleApi.Dataproc.V1.Model.ShufflePushReadQuantileMetrics)
  field(:totalBlocksFetched, as: GoogleApi.Dataproc.V1.Model.Quantiles)
end

defimpl Poison.Decoder, for: GoogleApi.Dataproc.V1.Model.ShuffleReadQuantileMetrics do
  def decode(value, options) do
    GoogleApi.Dataproc.V1.Model.ShuffleReadQuantileMetrics.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Dataproc.V1.Model.ShuffleReadQuantileMetrics do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
