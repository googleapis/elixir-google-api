# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.MigrationCenter.V1.Model.DatabaseDeploymentTopology do
  @moduledoc """
  Details of database deployment's topology.

  ## Attributes

  *   `coreCount` (*type:* `integer()`, *default:* `nil`) - Optional. Number of total logical cores.
  *   `coreLimit` (*type:* `integer()`, *default:* `nil`) - Optional. Number of total logical cores limited by db deployment.
  *   `diskAllocatedBytes` (*type:* `String.t`, *default:* `nil`) - Optional. Disk allocated in bytes.
  *   `diskUsedBytes` (*type:* `String.t`, *default:* `nil`) - Optional. Disk used in bytes.
  *   `instances` (*type:* `list(GoogleApi.MigrationCenter.V1.Model.DatabaseInstance.t)`, *default:* `nil`) - Optional. List of database instances.
  *   `memoryBytes` (*type:* `String.t`, *default:* `nil`) - Optional. Total memory in bytes.
  *   `memoryLimitBytes` (*type:* `String.t`, *default:* `nil`) - Optional. Total memory in bytes limited by db deployment.
  *   `physicalCoreCount` (*type:* `integer()`, *default:* `nil`) - Optional. Number of total physical cores.
  *   `physicalCoreLimit` (*type:* `integer()`, *default:* `nil`) - Optional. Number of total physical cores limited by db deployment.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :coreCount => integer() | nil,
          :coreLimit => integer() | nil,
          :diskAllocatedBytes => String.t() | nil,
          :diskUsedBytes => String.t() | nil,
          :instances => list(GoogleApi.MigrationCenter.V1.Model.DatabaseInstance.t()) | nil,
          :memoryBytes => String.t() | nil,
          :memoryLimitBytes => String.t() | nil,
          :physicalCoreCount => integer() | nil,
          :physicalCoreLimit => integer() | nil
        }

  field(:coreCount)
  field(:coreLimit)
  field(:diskAllocatedBytes)
  field(:diskUsedBytes)
  field(:instances, as: GoogleApi.MigrationCenter.V1.Model.DatabaseInstance, type: :list)
  field(:memoryBytes)
  field(:memoryLimitBytes)
  field(:physicalCoreCount)
  field(:physicalCoreLimit)
end

defimpl Poison.Decoder, for: GoogleApi.MigrationCenter.V1.Model.DatabaseDeploymentTopology do
  def decode(value, options) do
    GoogleApi.MigrationCenter.V1.Model.DatabaseDeploymentTopology.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.MigrationCenter.V1.Model.DatabaseDeploymentTopology do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
