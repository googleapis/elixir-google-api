# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.MigrationCenter.V1.Model.PostgreSqlSetting do
  @moduledoc """
  PostgreSql setting.

  ## Attributes

  *   `boolValue` (*type:* `boolean()`, *default:* `nil`) - Required. The setting boolean value.
  *   `intValue` (*type:* `String.t`, *default:* `nil`) - Required. The setting int value.
  *   `realValue` (*type:* `number()`, *default:* `nil`) - Required. The setting real value.
  *   `setting` (*type:* `String.t`, *default:* `nil`) - Required. The setting name.
  *   `source` (*type:* `String.t`, *default:* `nil`) - Required. The setting source.
  *   `stringValue` (*type:* `String.t`, *default:* `nil`) - Required. The setting string value. Notice that enum values are stored as strings.
  *   `unit` (*type:* `String.t`, *default:* `nil`) - Optional. The setting unit.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :boolValue => boolean() | nil,
          :intValue => String.t() | nil,
          :realValue => number() | nil,
          :setting => String.t() | nil,
          :source => String.t() | nil,
          :stringValue => String.t() | nil,
          :unit => String.t() | nil
        }

  field(:boolValue)
  field(:intValue)
  field(:realValue)
  field(:setting)
  field(:source)
  field(:stringValue)
  field(:unit)
end

defimpl Poison.Decoder, for: GoogleApi.MigrationCenter.V1.Model.PostgreSqlSetting do
  def decode(value, options) do
    GoogleApi.MigrationCenter.V1.Model.PostgreSqlSetting.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.MigrationCenter.V1.Model.PostgreSqlSetting do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
