# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.MyBusinessBusinessInformation.V1.Model.OpenInfo do
  @moduledoc """
  Information related to the opening state of the business.

  ## Attributes

  *   `canReopen` (*type:* `boolean()`, *default:* `nil`) - Output only. Indicates whether this business is eligible for re-open.
  *   `openingDate` (*type:* `GoogleApi.MyBusinessBusinessInformation.V1.Model.Date.t`, *default:* `nil`) - Optional. The date on which the location first opened. If the exact day is not known, month and year only can be provided. The date must be in the past or be no more than one year in the future.
  *   `status` (*type:* `String.t`, *default:* `nil`) - Required. Indicates whether or not the Location is currently open for business. All locations are open by default, unless updated to be closed.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :canReopen => boolean() | nil,
          :openingDate => GoogleApi.MyBusinessBusinessInformation.V1.Model.Date.t() | nil,
          :status => String.t() | nil
        }

  field(:canReopen)
  field(:openingDate, as: GoogleApi.MyBusinessBusinessInformation.V1.Model.Date)
  field(:status)
end

defimpl Poison.Decoder, for: GoogleApi.MyBusinessBusinessInformation.V1.Model.OpenInfo do
  def decode(value, options) do
    GoogleApi.MyBusinessBusinessInformation.V1.Model.OpenInfo.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.MyBusinessBusinessInformation.V1.Model.OpenInfo do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
