# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Fitness.V1.Model.AggregateRequest do
  @moduledoc """
  Next id: 10

  ## Attributes

  *   `aggregateBy` (*type:* `list(GoogleApi.Fitness.V1.Model.AggregateBy.t)`, *default:* `nil`) - The specification of data to be aggregated. At least one aggregateBy spec must be provided. All data that is specified will be aggregated using the same bucketing criteria. There will be one dataset in the response for every aggregateBy spec.
  *   `bucketByActivitySegment` (*type:* `GoogleApi.Fitness.V1.Model.BucketByActivity.t`, *default:* `nil`) - Specifies that data be aggregated each activity segment recorded for a user. Similar to bucketByActivitySegment, but bucketing is done for each activity segment rather than all segments of the same type. Mutually exclusive of other bucketing specifications.
  *   `bucketByActivityType` (*type:* `GoogleApi.Fitness.V1.Model.BucketByActivity.t`, *default:* `nil`) - Specifies that data be aggregated by the type of activity being performed when the data was recorded. All data that was recorded during a certain activity type (.for the given time range) will be aggregated into the same bucket. Data that was recorded while the user was not active will not be included in the response. Mutually exclusive of other bucketing specifications.
  *   `bucketBySession` (*type:* `GoogleApi.Fitness.V1.Model.BucketBySession.t`, *default:* `nil`) - Specifies that data be aggregated by user sessions. Data that does not fall within the time range of a session will not be included in the response. Mutually exclusive of other bucketing specifications.
  *   `bucketByTime` (*type:* `GoogleApi.Fitness.V1.Model.BucketByTime.t`, *default:* `nil`) - Specifies that data be aggregated by a single time interval. Mutually exclusive of other bucketing specifications.
  *   `endTimeMillis` (*type:* `String.t`, *default:* `nil`) - The end of a window of time. Data that intersects with this time window will be aggregated. The time is in milliseconds since epoch, inclusive. The maximum allowed difference between start_time_millis // and end_time_millis is 7776000000 (roughly 90 days).
  *   `filteredDataQualityStandard` (*type:* `list(String.t)`, *default:* `nil`) - DO NOT POPULATE THIS FIELD. It is ignored.
  *   `startTimeMillis` (*type:* `String.t`, *default:* `nil`) - The start of a window of time. Data that intersects with this time window will be aggregated. The time is in milliseconds since epoch, inclusive.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :aggregateBy => list(GoogleApi.Fitness.V1.Model.AggregateBy.t()) | nil,
          :bucketByActivitySegment => GoogleApi.Fitness.V1.Model.BucketByActivity.t() | nil,
          :bucketByActivityType => GoogleApi.Fitness.V1.Model.BucketByActivity.t() | nil,
          :bucketBySession => GoogleApi.Fitness.V1.Model.BucketBySession.t() | nil,
          :bucketByTime => GoogleApi.Fitness.V1.Model.BucketByTime.t() | nil,
          :endTimeMillis => String.t() | nil,
          :filteredDataQualityStandard => list(String.t()) | nil,
          :startTimeMillis => String.t() | nil
        }

  field(:aggregateBy, as: GoogleApi.Fitness.V1.Model.AggregateBy, type: :list)
  field(:bucketByActivitySegment, as: GoogleApi.Fitness.V1.Model.BucketByActivity)
  field(:bucketByActivityType, as: GoogleApi.Fitness.V1.Model.BucketByActivity)
  field(:bucketBySession, as: GoogleApi.Fitness.V1.Model.BucketBySession)
  field(:bucketByTime, as: GoogleApi.Fitness.V1.Model.BucketByTime)
  field(:endTimeMillis)
  field(:filteredDataQualityStandard, type: :list)
  field(:startTimeMillis)
end

defimpl Poison.Decoder, for: GoogleApi.Fitness.V1.Model.AggregateRequest do
  def decode(value, options) do
    GoogleApi.Fitness.V1.Model.AggregateRequest.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Fitness.V1.Model.AggregateRequest do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
