# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.NetworkServices.V1.Model.TlsRouteRouteRule do
  @moduledoc """
  Specifies how to match traffic and how to route traffic when traffic is matched.

  ## Attributes

  *   `action` (*type:* `GoogleApi.NetworkServices.V1.Model.TlsRouteRouteAction.t`, *default:* `nil`) - Required. The detailed rule defining how to route matched traffic.
  *   `matches` (*type:* `list(GoogleApi.NetworkServices.V1.Model.TlsRouteRouteMatch.t)`, *default:* `nil`) - Required. RouteMatch defines the predicate used to match requests to a given action. Multiple match types are "OR"ed for evaluation. Atleast one RouteMatch must be supplied.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :action => GoogleApi.NetworkServices.V1.Model.TlsRouteRouteAction.t() | nil,
          :matches => list(GoogleApi.NetworkServices.V1.Model.TlsRouteRouteMatch.t()) | nil
        }

  field(:action, as: GoogleApi.NetworkServices.V1.Model.TlsRouteRouteAction)
  field(:matches, as: GoogleApi.NetworkServices.V1.Model.TlsRouteRouteMatch, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.NetworkServices.V1.Model.TlsRouteRouteRule do
  def decode(value, options) do
    GoogleApi.NetworkServices.V1.Model.TlsRouteRouteRule.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.NetworkServices.V1.Model.TlsRouteRouteRule do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
