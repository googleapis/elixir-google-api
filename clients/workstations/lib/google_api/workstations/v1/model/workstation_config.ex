# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Workstations.V1.Model.WorkstationConfig do
  @moduledoc """
  A workstation configuration resource in the Cloud Workstations API. Workstation configurations act as templates for workstations. The workstation configuration defines details such as the workstation virtual machine (VM) instance type, persistent storage, container image defining environment, which IDE or Code Editor to use, and more. Administrators and platform teams can also use [Identity and Access Management (IAM)](https://cloud.google.com/iam/docs/overview) rules to grant access to teams or to individual developers.

  ## Attributes

  *   `allowedPorts` (*type:* `list(GoogleApi.Workstations.V1.Model.PortRange.t)`, *default:* `nil`) - Optional. A list of PortRanges specifying single ports or ranges of ports that are externally accessible in the workstation. Allowed ports must be one of 22, 80, or within range 1024-65535. If not specified defaults to ports 22, 80, and ports 1024-65535.
  *   `annotations` (*type:* `map()`, *default:* `nil`) - Optional. Client-specified annotations.
  *   `conditions` (*type:* `list(GoogleApi.Workstations.V1.Model.Status.t)`, *default:* `nil`) - Output only. Status conditions describing the current resource state.
  *   `container` (*type:* `GoogleApi.Workstations.V1.Model.Container.t`, *default:* `nil`) - Optional. Container that runs upon startup for each workstation using this workstation configuration.
  *   `createTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. Time when this workstation configuration was created.
  *   `degraded` (*type:* `boolean()`, *default:* `nil`) - Output only. Whether this resource is degraded, in which case it may require user action to restore full functionality. See also the conditions field.
  *   `deleteTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. Time when this workstation configuration was soft-deleted.
  *   `disableTcpConnections` (*type:* `boolean()`, *default:* `nil`) - Optional. Disables support for plain TCP connections in the workstation. By default the service supports TCP connections through a websocket relay. Setting this option to true disables that relay, which prevents the usage of services that require plain TCP connections, such as SSH. When enabled, all communication must occur over HTTPS or WSS.
  *   `displayName` (*type:* `String.t`, *default:* `nil`) - Optional. Human-readable name for this workstation configuration.
  *   `enableAuditAgent` (*type:* `boolean()`, *default:* `nil`) - Optional. Whether to enable Linux `auditd` logging on the workstation. When enabled, a service_account must also be specified that has `roles/logging.logWriter` and `roles/monitoring.metricWriter` on the project. Operating system audit logging is distinct from [Cloud Audit Logs](https://cloud.google.com/workstations/docs/audit-logging) and [Container output logging](http://cloud/workstations/docs/container-output-logging#overview). Operating system audit logs are available in the [Cloud Logging](https://cloud.google.com/logging/docs) console by querying: resource.type="gce_instance" log_name:"/logs/linux-auditd"
  *   `encryptionKey` (*type:* `GoogleApi.Workstations.V1.Model.CustomerEncryptionKey.t`, *default:* `nil`) - Immutable. Encrypts resources of this workstation configuration using a customer-managed encryption key (CMEK). If specified, the boot disk of the Compute Engine instance and the persistent disk are encrypted using this encryption key. If this field is not set, the disks are encrypted using a generated key. Customer-managed encryption keys do not protect disk metadata. If the customer-managed encryption key is rotated, when the workstation instance is stopped, the system attempts to recreate the persistent disk with the new version of the key. Be sure to keep older versions of the key until the persistent disk is recreated. Otherwise, data on the persistent disk might be lost. If the encryption key is revoked, the workstation session automatically stops within 7 hours. Immutable after the workstation configuration is created.
  *   `ephemeralDirectories` (*type:* `list(GoogleApi.Workstations.V1.Model.EphemeralDirectory.t)`, *default:* `nil`) - Optional. Ephemeral directories which won't persist across workstation sessions.
  *   `etag` (*type:* `String.t`, *default:* `nil`) - Optional. Checksum computed by the server. May be sent on update and delete requests to make sure that the client has an up-to-date value before proceeding.
  *   `grantWorkstationAdminRoleOnCreate` (*type:* `boolean()`, *default:* `nil`) - Optional. Grant creator of a workstation `roles/workstations.policyAdmin` role along with `roles/workstations.user` role on the workstation created by them. This allows workstation users to share access to either their entire workstation, or individual ports. Defaults to false.
  *   `host` (*type:* `GoogleApi.Workstations.V1.Model.Host.t`, *default:* `nil`) - Optional. Runtime host for the workstation.
  *   `idleTimeout` (*type:* `String.t`, *default:* `nil`) - Optional. Number of seconds to wait before automatically stopping a workstation after it last received user traffic. A value of `"0s"` indicates that Cloud Workstations VMs created with this configuration should never time out due to idleness. Provide [duration](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#duration) terminated by `s` for seconds—for example, `"7200s"` (2 hours). The default is `"1200s"` (20 minutes).
  *   `labels` (*type:* `map()`, *default:* `nil`) - Optional. [Labels](https://cloud.google.com/workstations/docs/label-resources) that are applied to the workstation configuration and that are also propagated to the underlying Compute Engine resources.
  *   `maxUsableWorkstations` (*type:* `integer()`, *default:* `nil`) - Optional. Maximum number of workstations under this config a user can have `workstations.workstation.use` permission on. Only enforced on CreateWorkstation API calls on the user issuing the API request. Can be overridden by: - granting a user workstations.workstationConfigs.exemptMaxUsableWorkstationLimit permission, or - having a user with that permission create a workstation and granting another user `workstations.workstation.use` permission on that workstation. If not specified defaults to 0 which indicates unlimited.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Identifier. Full name of this workstation configuration.
  *   `persistentDirectories` (*type:* `list(GoogleApi.Workstations.V1.Model.PersistentDirectory.t)`, *default:* `nil`) - Optional. Directories to persist across workstation sessions.
  *   `readinessChecks` (*type:* `list(GoogleApi.Workstations.V1.Model.ReadinessCheck.t)`, *default:* `nil`) - Optional. Readiness checks to perform when starting a workstation using this workstation configuration. Mark a workstation as running only after all specified readiness checks return 200 status codes.
  *   `reconciling` (*type:* `boolean()`, *default:* `nil`) - Output only. Indicates whether this workstation configuration is currently being updated to match its intended state.
  *   `replicaZones` (*type:* `list(String.t)`, *default:* `nil`) - Optional. Immutable. Specifies the zones used to replicate the VM and disk resources within the region. If set, exactly two zones within the workstation cluster's region must be specified—for example, `['us-central1-a', 'us-central1-f']`. If this field is empty, two default zones within the region are used. Immutable after the workstation configuration is created.
  *   `runningTimeout` (*type:* `String.t`, *default:* `nil`) - Optional. Number of seconds that a workstation can run until it is automatically shut down. We recommend that workstations be shut down daily to reduce costs and so that security updates can be applied upon restart. The idle_timeout and running_timeout fields are independent of each other. Note that the running_timeout field shuts down VMs after the specified time, regardless of whether or not the VMs are idle. Provide duration terminated by `s` for seconds—for example, `"54000s"` (15 hours). Defaults to `"43200s"` (12 hours). A value of `"0s"` indicates that workstations using this configuration should never time out. If encryption_key is set, it must be greater than `"0s"` and less than `"86400s"` (24 hours). Warning: A value of `"0s"` indicates that Cloud Workstations VMs created with this configuration have no maximum running time. This is strongly discouraged because you incur costs and will not pick up security updates.
  *   `uid` (*type:* `String.t`, *default:* `nil`) - Output only. A system-assigned unique identifier for this workstation configuration.
  *   `updateTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. Time when this workstation configuration was most recently updated.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :allowedPorts => list(GoogleApi.Workstations.V1.Model.PortRange.t()) | nil,
          :annotations => map() | nil,
          :conditions => list(GoogleApi.Workstations.V1.Model.Status.t()) | nil,
          :container => GoogleApi.Workstations.V1.Model.Container.t() | nil,
          :createTime => DateTime.t() | nil,
          :degraded => boolean() | nil,
          :deleteTime => DateTime.t() | nil,
          :disableTcpConnections => boolean() | nil,
          :displayName => String.t() | nil,
          :enableAuditAgent => boolean() | nil,
          :encryptionKey => GoogleApi.Workstations.V1.Model.CustomerEncryptionKey.t() | nil,
          :ephemeralDirectories =>
            list(GoogleApi.Workstations.V1.Model.EphemeralDirectory.t()) | nil,
          :etag => String.t() | nil,
          :grantWorkstationAdminRoleOnCreate => boolean() | nil,
          :host => GoogleApi.Workstations.V1.Model.Host.t() | nil,
          :idleTimeout => String.t() | nil,
          :labels => map() | nil,
          :maxUsableWorkstations => integer() | nil,
          :name => String.t() | nil,
          :persistentDirectories =>
            list(GoogleApi.Workstations.V1.Model.PersistentDirectory.t()) | nil,
          :readinessChecks => list(GoogleApi.Workstations.V1.Model.ReadinessCheck.t()) | nil,
          :reconciling => boolean() | nil,
          :replicaZones => list(String.t()) | nil,
          :runningTimeout => String.t() | nil,
          :uid => String.t() | nil,
          :updateTime => DateTime.t() | nil
        }

  field(:allowedPorts, as: GoogleApi.Workstations.V1.Model.PortRange, type: :list)
  field(:annotations, type: :map)
  field(:conditions, as: GoogleApi.Workstations.V1.Model.Status, type: :list)
  field(:container, as: GoogleApi.Workstations.V1.Model.Container)
  field(:createTime, as: DateTime)
  field(:degraded)
  field(:deleteTime, as: DateTime)
  field(:disableTcpConnections)
  field(:displayName)
  field(:enableAuditAgent)
  field(:encryptionKey, as: GoogleApi.Workstations.V1.Model.CustomerEncryptionKey)

  field(:ephemeralDirectories, as: GoogleApi.Workstations.V1.Model.EphemeralDirectory, type: :list)

  field(:etag)
  field(:grantWorkstationAdminRoleOnCreate)
  field(:host, as: GoogleApi.Workstations.V1.Model.Host)
  field(:idleTimeout)
  field(:labels, type: :map)
  field(:maxUsableWorkstations)
  field(:name)

  field(:persistentDirectories,
    as: GoogleApi.Workstations.V1.Model.PersistentDirectory,
    type: :list
  )

  field(:readinessChecks, as: GoogleApi.Workstations.V1.Model.ReadinessCheck, type: :list)
  field(:reconciling)
  field(:replicaZones, type: :list)
  field(:runningTimeout)
  field(:uid)
  field(:updateTime, as: DateTime)
end

defimpl Poison.Decoder, for: GoogleApi.Workstations.V1.Model.WorkstationConfig do
  def decode(value, options) do
    GoogleApi.Workstations.V1.Model.WorkstationConfig.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Workstations.V1.Model.WorkstationConfig do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
