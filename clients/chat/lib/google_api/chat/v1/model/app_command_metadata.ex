# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Chat.V1.Model.AppCommandMetadata do
  @moduledoc """
  Metadata associated with app commands. App commands are a way for users to invoke and interact with a Chat app. These can be slash commands typed in the compose box, or items directly selected from the integration menu. For more information, see [Respond to quick commands](https://developers.google.com/workspace/chat/quick-commands).

  ## Attributes

  *   `appCommandId` (*type:* `integer()`, *default:* `nil`) - The command ID for the given app interaction.
  *   `appCommandType` (*type:* `String.t`, *default:* `nil`) - The type of the app command.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :appCommandId => integer() | nil,
          :appCommandType => String.t() | nil
        }

  field(:appCommandId)
  field(:appCommandType)
end

defimpl Poison.Decoder, for: GoogleApi.Chat.V1.Model.AppCommandMetadata do
  def decode(value, options) do
    GoogleApi.Chat.V1.Model.AppCommandMetadata.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Chat.V1.Model.AppCommandMetadata do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
