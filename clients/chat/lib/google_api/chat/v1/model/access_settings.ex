# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Chat.V1.Model.AccessSettings do
  @moduledoc """
  Represents the [access setting](https://support.google.com/chat/answer/11971020) of the space.

  ## Attributes

  *   `accessState` (*type:* `String.t`, *default:* `nil`) - Output only. Indicates the access state of the space.
  *   `audience` (*type:* `String.t`, *default:* `nil`) - Optional. The resource name of the [target audience](https://support.google.com/a/answer/9934697) who can discover the space, join the space, and preview the messages in the space. If unset, only users or Google Groups who have been individually invited or added to the space can access it. For details, see [Make a space discoverable to a target audience](https://developers.google.com/workspace/chat/space-target-audience). Format: `audiences/{audience}` To use the default target audience for the Google Workspace organization, set to `audiences/default`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :accessState => String.t() | nil,
          :audience => String.t() | nil
        }

  field(:accessState)
  field(:audience)
end

defimpl Poison.Decoder, for: GoogleApi.Chat.V1.Model.AccessSettings do
  def decode(value, options) do
    GoogleApi.Chat.V1.Model.AccessSettings.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Chat.V1.Model.AccessSettings do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
