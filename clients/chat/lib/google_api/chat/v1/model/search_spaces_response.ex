# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Chat.V1.Model.SearchSpacesResponse do
  @moduledoc """
  Response with a list of spaces corresponding to the search spaces request.

  ## Attributes

  *   `nextPageToken` (*type:* `String.t`, *default:* `nil`) - A token that can be used to retrieve the next page. If this field is empty, there are no subsequent pages.
  *   `spaces` (*type:* `list(GoogleApi.Chat.V1.Model.Space.t)`, *default:* `nil`) - A page of the requested spaces.
  *   `totalSize` (*type:* `integer()`, *default:* `nil`) - The total number of spaces that match the query, across all pages. If the result is over 10,000 spaces, this value is an estimate.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :nextPageToken => String.t() | nil,
          :spaces => list(GoogleApi.Chat.V1.Model.Space.t()) | nil,
          :totalSize => integer() | nil
        }

  field(:nextPageToken)
  field(:spaces, as: GoogleApi.Chat.V1.Model.Space, type: :list)
  field(:totalSize)
end

defimpl Poison.Decoder, for: GoogleApi.Chat.V1.Model.SearchSpacesResponse do
  def decode(value, options) do
    GoogleApi.Chat.V1.Model.SearchSpacesResponse.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Chat.V1.Model.SearchSpacesResponse do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
