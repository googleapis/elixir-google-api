# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Config.V1.Model.LockInfo do
  @moduledoc """
  Details about the lock which locked the deployment.

  ## Attributes

  *   `createTime` (*type:* `DateTime.t`, *default:* `nil`) - Time that the lock was taken.
  *   `info` (*type:* `String.t`, *default:* `nil`) - Extra information to store with the lock, provided by the caller.
  *   `lockId` (*type:* `String.t`, *default:* `nil`) - Unique ID for the lock to be overridden with generation ID in the backend.
  *   `operation` (*type:* `String.t`, *default:* `nil`) - Terraform operation, provided by the caller.
  *   `version` (*type:* `String.t`, *default:* `nil`) - Terraform version
  *   `who` (*type:* `String.t`, *default:* `nil`) - user@hostname when available
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :createTime => DateTime.t() | nil,
          :info => String.t() | nil,
          :lockId => String.t() | nil,
          :operation => String.t() | nil,
          :version => String.t() | nil,
          :who => String.t() | nil
        }

  field(:createTime, as: DateTime)
  field(:info)
  field(:lockId)
  field(:operation)
  field(:version)
  field(:who)
end

defimpl Poison.Decoder, for: GoogleApi.Config.V1.Model.LockInfo do
  def decode(value, options) do
    GoogleApi.Config.V1.Model.LockInfo.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Config.V1.Model.LockInfo do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
