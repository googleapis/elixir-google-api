# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Config.V1.Model.Preview do
  @moduledoc """
  A preview represents a set of actions Infra Manager would perform to move the resources towards the desired state as specified in the configuration.

  ## Attributes

  *   `annotations` (*type:* `map()`, *default:* `nil`) - Optional. Arbitrary key-value metadata storage e.g. to help client tools identifiy preview during automation. See https://google.aip.dev/148#annotations for details on format and size limitations.
  *   `artifactsGcsBucket` (*type:* `String.t`, *default:* `nil`) - Optional. User-defined location of Cloud Build logs, artifacts, and in Google Cloud Storage. Format: `gs://{bucket}/{folder}` A default bucket will be bootstrapped if the field is not set or empty Default Bucket Format: `gs://--blueprint-config` Constraints: - The bucket needs to be in the same project as the deployment - The path cannot be within the path of `gcs_source` If omitted and deployment resource ref provided has artifacts_gcs_bucket defined, that artifact bucket is used.
  *   `build` (*type:* `String.t`, *default:* `nil`) - Output only. Cloud Build instance UUID associated with this preview.
  *   `createTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. Time the preview was created.
  *   `deployment` (*type:* `String.t`, *default:* `nil`) - Optional. Optional deployment reference. If specified, the preview will be performed using the provided deployment's current state and use any relevant fields from the deployment unless explicitly specified in the preview create request.
  *   `errorCode` (*type:* `String.t`, *default:* `nil`) - Output only. Code describing any errors that may have occurred.
  *   `errorLogs` (*type:* `String.t`, *default:* `nil`) - Output only. Link to tf-error.ndjson file, which contains the full list of the errors encountered during a Terraform preview. Format: `gs://{bucket}/{object}`.
  *   `errorStatus` (*type:* `GoogleApi.Config.V1.Model.Status.t`, *default:* `nil`) - Output only. Additional information regarding the current state.
  *   `labels` (*type:* `map()`, *default:* `nil`) - Optional. User-defined labels for the preview.
  *   `logs` (*type:* `String.t`, *default:* `nil`) - Output only. Location of preview logs in `gs://{bucket}/{object}` format.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Identifier. Resource name of the preview. Resource name can be user provided or server generated ID if unspecified. Format: `projects/{project}/locations/{location}/previews/{preview}`
  *   `previewArtifacts` (*type:* `GoogleApi.Config.V1.Model.PreviewArtifacts.t`, *default:* `nil`) - Output only. Artifacts from preview.
  *   `previewMode` (*type:* `String.t`, *default:* `nil`) - Optional. Current mode of preview.
  *   `serviceAccount` (*type:* `String.t`, *default:* `nil`) - Optional. User-specified Service Account (SA) credentials to be used when previewing resources. Format: `projects/{projectID}/serviceAccounts/{serviceAccount}`
  *   `state` (*type:* `String.t`, *default:* `nil`) - Output only. Current state of the preview.
  *   `terraformBlueprint` (*type:* `GoogleApi.Config.V1.Model.TerraformBlueprint.t`, *default:* `nil`) - The terraform blueprint to preview.
  *   `tfErrors` (*type:* `list(GoogleApi.Config.V1.Model.TerraformError.t)`, *default:* `nil`) - Output only. Summary of errors encountered during Terraform preview. It has a size limit of 10, i.e. only top 10 errors will be summarized here.
  *   `tfVersion` (*type:* `String.t`, *default:* `nil`) - Output only. The current Terraform version set on the preview. It is in the format of "Major.Minor.Patch", for example, "1.3.10".
  *   `tfVersionConstraint` (*type:* `String.t`, *default:* `nil`) - Optional. The user-specified Terraform version constraint. Example: "=1.3.10".
  *   `workerPool` (*type:* `String.t`, *default:* `nil`) - Optional. The user-specified Worker Pool resource in which the Cloud Build job will execute. Format projects/{project}/locations/{location}/workerPools/{workerPoolId} If this field is unspecified, the default Cloud Build worker pool will be used. If omitted and deployment resource ref provided has worker_pool defined, that worker pool is used.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :annotations => map() | nil,
          :artifactsGcsBucket => String.t() | nil,
          :build => String.t() | nil,
          :createTime => DateTime.t() | nil,
          :deployment => String.t() | nil,
          :errorCode => String.t() | nil,
          :errorLogs => String.t() | nil,
          :errorStatus => GoogleApi.Config.V1.Model.Status.t() | nil,
          :labels => map() | nil,
          :logs => String.t() | nil,
          :name => String.t() | nil,
          :previewArtifacts => GoogleApi.Config.V1.Model.PreviewArtifacts.t() | nil,
          :previewMode => String.t() | nil,
          :serviceAccount => String.t() | nil,
          :state => String.t() | nil,
          :terraformBlueprint => GoogleApi.Config.V1.Model.TerraformBlueprint.t() | nil,
          :tfErrors => list(GoogleApi.Config.V1.Model.TerraformError.t()) | nil,
          :tfVersion => String.t() | nil,
          :tfVersionConstraint => String.t() | nil,
          :workerPool => String.t() | nil
        }

  field(:annotations, type: :map)
  field(:artifactsGcsBucket)
  field(:build)
  field(:createTime, as: DateTime)
  field(:deployment)
  field(:errorCode)
  field(:errorLogs)
  field(:errorStatus, as: GoogleApi.Config.V1.Model.Status)
  field(:labels, type: :map)
  field(:logs)
  field(:name)
  field(:previewArtifacts, as: GoogleApi.Config.V1.Model.PreviewArtifacts)
  field(:previewMode)
  field(:serviceAccount)
  field(:state)
  field(:terraformBlueprint, as: GoogleApi.Config.V1.Model.TerraformBlueprint)
  field(:tfErrors, as: GoogleApi.Config.V1.Model.TerraformError, type: :list)
  field(:tfVersion)
  field(:tfVersionConstraint)
  field(:workerPool)
end

defimpl Poison.Decoder, for: GoogleApi.Config.V1.Model.Preview do
  def decode(value, options) do
    GoogleApi.Config.V1.Model.Preview.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Config.V1.Model.Preview do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
