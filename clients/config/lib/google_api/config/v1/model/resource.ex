# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Config.V1.Model.Resource do
  @moduledoc """
  Resource represents a Google Cloud Platform resource actuated by IM. Resources are child resources of Revisions.

  ## Attributes

  *   `caiAssets` (*type:* `%{optional(String.t) => GoogleApi.Config.V1.Model.ResourceCAIInfo.t}`, *default:* `nil`) - Output only. Map of Cloud Asset Inventory (CAI) type to CAI info (e.g. CAI ID). CAI type format follows https://cloud.google.com/asset-inventory/docs/supported-asset-types
  *   `intent` (*type:* `String.t`, *default:* `nil`) - Output only. Intent of the resource.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Output only. Resource name. Format: `projects/{project}/locations/{location}/deployments/{deployment}/revisions/{revision}/resources/{resource}`
  *   `state` (*type:* `String.t`, *default:* `nil`) - Output only. Current state of the resource.
  *   `terraformInfo` (*type:* `GoogleApi.Config.V1.Model.ResourceTerraformInfo.t`, *default:* `nil`) - Output only. Terraform-specific info if this resource was created using Terraform.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :caiAssets =>
            %{optional(String.t()) => GoogleApi.Config.V1.Model.ResourceCAIInfo.t()} | nil,
          :intent => String.t() | nil,
          :name => String.t() | nil,
          :state => String.t() | nil,
          :terraformInfo => GoogleApi.Config.V1.Model.ResourceTerraformInfo.t() | nil
        }

  field(:caiAssets, as: GoogleApi.Config.V1.Model.ResourceCAIInfo, type: :map)
  field(:intent)
  field(:name)
  field(:state)
  field(:terraformInfo, as: GoogleApi.Config.V1.Model.ResourceTerraformInfo)
end

defimpl Poison.Decoder, for: GoogleApi.Config.V1.Model.Resource do
  def decode(value, options) do
    GoogleApi.Config.V1.Model.Resource.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Config.V1.Model.Resource do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
