# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Config.V1.Model.TerraformBlueprint do
  @moduledoc """
  TerraformBlueprint describes the source of a Terraform root module which describes the resources and configs to be deployed.

  ## Attributes

  *   `gcsSource` (*type:* `String.t`, *default:* `nil`) - URI of an object in Google Cloud Storage. Format: `gs://{bucket}/{object}` URI may also specify an object version for zipped objects. Format: `gs://{bucket}/{object}#{version}`
  *   `gitSource` (*type:* `GoogleApi.Config.V1.Model.GitSource.t`, *default:* `nil`) - URI of a public Git repo.
  *   `inputValues` (*type:* `%{optional(String.t) => GoogleApi.Config.V1.Model.TerraformVariable.t}`, *default:* `nil`) - Input variable values for the Terraform blueprint.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :gcsSource => String.t() | nil,
          :gitSource => GoogleApi.Config.V1.Model.GitSource.t() | nil,
          :inputValues =>
            %{optional(String.t()) => GoogleApi.Config.V1.Model.TerraformVariable.t()} | nil
        }

  field(:gcsSource)
  field(:gitSource, as: GoogleApi.Config.V1.Model.GitSource)
  field(:inputValues, as: GoogleApi.Config.V1.Model.TerraformVariable, type: :map)
end

defimpl Poison.Decoder, for: GoogleApi.Config.V1.Model.TerraformBlueprint do
  def decode(value, options) do
    GoogleApi.Config.V1.Model.TerraformBlueprint.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Config.V1.Model.TerraformBlueprint do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
