# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.APIM.V1alpha.Model.ApiOperation do
  @moduledoc """
  Message describing ApiOperation object

  ## Attributes

  *   `count` (*type:* `String.t`, *default:* `nil`) - The number of occurrences of this API Operation.
  *   `firstSeenTime` (*type:* `DateTime.t`, *default:* `nil`) - First seen time stamp
  *   `httpOperation` (*type:* `GoogleApi.APIM.V1alpha.Model.HttpOperation.t`, *default:* `nil`) - An HTTP Operation.
  *   `lastSeenTime` (*type:* `DateTime.t`, *default:* `nil`) - Last seen time stamp
  *   `name` (*type:* `String.t`, *default:* `nil`) - Identifier. Name of resource
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :count => String.t() | nil,
          :firstSeenTime => DateTime.t() | nil,
          :httpOperation => GoogleApi.APIM.V1alpha.Model.HttpOperation.t() | nil,
          :lastSeenTime => DateTime.t() | nil,
          :name => String.t() | nil
        }

  field(:count)
  field(:firstSeenTime, as: DateTime)
  field(:httpOperation, as: GoogleApi.APIM.V1alpha.Model.HttpOperation)
  field(:lastSeenTime, as: DateTime)
  field(:name)
end

defimpl Poison.Decoder, for: GoogleApi.APIM.V1alpha.Model.ApiOperation do
  def decode(value, options) do
    GoogleApi.APIM.V1alpha.Model.ApiOperation.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.APIM.V1alpha.Model.ApiOperation do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
