# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContactCenterInsights.V1.Model.GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest do
  @moduledoc """
  The request to export insights.

  ## Attributes

  *   `bigQueryDestination` (*type:* `GoogleApi.ContactCenterInsights.V1.Model.GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination.t`, *default:* `nil`) - Specified if sink is a BigQuery table.
  *   `filter` (*type:* `String.t`, *default:* `nil`) - A filter to reduce results to a specific subset. Useful for exporting conversations with specific properties.
  *   `kmsKey` (*type:* `String.t`, *default:* `nil`) - A fully qualified KMS key name for BigQuery tables protected by CMEK. Format: projects/{project}/locations/{location}/keyRings/{keyring}/cryptoKeys/{key}/cryptoKeyVersions/{version}
  *   `parent` (*type:* `String.t`, *default:* `nil`) - Required. The parent resource to export data from.
  *   `writeDisposition` (*type:* `String.t`, *default:* `nil`) - Options for what to do if the destination table already exists.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :bigQueryDestination =>
            GoogleApi.ContactCenterInsights.V1.Model.GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination.t()
            | nil,
          :filter => String.t() | nil,
          :kmsKey => String.t() | nil,
          :parent => String.t() | nil,
          :writeDisposition => String.t() | nil
        }

  field(:bigQueryDestination,
    as:
      GoogleApi.ContactCenterInsights.V1.Model.GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequestBigQueryDestination
  )

  field(:filter)
  field(:kmsKey)
  field(:parent)
  field(:writeDisposition)
end

defimpl Poison.Decoder,
  for:
    GoogleApi.ContactCenterInsights.V1.Model.GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest do
  def decode(value, options) do
    GoogleApi.ContactCenterInsights.V1.Model.GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for:
    GoogleApi.ContactCenterInsights.V1.Model.GoogleCloudContactcenterinsightsV1alpha1ExportInsightsDataRequest do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
