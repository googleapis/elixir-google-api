# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContactCenterInsights.V1.Model.GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats do
  @moduledoc """
  Aggregated statistics about an issue model.

  ## Attributes

  *   `analyzedConversationsCount` (*type:* `String.t`, *default:* `nil`) - Number of conversations the issue model has analyzed at this point in time.
  *   `issueStats` (*type:* `%{optional(String.t) => GoogleApi.ContactCenterInsights.V1.Model.GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats.t}`, *default:* `nil`) - Statistics on each issue. Key is the issue's resource name.
  *   `unclassifiedConversationsCount` (*type:* `String.t`, *default:* `nil`) - Number of analyzed conversations for which no issue was applicable at this point in time.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :analyzedConversationsCount => String.t() | nil,
          :issueStats =>
            %{
              optional(String.t()) =>
                GoogleApi.ContactCenterInsights.V1.Model.GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats.t()
            }
            | nil,
          :unclassifiedConversationsCount => String.t() | nil
        }

  field(:analyzedConversationsCount)

  field(:issueStats,
    as:
      GoogleApi.ContactCenterInsights.V1.Model.GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStatsIssueStats,
    type: :map
  )

  field(:unclassifiedConversationsCount)
end

defimpl Poison.Decoder,
  for:
    GoogleApi.ContactCenterInsights.V1.Model.GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats do
  def decode(value, options) do
    GoogleApi.ContactCenterInsights.V1.Model.GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for:
    GoogleApi.ContactCenterInsights.V1.Model.GoogleCloudContactcenterinsightsV1alpha1IssueModelLabelStats do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
