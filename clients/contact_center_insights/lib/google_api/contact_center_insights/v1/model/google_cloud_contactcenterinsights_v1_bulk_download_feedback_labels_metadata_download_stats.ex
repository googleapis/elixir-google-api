# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.ContactCenterInsights.V1.Model.GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsMetadataDownloadStats do
  @moduledoc """
  Statistics for BulkDownloadFeedbackLabels operation.

  ## Attributes

  *   `fileNames` (*type:* `list(String.t)`, *default:* `nil`) - Output only. Full name of the files written to Cloud storage.
  *   `processedObjectCount` (*type:* `integer()`, *default:* `nil`) - The number of objects processed during the download operation.
  *   `successfulDownloadCount` (*type:* `integer()`, *default:* `nil`) - The number of new feedback labels downloaded during this operation. Different from "processed" because some labels might not be downloaded because an error.
  *   `totalFilesWritten` (*type:* `integer()`, *default:* `nil`) - Total number of files written to the provided Cloud Storage bucket.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :fileNames => list(String.t()) | nil,
          :processedObjectCount => integer() | nil,
          :successfulDownloadCount => integer() | nil,
          :totalFilesWritten => integer() | nil
        }

  field(:fileNames, type: :list)
  field(:processedObjectCount)
  field(:successfulDownloadCount)
  field(:totalFilesWritten)
end

defimpl Poison.Decoder,
  for:
    GoogleApi.ContactCenterInsights.V1.Model.GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsMetadataDownloadStats do
  def decode(value, options) do
    GoogleApi.ContactCenterInsights.V1.Model.GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsMetadataDownloadStats.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for:
    GoogleApi.ContactCenterInsights.V1.Model.GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsMetadataDownloadStats do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
