# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudIdentity.V1.Model.GoogleAppsCloudidentityDevicesV1LookupSelfDeviceUsersResponse do
  @moduledoc """
  Response containing resource names of the DeviceUsers associated with the caller's credentials.

  ## Attributes

  *   `customer` (*type:* `String.t`, *default:* `nil`) - The obfuscated customer Id that may be passed back to other Devices API methods such as List, Get, etc.
  *   `names` (*type:* `list(String.t)`, *default:* `nil`) - [Resource names](https://cloud.google.com/apis/design/resource_names) of the DeviceUsers in the format: `devices/{device}/deviceUsers/{user_resource}`, where device is the unique ID assigned to a Device and user_resource is the unique user ID
  *   `nextPageToken` (*type:* `String.t`, *default:* `nil`) - Token to retrieve the next page of results. Empty if there are no more results.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :customer => String.t() | nil,
          :names => list(String.t()) | nil,
          :nextPageToken => String.t() | nil
        }

  field(:customer)
  field(:names, type: :list)
  field(:nextPageToken)
end

defimpl Poison.Decoder,
  for:
    GoogleApi.CloudIdentity.V1.Model.GoogleAppsCloudidentityDevicesV1LookupSelfDeviceUsersResponse do
  def decode(value, options) do
    GoogleApi.CloudIdentity.V1.Model.GoogleAppsCloudidentityDevicesV1LookupSelfDeviceUsersResponse.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for:
    GoogleApi.CloudIdentity.V1.Model.GoogleAppsCloudidentityDevicesV1LookupSelfDeviceUsersResponse do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
