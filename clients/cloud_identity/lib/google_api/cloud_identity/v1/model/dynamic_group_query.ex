# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.CloudIdentity.V1.Model.DynamicGroupQuery do
  @moduledoc """
  Defines a query on a resource.

  ## Attributes

  *   `query` (*type:* `String.t`, *default:* `nil`) - Query that determines the memberships of the dynamic group. Examples: All users with at least one `organizations.department` of engineering. `user.organizations.exists(org, org.department=='engineering')` All users with at least one location that has `area` of `foo` and `building_id` of `bar`. `user.locations.exists(loc, loc.area=='foo' && loc.building_id=='bar')` All users with any variation of the name John Doe (case-insensitive queries add `equalsIgnoreCase()` to the value being queried). `user.name.value.equalsIgnoreCase('jOhn DoE')`
  *   `resourceType` (*type:* `String.t`, *default:* `nil`) - Resource type for the Dynamic Group Query
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :query => String.t() | nil,
          :resourceType => String.t() | nil
        }

  field(:query)
  field(:resourceType)
end

defimpl Poison.Decoder, for: GoogleApi.CloudIdentity.V1.Model.DynamicGroupQuery do
  def decode(value, options) do
    GoogleApi.CloudIdentity.V1.Model.DynamicGroupQuery.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudIdentity.V1.Model.DynamicGroupQuery do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
