# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Datastore.V1.Model.RunQueryResponse do
  @moduledoc """
  The response for Datastore.RunQuery.

  ## Attributes

  *   `batch` (*type:* `GoogleApi.Datastore.V1.Model.QueryResultBatch.t`, *default:* `nil`) - A batch of query results. This is always present unless running a query under explain-only mode: RunQueryRequest.explain_options was provided and ExplainOptions.analyze was set to false.
  *   `explainMetrics` (*type:* `GoogleApi.Datastore.V1.Model.ExplainMetrics.t`, *default:* `nil`) - Query explain metrics. This is only present when the RunQueryRequest.explain_options is provided, and it is sent only once with the last response in the stream.
  *   `query` (*type:* `GoogleApi.Datastore.V1.Model.Query.t`, *default:* `nil`) - The parsed form of the `GqlQuery` from the request, if it was set.
  *   `transaction` (*type:* `String.t`, *default:* `nil`) - The identifier of the transaction that was started as part of this RunQuery request. Set only when ReadOptions.new_transaction was set in RunQueryRequest.read_options.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :batch => GoogleApi.Datastore.V1.Model.QueryResultBatch.t() | nil,
          :explainMetrics => GoogleApi.Datastore.V1.Model.ExplainMetrics.t() | nil,
          :query => GoogleApi.Datastore.V1.Model.Query.t() | nil,
          :transaction => String.t() | nil
        }

  field(:batch, as: GoogleApi.Datastore.V1.Model.QueryResultBatch)
  field(:explainMetrics, as: GoogleApi.Datastore.V1.Model.ExplainMetrics)
  field(:query, as: GoogleApi.Datastore.V1.Model.Query)
  field(:transaction)
end

defimpl Poison.Decoder, for: GoogleApi.Datastore.V1.Model.RunQueryResponse do
  def decode(value, options) do
    GoogleApi.Datastore.V1.Model.RunQueryResponse.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Datastore.V1.Model.RunQueryResponse do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
