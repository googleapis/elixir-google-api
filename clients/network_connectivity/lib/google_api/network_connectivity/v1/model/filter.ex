# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.NetworkConnectivity.V1.Model.Filter do
  @moduledoc """
  Filter matches L4 traffic.

  ## Attributes

  *   `destRange` (*type:* `String.t`, *default:* `nil`) - Optional. The destination IP range of outgoing packets that this policy-based route applies to. Default is "0.0.0.0/0" if protocol version is IPv4.
  *   `ipProtocol` (*type:* `String.t`, *default:* `nil`) - Optional. The IP protocol that this policy-based route applies to. Valid values are 'TCP', 'UDP', and 'ALL'. Default is 'ALL'.
  *   `protocolVersion` (*type:* `String.t`, *default:* `nil`) - Required. Internet protocol versions this policy-based route applies to. For this version, only IPV4 is supported. IPV6 is supported in preview.
  *   `srcRange` (*type:* `String.t`, *default:* `nil`) - Optional. The source IP range of outgoing packets that this policy-based route applies to. Default is "0.0.0.0/0" if protocol version is IPv4.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :destRange => String.t() | nil,
          :ipProtocol => String.t() | nil,
          :protocolVersion => String.t() | nil,
          :srcRange => String.t() | nil
        }

  field(:destRange)
  field(:ipProtocol)
  field(:protocolVersion)
  field(:srcRange)
end

defimpl Poison.Decoder, for: GoogleApi.NetworkConnectivity.V1.Model.Filter do
  def decode(value, options) do
    GoogleApi.NetworkConnectivity.V1.Model.Filter.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.NetworkConnectivity.V1.Model.Filter do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
