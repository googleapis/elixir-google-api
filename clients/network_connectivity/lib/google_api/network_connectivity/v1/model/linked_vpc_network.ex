# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.NetworkConnectivity.V1.Model.LinkedVpcNetwork do
  @moduledoc """
  An existing VPC network.

  ## Attributes

  *   `excludeExportRanges` (*type:* `list(String.t)`, *default:* `nil`) - Optional. IP ranges encompassing the subnets to be excluded from peering.
  *   `includeExportRanges` (*type:* `list(String.t)`, *default:* `nil`) - Optional. IP ranges allowed to be included from peering.
  *   `producerVpcSpokes` (*type:* `list(String.t)`, *default:* `nil`) - Output only. The list of Producer VPC spokes that this VPC spoke is a service consumer VPC spoke for. These producer VPCs are connected through VPC peering to this spoke's backing VPC network.
  *   `uri` (*type:* `String.t`, *default:* `nil`) - Required. The URI of the VPC network resource.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :excludeExportRanges => list(String.t()) | nil,
          :includeExportRanges => list(String.t()) | nil,
          :producerVpcSpokes => list(String.t()) | nil,
          :uri => String.t() | nil
        }

  field(:excludeExportRanges, type: :list)
  field(:includeExportRanges, type: :list)
  field(:producerVpcSpokes, type: :list)
  field(:uri)
end

defimpl Poison.Decoder, for: GoogleApi.NetworkConnectivity.V1.Model.LinkedVpcNetwork do
  def decode(value, options) do
    GoogleApi.NetworkConnectivity.V1.Model.LinkedVpcNetwork.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.NetworkConnectivity.V1.Model.LinkedVpcNetwork do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
