# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.NetworkConnectivity.V1.Model.ConsumerPscConnection do
  @moduledoc """
  PSC connection details on consumer side.

  ## Attributes

  *   `error` (*type:* `GoogleApi.NetworkConnectivity.V1.Model.GoogleRpcStatus.t`, *default:* `nil`) - The most recent error during operating this connection.
  *   `errorInfo` (*type:* `GoogleApi.NetworkConnectivity.V1.Model.GoogleRpcErrorInfo.t`, *default:* `nil`) - Output only. The error info for the latest error during operating this connection.
  *   `errorType` (*type:* `String.t`, *default:* `nil`) - The error type indicates whether the error is consumer facing, producer facing or system internal.
  *   `forwardingRule` (*type:* `String.t`, *default:* `nil`) - The URI of the consumer forwarding rule created. Example: projects/{projectNumOrId}/regions/us-east1/networks/{resourceId}.
  *   `gceOperation` (*type:* `String.t`, *default:* `nil`) - The last Compute Engine operation to setup PSC connection.
  *   `ip` (*type:* `String.t`, *default:* `nil`) - The IP literal allocated on the consumer network for the PSC forwarding rule that is created to connect to the producer service attachment in this service connection map.
  *   `network` (*type:* `String.t`, *default:* `nil`) - The consumer network whose PSC forwarding rule is connected to the service attachments in this service connection map. Note that the network could be on a different project (shared VPC).
  *   `producerInstanceId` (*type:* `String.t`, *default:* `nil`) - Immutable. An immutable identifier for the producer instance.
  *   `project` (*type:* `String.t`, *default:* `nil`) - The consumer project whose PSC forwarding rule is connected to the service attachments in this service connection map.
  *   `pscConnectionId` (*type:* `String.t`, *default:* `nil`) - The PSC connection id of the PSC forwarding rule connected to the service attachments in this service connection map.
  *   `selectedSubnetwork` (*type:* `String.t`, *default:* `nil`) - Output only. The URI of the selected subnetwork selected to allocate IP address for this connection.
  *   `serviceAttachmentUri` (*type:* `String.t`, *default:* `nil`) - The URI of a service attachment which is the target of the PSC connection.
  *   `state` (*type:* `String.t`, *default:* `nil`) - The state of the PSC connection.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :error => GoogleApi.NetworkConnectivity.V1.Model.GoogleRpcStatus.t() | nil,
          :errorInfo => GoogleApi.NetworkConnectivity.V1.Model.GoogleRpcErrorInfo.t() | nil,
          :errorType => String.t() | nil,
          :forwardingRule => String.t() | nil,
          :gceOperation => String.t() | nil,
          :ip => String.t() | nil,
          :network => String.t() | nil,
          :producerInstanceId => String.t() | nil,
          :project => String.t() | nil,
          :pscConnectionId => String.t() | nil,
          :selectedSubnetwork => String.t() | nil,
          :serviceAttachmentUri => String.t() | nil,
          :state => String.t() | nil
        }

  field(:error, as: GoogleApi.NetworkConnectivity.V1.Model.GoogleRpcStatus)
  field(:errorInfo, as: GoogleApi.NetworkConnectivity.V1.Model.GoogleRpcErrorInfo)
  field(:errorType)
  field(:forwardingRule)
  field(:gceOperation)
  field(:ip)
  field(:network)
  field(:producerInstanceId)
  field(:project)
  field(:pscConnectionId)
  field(:selectedSubnetwork)
  field(:serviceAttachmentUri)
  field(:state)
end

defimpl Poison.Decoder, for: GoogleApi.NetworkConnectivity.V1.Model.ConsumerPscConnection do
  def decode(value, options) do
    GoogleApi.NetworkConnectivity.V1.Model.ConsumerPscConnection.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.NetworkConnectivity.V1.Model.ConsumerPscConnection do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
