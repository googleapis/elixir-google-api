# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.PrivateCA.V1.Model.RsaKeyType do
  @moduledoc """
  Describes an RSA key that may be used in a Certificate issued from a CaPool.

  ## Attributes

  *   `maxModulusSize` (*type:* `String.t`, *default:* `nil`) - Optional. The maximum allowed RSA modulus size (inclusive), in bits. If this is not set, or if set to zero, the service will not enforce an explicit upper bound on RSA modulus sizes.
  *   `minModulusSize` (*type:* `String.t`, *default:* `nil`) - Optional. The minimum allowed RSA modulus size (inclusive), in bits. If this is not set, or if set to zero, the service-level min RSA modulus size will continue to apply.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :maxModulusSize => String.t() | nil,
          :minModulusSize => String.t() | nil
        }

  field(:maxModulusSize)
  field(:minModulusSize)
end

defimpl Poison.Decoder, for: GoogleApi.PrivateCA.V1.Model.RsaKeyType do
  def decode(value, options) do
    GoogleApi.PrivateCA.V1.Model.RsaKeyType.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.PrivateCA.V1.Model.RsaKeyType do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
