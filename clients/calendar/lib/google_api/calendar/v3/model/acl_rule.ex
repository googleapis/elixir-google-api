# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Calendar.V3.Model.AclRule do
  @moduledoc """


  ## Attributes

  *   `etag` (*type:* `String.t`, *default:* `nil`) - ETag of the resource.
  *   `id` (*type:* `String.t`, *default:* `nil`) - Identifier of the Access Control List (ACL) rule. See Sharing calendars.
  *   `kind` (*type:* `String.t`, *default:* `calendar#aclRule`) - Type of the resource ("calendar#aclRule").
  *   `role` (*type:* `String.t`, *default:* `nil`) - The role assigned to the scope. Possible values are:  
      - "none" - Provides no access. 
      - "freeBusyReader" - Provides read access to free/busy information. 
      - "reader" - Provides read access to the calendar. Private events will appear to users with reader access, but event details will be hidden. 
      - "writer" - Provides read and write access to the calendar. Private events will appear to users with writer access, and event details will be visible. Provides read access to the calendar's ACLs. 
      - "owner" - Provides ownership of the calendar. This role has all of the permissions of the writer role with the additional ability to manipulate ACLs.
  *   `scope` (*type:* `GoogleApi.Calendar.V3.Model.AclRuleScope.t`, *default:* `nil`) - The extent to which calendar access is granted by this ACL rule.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :etag => String.t() | nil,
          :id => String.t() | nil,
          :kind => String.t() | nil,
          :role => String.t() | nil,
          :scope => GoogleApi.Calendar.V3.Model.AclRuleScope.t() | nil
        }

  field(:etag)
  field(:id)
  field(:kind)
  field(:role)
  field(:scope, as: GoogleApi.Calendar.V3.Model.AclRuleScope)
end

defimpl Poison.Decoder, for: GoogleApi.Calendar.V3.Model.AclRule do
  def decode(value, options) do
    GoogleApi.Calendar.V3.Model.AclRule.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Calendar.V3.Model.AclRule do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
