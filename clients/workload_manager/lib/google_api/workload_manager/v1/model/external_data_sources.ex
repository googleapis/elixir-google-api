# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.WorkloadManager.V1.Model.ExternalDataSources do
  @moduledoc """
  Message for external data sources

  ## Attributes

  *   `assetType` (*type:* `String.t`, *default:* `nil`) - Required. The asset type of the external data source must be one of go/cai-asset-types
  *   `name` (*type:* `String.t`, *default:* `nil`) - Optional. Name of external data source. The name will be used inside the rego/sql to refer the external data
  *   `type` (*type:* `String.t`, *default:* `nil`) - Required. Type of external data source
  *   `uri` (*type:* `String.t`, *default:* `nil`) - Required. URI of external data source. example of bq table {project_ID}.{dataset_ID}.{table_ID}
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :assetType => String.t() | nil,
          :name => String.t() | nil,
          :type => String.t() | nil,
          :uri => String.t() | nil
        }

  field(:assetType)
  field(:name)
  field(:type)
  field(:uri)
end

defimpl Poison.Decoder, for: GoogleApi.WorkloadManager.V1.Model.ExternalDataSources do
  def decode(value, options) do
    GoogleApi.WorkloadManager.V1.Model.ExternalDataSources.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.WorkloadManager.V1.Model.ExternalDataSources do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
