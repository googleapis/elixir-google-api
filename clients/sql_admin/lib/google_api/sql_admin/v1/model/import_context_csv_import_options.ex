# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.SQLAdmin.V1.Model.ImportContextCsvImportOptions do
  @moduledoc """
  Options for importing data as CSV.

  ## Attributes

  *   `columns` (*type:* `list(String.t)`, *default:* `nil`) - The columns to which CSV data is imported. If not specified, all columns of the database table are loaded with CSV data.
  *   `escapeCharacter` (*type:* `String.t`, *default:* `nil`) - Specifies the character that should appear before a data character that needs to be escaped.
  *   `fieldsTerminatedBy` (*type:* `String.t`, *default:* `nil`) - Specifies the character that separates columns within each row (line) of the file.
  *   `linesTerminatedBy` (*type:* `String.t`, *default:* `nil`) - This is used to separate lines. If a line does not contain all fields, the rest of the columns are set to their default values.
  *   `quoteCharacter` (*type:* `String.t`, *default:* `nil`) - Specifies the quoting character to be used when a data value is quoted.
  *   `table` (*type:* `String.t`, *default:* `nil`) - The table to which CSV data is imported.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :columns => list(String.t()) | nil,
          :escapeCharacter => String.t() | nil,
          :fieldsTerminatedBy => String.t() | nil,
          :linesTerminatedBy => String.t() | nil,
          :quoteCharacter => String.t() | nil,
          :table => String.t() | nil
        }

  field(:columns, type: :list)
  field(:escapeCharacter)
  field(:fieldsTerminatedBy)
  field(:linesTerminatedBy)
  field(:quoteCharacter)
  field(:table)
end

defimpl Poison.Decoder, for: GoogleApi.SQLAdmin.V1.Model.ImportContextCsvImportOptions do
  def decode(value, options) do
    GoogleApi.SQLAdmin.V1.Model.ImportContextCsvImportOptions.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.SQLAdmin.V1.Model.ImportContextCsvImportOptions do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
