# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.SQLAdmin.V1beta4.Model.SslCertsInsertResponse do
  @moduledoc """
  SslCert insert response.

  ## Attributes

  *   `clientCert` (*type:* `GoogleApi.SQLAdmin.V1beta4.Model.SslCertDetail.t`, *default:* `nil`) - The new client certificate and private key.
  *   `kind` (*type:* `String.t`, *default:* `nil`) - This is always `sql#sslCertsInsert`.
  *   `operation` (*type:* `GoogleApi.SQLAdmin.V1beta4.Model.Operation.t`, *default:* `nil`) - The operation to track the ssl certs insert request.
  *   `serverCaCert` (*type:* `GoogleApi.SQLAdmin.V1beta4.Model.SslCert.t`, *default:* `nil`) - The server Certificate Authority's certificate. If this is missing you can force a new one to be generated by calling resetSslConfig method on instances resource.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :clientCert => GoogleApi.SQLAdmin.V1beta4.Model.SslCertDetail.t() | nil,
          :kind => String.t() | nil,
          :operation => GoogleApi.SQLAdmin.V1beta4.Model.Operation.t() | nil,
          :serverCaCert => GoogleApi.SQLAdmin.V1beta4.Model.SslCert.t() | nil
        }

  field(:clientCert, as: GoogleApi.SQLAdmin.V1beta4.Model.SslCertDetail)
  field(:kind)
  field(:operation, as: GoogleApi.SQLAdmin.V1beta4.Model.Operation)
  field(:serverCaCert, as: GoogleApi.SQLAdmin.V1beta4.Model.SslCert)
end

defimpl Poison.Decoder, for: GoogleApi.SQLAdmin.V1beta4.Model.SslCertsInsertResponse do
  def decode(value, options) do
    GoogleApi.SQLAdmin.V1beta4.Model.SslCertsInsertResponse.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.SQLAdmin.V1beta4.Model.SslCertsInsertResponse do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
