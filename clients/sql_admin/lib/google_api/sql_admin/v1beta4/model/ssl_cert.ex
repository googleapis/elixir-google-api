# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.SQLAdmin.V1beta4.Model.SslCert do
  @moduledoc """
  SslCerts Resource

  ## Attributes

  *   `cert` (*type:* `String.t`, *default:* `nil`) - PEM representation.
  *   `certSerialNumber` (*type:* `String.t`, *default:* `nil`) - Serial number, as extracted from the certificate.
  *   `commonName` (*type:* `String.t`, *default:* `nil`) - User supplied name. Constrained to [a-zA-Z.-_ ]+.
  *   `createTime` (*type:* `DateTime.t`, *default:* `nil`) - The time when the certificate was created in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example **2012-11-15T16:19:00.094Z**.
  *   `expirationTime` (*type:* `DateTime.t`, *default:* `nil`) - The time when the certificate expires in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example **2012-11-15T16:19:00.094Z**.
  *   `instance` (*type:* `String.t`, *default:* `nil`) - Name of the database instance.
  *   `kind` (*type:* `String.t`, *default:* `nil`) - This is always **sql#sslCert**.
  *   `selfLink` (*type:* `String.t`, *default:* `nil`) - The URI of this resource.
  *   `sha1Fingerprint` (*type:* `String.t`, *default:* `nil`) - Sha1 Fingerprint.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :cert => String.t() | nil,
          :certSerialNumber => String.t() | nil,
          :commonName => String.t() | nil,
          :createTime => DateTime.t() | nil,
          :expirationTime => DateTime.t() | nil,
          :instance => String.t() | nil,
          :kind => String.t() | nil,
          :selfLink => String.t() | nil,
          :sha1Fingerprint => String.t() | nil
        }

  field(:cert)
  field(:certSerialNumber)
  field(:commonName)
  field(:createTime, as: DateTime)
  field(:expirationTime, as: DateTime)
  field(:instance)
  field(:kind)
  field(:selfLink)
  field(:sha1Fingerprint)
end

defimpl Poison.Decoder, for: GoogleApi.SQLAdmin.V1beta4.Model.SslCert do
  def decode(value, options) do
    GoogleApi.SQLAdmin.V1beta4.Model.SslCert.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.SQLAdmin.V1beta4.Model.SslCert do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
