# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.SQLAdmin.V1beta4.Model.PscAutoConnectionConfig do
  @moduledoc """
  Settings for an automatically-setup Private Service Connect consumer endpoint that is used to connect to a Cloud SQL instance.

  ## Attributes

  *   `consumerNetwork` (*type:* `String.t`, *default:* `nil`) - The consumer network of this consumer endpoint. This must be a resource path that includes both the host project and the network name. For example, `projects/project1/global/networks/network1`. The consumer host project of this network might be different from the consumer service project.
  *   `consumerNetworkStatus` (*type:* `String.t`, *default:* `nil`) - The connection policy status of the consumer network.
  *   `consumerProject` (*type:* `String.t`, *default:* `nil`) - This is the project ID of consumer service project of this consumer endpoint. Optional. This is only applicable if consumer_network is a shared vpc network.
  *   `ipAddress` (*type:* `String.t`, *default:* `nil`) - The IP address of the consumer endpoint.
  *   `status` (*type:* `String.t`, *default:* `nil`) - The connection status of the consumer endpoint.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :consumerNetwork => String.t() | nil,
          :consumerNetworkStatus => String.t() | nil,
          :consumerProject => String.t() | nil,
          :ipAddress => String.t() | nil,
          :status => String.t() | nil
        }

  field(:consumerNetwork)
  field(:consumerNetworkStatus)
  field(:consumerProject)
  field(:ipAddress)
  field(:status)
end

defimpl Poison.Decoder, for: GoogleApi.SQLAdmin.V1beta4.Model.PscAutoConnectionConfig do
  def decode(value, options) do
    GoogleApi.SQLAdmin.V1beta4.Model.PscAutoConnectionConfig.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.SQLAdmin.V1beta4.Model.PscAutoConnectionConfig do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
