# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.SQLAdmin.V1beta4.Model.ReplicaConfiguration do
  @moduledoc """
  Read-replica configuration for connecting to the primary instance.

  ## Attributes

  *   `failoverTarget` (*type:* `boolean()`, *default:* `nil`) - Specifies if the replica is the failover target. If the field is set to **true** the replica will be designated as a failover replica. In case the primary instance fails, the replica instance will be promoted as the new primary instance. Only one replica can be specified as failover target, and the replica has to be in different zone with the primary instance.
  *   `kind` (*type:* `String.t`, *default:* `nil`) - This is always **sql#replicaConfiguration**.
  *   `mysqlReplicaConfiguration` (*type:* `GoogleApi.SQLAdmin.V1beta4.Model.MySqlReplicaConfiguration.t`, *default:* `nil`) - MySQL specific configuration when replicating from a MySQL on-premises primary instance. Replication configuration information such as the username, password, certificates, and keys are not stored in the instance metadata. The configuration information is used only to set up the replication connection and is stored by MySQL in a file named **master.info** in the data directory.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :failoverTarget => boolean() | nil,
          :kind => String.t() | nil,
          :mysqlReplicaConfiguration =>
            GoogleApi.SQLAdmin.V1beta4.Model.MySqlReplicaConfiguration.t() | nil
        }

  field(:failoverTarget)
  field(:kind)

  field(:mysqlReplicaConfiguration, as: GoogleApi.SQLAdmin.V1beta4.Model.MySqlReplicaConfiguration)
end

defimpl Poison.Decoder, for: GoogleApi.SQLAdmin.V1beta4.Model.ReplicaConfiguration do
  def decode(value, options) do
    GoogleApi.SQLAdmin.V1beta4.Model.ReplicaConfiguration.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.SQLAdmin.V1beta4.Model.ReplicaConfiguration do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
