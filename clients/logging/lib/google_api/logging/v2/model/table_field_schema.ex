# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Logging.V2.Model.TableFieldSchema do
  @moduledoc """
  A field in TableSchema. The fields describe the static fields in the LogEntry. Any dynamic fields generated by the customer in fields like labels and jsonPayload are not listed in the schema as they use a native JSON type field.

  ## Attributes

  *   `description` (*type:* `String.t`, *default:* `nil`) - Optional. The field description.
  *   `fields` (*type:* `list(GoogleApi.Logging.V2.Model.TableFieldSchema.t)`, *default:* `nil`) - Optional. Describes the nested schema fields if the type property is set to RECORD.
  *   `mode` (*type:* `String.t`, *default:* `nil`) - Optional. The field mode. Possible values include NULLABLE, REQUIRED and REPEATED. The default value is NULLABLE.
  *   `name` (*type:* `String.t`, *default:* `nil`) - Required. The field name corresponding to fields in the LogEntry.
  *   `type` (*type:* `String.t`, *default:* `nil`) - Required. The field data type. Possible values include: STRING INTEGER (or INT64) FLOAT (or FLOAT64) BOOLEAN (or BOOL) TIMESTAMP RECORD (or STRUCT)Use of RECORD/STRUT indicates that the field contains a nested schema.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :description => String.t() | nil,
          :fields => list(GoogleApi.Logging.V2.Model.TableFieldSchema.t()) | nil,
          :mode => String.t() | nil,
          :name => String.t() | nil,
          :type => String.t() | nil
        }

  field(:description)
  field(:fields, as: GoogleApi.Logging.V2.Model.TableFieldSchema, type: :list)
  field(:mode)
  field(:name)
  field(:type)
end

defimpl Poison.Decoder, for: GoogleApi.Logging.V2.Model.TableFieldSchema do
  def decode(value, options) do
    GoogleApi.Logging.V2.Model.TableFieldSchema.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Logging.V2.Model.TableFieldSchema do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
