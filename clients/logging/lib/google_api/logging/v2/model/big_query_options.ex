# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Logging.V2.Model.BigQueryOptions do
  @moduledoc """
  Options that change functionality of a sink exporting data to BigQuery.

  ## Attributes

  *   `usePartitionedTables` (*type:* `boolean()`, *default:* `nil`) - Optional. Whether to use BigQuery's partition tables (https://cloud.google.com/bigquery/docs/partitioned-tables). By default, Cloud Logging creates dated tables based on the log entries' timestamps, e.g. syslog_20170523. With partitioned tables the date suffix is no longer present and special query syntax (https://cloud.google.com/bigquery/docs/querying-partitioned-tables) has to be used instead. In both cases, tables are sharded based on UTC timezone.
  *   `usesTimestampColumnPartitioning` (*type:* `boolean()`, *default:* `nil`) - Output only. True if new timestamp column based partitioning is in use, false if legacy ingestion-time partitioning is in use.All new sinks will have this field set true and will use timestamp column based partitioning. If use_partitioned_tables is false, this value has no meaning and will be false. Legacy sinks using partitioned tables will have this field set to false.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :usePartitionedTables => boolean() | nil,
          :usesTimestampColumnPartitioning => boolean() | nil
        }

  field(:usePartitionedTables)
  field(:usesTimestampColumnPartitioning)
end

defimpl Poison.Decoder, for: GoogleApi.Logging.V2.Model.BigQueryOptions do
  def decode(value, options) do
    GoogleApi.Logging.V2.Model.BigQueryOptions.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Logging.V2.Model.BigQueryOptions do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
